import { apiClient, type Options } from '../../client'
export const listChaosMeshOrgV1Alpha1AwsChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1AwsChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1AwsChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/awschaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1AzureChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1AzureChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1AzureChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/azurechaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1BlockChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1BlockChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1BlockChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/blockchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1DnsChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1DnsChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1DnsChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/dnschaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1GcpChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1GcpChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1GcpChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/gcpchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1HttpChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1HttpChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1HttpChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/httpchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1IoChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1IoChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1IoChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/iochaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1JvmChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1JvmChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1JvmChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/jvmchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1KernelChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1KernelChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1KernelChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/kernelchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedAwsChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedAwsChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedAwsChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedAwsChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedAwsChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedAwsChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedAwsChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/awschaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedAzureChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedAzureChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedAzureChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedAzureChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedAzureChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedAzureChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedAzureChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/azurechaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedBlockChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedBlockChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedBlockChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedBlockChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedBlockChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedBlockChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedBlockChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/blockchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedDnsChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedDnsChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedDnsChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedDnsChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedDnsChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedDnsChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedDnsChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/dnschaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedGcpChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedGcpChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedGcpChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedGcpChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedGcpChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedGcpChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedGcpChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/gcpchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedHttpChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedHttpChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedHttpChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedHttpChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedHttpChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedHttpChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedHttpChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/httpchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedIoChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedIoChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedIoChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedIoChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedIoChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedIoChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedIoChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/iochaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedJvmChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedJvmChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedJvmChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedJvmChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedJvmChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedJvmChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedJvmChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/jvmchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedKernelChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedKernelChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedKernelChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedKernelChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedKernelChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedKernelChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedKernelChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/kernelchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedNetworkChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedNetworkChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedNetworkChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedNetworkChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedNetworkChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedNetworkChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedNetworkChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/networkchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineChaos =
  (
    args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineChaosApiArg,
    options?: Options
  ) => {
    return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineChaosApiResponse>(
      {
        path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos`,
        method: 'DELETE',
        params: {
          pretty: args.pretty,
          allowWatchBookmarks: args.allowWatchBookmarks,
          continue: args['continue'],
          fieldSelector: args.fieldSelector,
          labelSelector: args.labelSelector,
          limit: args.limit,
          resourceVersion: args.resourceVersion,
          resourceVersionMatch: args.resourceVersionMatch,
          sendInitialEvents: args.sendInitialEvents,
          timeoutSeconds: args.timeoutSeconds,
          watch: args.watch,
        },
      },
      options
    )
  }
export const readChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachinechaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedPhysicalMachine = (
  args: ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedPhysicalMachine = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachine = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPhysicalMachine = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachine = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachine = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPhysicalMachine = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/physicalmachines/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedPodChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedPodChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedPodChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedPodChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedPodHttpChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedPodHttpChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedPodHttpChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodHttpChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedPodHttpChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodHttpChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatus = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}/status`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatus = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}/status`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatus = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podhttpchaos/${args.name}/status`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedPodIoChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedPodIoChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedPodIoChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodIoChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodIoChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedPodIoChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodIoChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatus = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}/status`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatus = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}/status`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatus = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podiochaos/${args.name}/status`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedPodNetworkChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedPodNetworkChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedPodNetworkChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodNetworkChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedPodNetworkChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatus = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}/status`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatus = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}/status`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatus = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/podnetworkchaos/${args.name}/status`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedSchedule = (
  args: ListChaosMeshOrgV1Alpha1NamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedSchedule = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedSchedule = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedSchedule = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedSchedule = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedSchedule = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedSchedule = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedScheduleApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/schedules/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedStatusCheck = (
  args: ListChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedStatusCheck = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedStatusCheck = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedStatusCheck = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedStatusCheck = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedStatusCheck = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedStatusCheck = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedStatusCheckStatus = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}/status`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedStatusCheckStatus = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}/status`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedStatusCheckStatus = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/statuschecks/${args.name}/status`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedStressChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedStressChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedStressChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedStressChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedStressChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedStressChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedStressChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/stresschaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedTimeChaos = (
  args: ListChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedTimeChaos = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedTimeChaos = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedTimeChaos = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedTimeChaos = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedTimeChaos = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedTimeChaos = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/timechaos/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedWorkflowNode = (
  args: ListChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedWorkflowNode = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowNode = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedWorkflowNode = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedWorkflowNode = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedWorkflowNode = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedWorkflowNode = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatus = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}/status`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatus = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}/status`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatus = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflownodes/${args.name}/status`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NamespacedWorkflow = (
  args: ListChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows`,
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const createChaosMeshOrgV1Alpha1NamespacedWorkflow = (
  args: CreateChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<CreateChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows`,
      method: 'POST',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflow = (
  args: DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows`,
      method: 'DELETE',
      params: {
        pretty: args.pretty,
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedWorkflow = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedWorkflow = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const deleteChaosMeshOrgV1Alpha1NamespacedWorkflow = (
  args: DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}`,
      method: 'DELETE',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        gracePeriodSeconds: args.gracePeriodSeconds,
        orphanDependents: args.orphanDependents,
        propagationPolicy: args.propagationPolicy,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedWorkflow = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const readChaosMeshOrgV1Alpha1NamespacedWorkflowStatus = (
  args: ReadChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiArg,
  options?: Options
) => {
  return apiClient<ReadChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}/status`,
      params: { pretty: args.pretty, resourceVersion: args.resourceVersion },
    },
    options
  )
}
export const replaceChaosMeshOrgV1Alpha1NamespacedWorkflowStatus = (
  args: ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiArg,
  options?: Options
) => {
  return apiClient<ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}/status`,
      method: 'PUT',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
      },
    },
    options
  )
}
export const patchChaosMeshOrgV1Alpha1NamespacedWorkflowStatus = (
  args: PatchChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiArg,
  options?: Options
) => {
  return apiClient<PatchChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/namespaces/${args['namespace']}/workflows/${args.name}/status`,
      method: 'PATCH',
      body: args.body,
      contentType: args.contentType,
      params: {
        pretty: args.pretty,
        dryRun: args.dryRun,
        fieldManager: args.fieldManager,
        fieldValidation: args.fieldValidation,
        force: args.force,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1NetworkChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1NetworkChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1NetworkChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/networkchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1PhysicalMachineChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1PhysicalMachineChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1PhysicalMachineChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/physicalmachinechaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1PhysicalMachineForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1PhysicalMachineForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1PhysicalMachineForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/physicalmachines`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1PodChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1PodChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1PodChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/podchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1PodHttpChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1PodHttpChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1PodHttpChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/podhttpchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1PodIoChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1PodIoChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1PodIoChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/podiochaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1PodNetworkChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1PodNetworkChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1PodNetworkChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/podnetworkchaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1ScheduleForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1ScheduleForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1ScheduleForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/schedules`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1StatusCheckForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1StatusCheckForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1StatusCheckForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/statuschecks`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1StressChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1StressChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1StressChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/stresschaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1TimeChaosForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1TimeChaosForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1TimeChaosForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/timechaos`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1WorkflowNodeForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1WorkflowNodeForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1WorkflowNodeForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/workflownodes`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export const listChaosMeshOrgV1Alpha1WorkflowForAllNamespaces = (
  args: ListChaosMeshOrgV1Alpha1WorkflowForAllNamespacesApiArg,
  options?: Options
) => {
  return apiClient<ListChaosMeshOrgV1Alpha1WorkflowForAllNamespacesApiResponse>(
    {
      path: `/apis/chaos-mesh.org/v1alpha1/workflows`,
      params: {
        allowWatchBookmarks: args.allowWatchBookmarks,
        continue: args['continue'],
        fieldSelector: args.fieldSelector,
        labelSelector: args.labelSelector,
        limit: args.limit,
        pretty: args.pretty,
        resourceVersion: args.resourceVersion,
        resourceVersionMatch: args.resourceVersionMatch,
        sendInitialEvents: args.sendInitialEvents,
        timeoutSeconds: args.timeoutSeconds,
        watch: args.watch,
      },
    },
    options
  )
}
export type ListChaosMeshOrgV1Alpha1AwsChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AwsChaosList
export type ListChaosMeshOrgV1Alpha1AwsChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1AzureChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AzureChaosList
export type ListChaosMeshOrgV1Alpha1AzureChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1BlockChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1BlockChaosList
export type ListChaosMeshOrgV1Alpha1BlockChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1DnsChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1DnsChaosList
export type ListChaosMeshOrgV1Alpha1DnsChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1GcpChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1GcpChaosList
export type ListChaosMeshOrgV1Alpha1GcpChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1HttpChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1HttpChaosList
export type ListChaosMeshOrgV1Alpha1HttpChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1IoChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1IoChaosList
export type ListChaosMeshOrgV1Alpha1IoChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1JvmChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1JvmChaosList
export type ListChaosMeshOrgV1Alpha1JvmChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1KernelChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1KernelChaosList
export type ListChaosMeshOrgV1Alpha1KernelChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AwsChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1AwsChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1AwsChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1AwsChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1AwsChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1AwsChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAwsChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAwsChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AwsChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg = {
  /** name of the AWSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1AwsChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1AwsChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg = {
  /** name of the AWSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1AwsChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1AwsChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg = {
  /** name of the AWSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedAwsChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AwsChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedAwsChaosApiArg = {
  /** name of the AWSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1AwsChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AzureChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1AzureChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1AzureChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1AzureChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1AzureChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1AzureChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAzureChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedAzureChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AzureChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg = {
  /** name of the AzureChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1AzureChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1AzureChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg = {
  /** name of the AzureChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1AzureChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1AzureChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg = {
  /** name of the AzureChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedAzureChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1AzureChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedAzureChaosApiArg = {
  /** name of the AzureChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1AzureChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1BlockChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1BlockChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1BlockChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1BlockChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1BlockChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1BlockChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedBlockChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedBlockChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1BlockChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg = {
  /** name of the BlockChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1BlockChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1BlockChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg = {
  /** name of the BlockChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1BlockChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1BlockChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg = {
  /** name of the BlockChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedBlockChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1BlockChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedBlockChaosApiArg = {
  /** name of the BlockChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1BlockChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1DnsChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1DnsChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1DnsChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1DnsChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1DnsChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1DnsChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedDnsChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedDnsChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1DnsChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg = {
  /** name of the DNSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1DnsChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1DnsChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg = {
  /** name of the DNSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1DnsChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1DnsChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg = {
  /** name of the DNSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedDnsChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1DnsChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedDnsChaosApiArg = {
  /** name of the DNSChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1DnsChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1GcpChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1GcpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1GcpChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1GcpChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1GcpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1GcpChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedGcpChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedGcpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1GcpChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg = {
  /** name of the GCPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1GcpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1GcpChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg = {
  /** name of the GCPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1GcpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1GcpChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg = {
  /** name of the GCPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedGcpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1GcpChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedGcpChaosApiArg = {
  /** name of the GCPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1GcpChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1HttpChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1HttpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1HttpChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1HttpChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1HttpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1HttpChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedHttpChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedHttpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1HttpChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg = {
  /** name of the HTTPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1HttpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1HttpChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg = {
  /** name of the HTTPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1HttpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1HttpChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg = {
  /** name of the HTTPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedHttpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1HttpChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedHttpChaosApiArg = {
  /** name of the HTTPChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1HttpChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1IoChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1IoChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1IoChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1IoChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1IoChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1IoChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedIoChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedIoChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1IoChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg = {
  /** name of the IOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1IoChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1IoChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg = {
  /** name of the IOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1IoChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1IoChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg = {
  /** name of the IOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedIoChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1IoChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedIoChaosApiArg = {
  /** name of the IOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1IoChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1JvmChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1JvmChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1JvmChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1JvmChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1JvmChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1JvmChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedJvmChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedJvmChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1JvmChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg = {
  /** name of the JVMChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1JvmChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1JvmChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg = {
  /** name of the JVMChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1JvmChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1JvmChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg = {
  /** name of the JVMChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedJvmChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1JvmChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedJvmChaosApiArg = {
  /** name of the JVMChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1JvmChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1KernelChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1KernelChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1KernelChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1KernelChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1KernelChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1KernelChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedKernelChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedKernelChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1KernelChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg = {
  /** name of the KernelChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1KernelChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1KernelChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg = {
  /** name of the KernelChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1KernelChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1KernelChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg = {
  /** name of the KernelChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedKernelChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1KernelChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedKernelChaosApiArg = {
  /** name of the KernelChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1KernelChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1NetworkChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1NetworkChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1NetworkChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1NetworkChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1NetworkChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1NetworkChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedNetworkChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedNetworkChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1NetworkChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg = {
  /** name of the NetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1NetworkChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1NetworkChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg = {
  /** name of the NetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1NetworkChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1NetworkChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg = {
  /** name of the NetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1NetworkChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedNetworkChaosApiArg = {
  /** name of the NetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1NetworkChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachineChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PhysicalMachineChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PhysicalMachineChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1PhysicalMachineChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PhysicalMachineChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PhysicalMachineChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineChaosApiArg =
  {
    /** object name and auth scope, such as for teams and projects */
    namespace: string
    /** If 'true', then the output is pretty printed. */
    pretty?: string
    /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
    allowWatchBookmarks?: boolean
    /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
    continue?: string
    /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
    fieldSelector?: string
    /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
    labelSelector?: string
    /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
    limit?: number
    /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersion?: string
    /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersionMatch?: string
    /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
    sendInitialEvents?: boolean
    /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
    timeoutSeconds?: number
    /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
    watch?: boolean
  }
export type ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachineChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg = {
  /** name of the PhysicalMachineChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PhysicalMachineChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PhysicalMachineChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg = {
  /** name of the PhysicalMachineChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PhysicalMachineChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PhysicalMachineChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg = {
  /** name of the PhysicalMachineChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachineChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineChaosApiArg = {
  /** name of the PhysicalMachineChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PhysicalMachineChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachineList
export type ListChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PhysicalMachine
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PhysicalMachine
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1PhysicalMachine
export type CreateChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PhysicalMachine
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PhysicalMachine
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPhysicalMachineApiArg =
  {
    /** object name and auth scope, such as for teams and projects */
    namespace: string
    /** If 'true', then the output is pretty printed. */
    pretty?: string
    /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
    allowWatchBookmarks?: boolean
    /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
    continue?: string
    /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
    fieldSelector?: string
    /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
    labelSelector?: string
    /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
    limit?: number
    /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersion?: string
    /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersionMatch?: string
    /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
    sendInitialEvents?: boolean
    /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
    timeoutSeconds?: number
    /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
    watch?: boolean
  }
export type ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachine
export type ReadChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg = {
  /** name of the PhysicalMachine */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PhysicalMachine
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PhysicalMachine
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg = {
  /** name of the PhysicalMachine */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PhysicalMachine
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PhysicalMachine
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg = {
  /** name of the PhysicalMachine */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachine
export type PatchChaosMeshOrgV1Alpha1NamespacedPhysicalMachineApiArg = {
  /** name of the PhysicalMachine */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PhysicalMachine
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1PodChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg = {
  /** name of the PodChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg = {
  /** name of the PodChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg = {
  /** name of the PodChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodChaosApiArg = {
  /** name of the PodChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodHttpChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodHttpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodHttpChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1PodHttpChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodHttpChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodHttpChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodHttpChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodHttpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodHttpChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodHttpChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodHttpChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodHttpChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodHttpChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodHttpChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodHttpChaosStatusApiArg = {
  /** name of the PodHttpChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodHttpChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodIoChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodIoChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodIoChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1PodIoChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodIoChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodIoChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodIoChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodIoChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodIoChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodIoChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodIoChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodIoChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodIoChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodIoChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodIoChaosStatusApiArg = {
  /** name of the PodIOChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodIoChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodNetworkChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodNetworkChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodNetworkChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedPodNetworkChaosApiArg =
  {
    /** object name and auth scope, such as for teams and projects */
    namespace: string
    /** If 'true', then the output is pretty printed. */
    pretty?: string
    /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
    allowWatchBookmarks?: boolean
    /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
    continue?: string
    /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
    fieldSelector?: string
    /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
    labelSelector?: string
    /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
    limit?: number
    /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersion?: string
    /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersionMatch?: string
    /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
    sendInitialEvents?: boolean
    /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
    timeoutSeconds?: number
    /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
    watch?: boolean
  }
export type ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodNetworkChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1PodNetworkChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodNetworkChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedPodNetworkChaosStatusApiArg = {
  /** name of the PodNetworkChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1PodNetworkChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1ScheduleList
export type ListChaosMeshOrgV1Alpha1NamespacedScheduleApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1Schedule
    | /** status 201 Created */ OrgChaosMeshV1Alpha1Schedule
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1Schedule
export type CreateChaosMeshOrgV1Alpha1NamespacedScheduleApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1Schedule
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1Schedule
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedScheduleApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedScheduleApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1Schedule
export type ReadChaosMeshOrgV1Alpha1NamespacedScheduleApiArg = {
  /** name of the Schedule */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1Schedule
    | /** status 201 Created */ OrgChaosMeshV1Alpha1Schedule
export type ReplaceChaosMeshOrgV1Alpha1NamespacedScheduleApiArg = {
  /** name of the Schedule */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1Schedule
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1Schedule
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedScheduleApiArg = {
  /** name of the Schedule */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedScheduleApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1Schedule
export type PatchChaosMeshOrgV1Alpha1NamespacedScheduleApiArg = {
  /** name of the Schedule */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1Schedule
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StatusCheckList
export type ListChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1StatusCheck
    | /** status 201 Created */ OrgChaosMeshV1Alpha1StatusCheck
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1StatusCheck
export type CreateChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStatusCheckApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStatusCheckApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StatusCheck
export type ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1StatusCheck
    | /** status 201 Created */ OrgChaosMeshV1Alpha1StatusCheck
export type ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StatusCheck
export type PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StatusCheck
export type ReadChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1StatusCheck
    | /** status 201 Created */ OrgChaosMeshV1Alpha1StatusCheck
export type ReplaceChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StatusCheck
export type PatchChaosMeshOrgV1Alpha1NamespacedStatusCheckStatusApiArg = {
  /** name of the StatusCheck */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1StatusCheck
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StressChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1StressChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1StressChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1StressChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1StressChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1StressChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStressChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedStressChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StressChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg = {
  /** name of the StressChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1StressChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1StressChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg = {
  /** name of the StressChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1StressChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1StressChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg = {
  /** name of the StressChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedStressChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StressChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedStressChaosApiArg = {
  /** name of the StressChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1StressChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1TimeChaosList
export type ListChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1TimeChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1TimeChaos
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1TimeChaos
export type CreateChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1TimeChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1TimeChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedTimeChaosApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedTimeChaosApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1TimeChaos
export type ReadChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg = {
  /** name of the TimeChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1TimeChaos
    | /** status 201 Created */ OrgChaosMeshV1Alpha1TimeChaos
export type ReplaceChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg = {
  /** name of the TimeChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1TimeChaos
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1TimeChaos
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg = {
  /** name of the TimeChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedTimeChaosApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1TimeChaos
export type PatchChaosMeshOrgV1Alpha1NamespacedTimeChaosApiArg = {
  /** name of the TimeChaos */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1TimeChaos
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowNodeList
export type ListChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1WorkflowNode
    | /** status 201 Created */ OrgChaosMeshV1Alpha1WorkflowNode
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1WorkflowNode
export type CreateChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowNodeApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowNodeApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowNode
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1WorkflowNode
    | /** status 201 Created */ OrgChaosMeshV1Alpha1WorkflowNode
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowNode
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowNode
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1WorkflowNode
    | /** status 201 Created */ OrgChaosMeshV1Alpha1WorkflowNode
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowNode
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowNodeStatusApiArg = {
  /** name of the WorkflowNode */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1WorkflowNode
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowList
export type ListChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type CreateChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1Workflow
    | /** status 201 Created */ OrgChaosMeshV1Alpha1Workflow
    | /** status 202 Accepted */ OrgChaosMeshV1Alpha1Workflow
export type CreateChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1Workflow
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1Workflow
    }
)
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowApiResponse =
  /** status 200 OK */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1CollectionNamespacedWorkflowApiArg = {
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1Workflow
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1Workflow
    | /** status 201 Created */ OrgChaosMeshV1Alpha1Workflow
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1Workflow
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1Workflow
    }
)
export type DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse =
  /** status 200 OK */
    | IoK8SApimachineryPkgApisMetaV1Status
    | /** status 202 Accepted */ IoK8SApimachineryPkgApisMetaV1Status
export type DeleteChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately. */
  gracePeriodSeconds?: number
  /** Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both. */
  orphanDependents?: boolean
  /** Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground. */
  propagationPolicy?: string
} & (
  | {
      contentType: 'application/json'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
  | {
      contentType: 'application/yaml'
      body: IoK8SApimachineryPkgApisMetaV1DeleteOptions
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1Workflow
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1Workflow
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1Workflow
export type ReadChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
}
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiResponse =
  /** status 200 OK */
    | OrgChaosMeshV1Alpha1Workflow
    | /** status 201 Created */ OrgChaosMeshV1Alpha1Workflow
export type ReplaceChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
} & (
  | {
      contentType: 'application/json'
      body: OrgChaosMeshV1Alpha1Workflow
    }
  | {
      contentType: 'application/yaml'
      body: OrgChaosMeshV1Alpha1Workflow
    }
)
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1Workflow
export type PatchChaosMeshOrgV1Alpha1NamespacedWorkflowStatusApiArg = {
  /** name of the Workflow */
  name: string
  /** object name and auth scope, such as for teams and projects */
  namespace: string
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed */
  dryRun?: string
  /** fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch). */
  fieldManager?: string
  /** fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered. */
  fieldValidation?: string
  /** Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests. */
  force?: boolean
} & (
  | {
      contentType: 'application/apply-patch+yaml'
      body: OrgChaosMeshV1Alpha1Workflow
    }
  | {
      contentType: 'application/json-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
  | {
      contentType: 'application/merge-patch+json'
      body: IoK8SApimachineryPkgApisMetaV1Patch
    }
)
export type ListChaosMeshOrgV1Alpha1NetworkChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1NetworkChaosList
export type ListChaosMeshOrgV1Alpha1NetworkChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1PhysicalMachineChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachineChaosList
export type ListChaosMeshOrgV1Alpha1PhysicalMachineChaosForAllNamespacesApiArg =
  {
    /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
    allowWatchBookmarks?: boolean
    /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
    continue?: string
    /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
    fieldSelector?: string
    /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
    labelSelector?: string
    /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
    limit?: number
    /** If 'true', then the output is pretty printed. */
    pretty?: string
    /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersion?: string
    /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
    resourceVersionMatch?: string
    /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
    sendInitialEvents?: boolean
    /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
    timeoutSeconds?: number
    /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
    watch?: boolean
  }
export type ListChaosMeshOrgV1Alpha1PhysicalMachineForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PhysicalMachineList
export type ListChaosMeshOrgV1Alpha1PhysicalMachineForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1PodChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodChaosList
export type ListChaosMeshOrgV1Alpha1PodChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1PodHttpChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodHttpChaosList
export type ListChaosMeshOrgV1Alpha1PodHttpChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1PodIoChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodIoChaosList
export type ListChaosMeshOrgV1Alpha1PodIoChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1PodNetworkChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1PodNetworkChaosList
export type ListChaosMeshOrgV1Alpha1PodNetworkChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1ScheduleForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1ScheduleList
export type ListChaosMeshOrgV1Alpha1ScheduleForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1StatusCheckForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StatusCheckList
export type ListChaosMeshOrgV1Alpha1StatusCheckForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1StressChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1StressChaosList
export type ListChaosMeshOrgV1Alpha1StressChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1TimeChaosForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1TimeChaosList
export type ListChaosMeshOrgV1Alpha1TimeChaosForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1WorkflowNodeForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowNodeList
export type ListChaosMeshOrgV1Alpha1WorkflowNodeForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type ListChaosMeshOrgV1Alpha1WorkflowForAllNamespacesApiResponse =
  /** status 200 OK */ OrgChaosMeshV1Alpha1WorkflowList
export type ListChaosMeshOrgV1Alpha1WorkflowForAllNamespacesApiArg = {
  /** allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. */
  allowWatchBookmarks?: boolean
  /** The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    
    This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications. */
  continue?: string
  /** A selector to restrict the list of returned objects by their fields. Defaults to everything. */
  fieldSelector?: string
  /** A selector to restrict the list of returned objects by their labels. Defaults to everything. */
  labelSelector?: string
  /** limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    
    The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned. */
  limit?: number
  /** If 'true', then the output is pretty printed. */
  pretty?: string
  /** resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersion?: string
  /** resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
    
    Defaults to unset */
  resourceVersionMatch?: string
  /** `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
    
    When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.
    
    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise. */
  sendInitialEvents?: boolean
  /** Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity. */
  timeoutSeconds?: number
  /** Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion. */
  watch?: boolean
}
export type IoK8SApimachineryPkgApisMetaV1Time = string
export type IoK8SApimachineryPkgApisMetaV1FieldsV1 = object
export type IoK8SApimachineryPkgApisMetaV1ManagedFieldsEntry = {
  apiVersion?: string | undefined
  fieldsType?: string | undefined
  fieldsV1?: IoK8SApimachineryPkgApisMetaV1FieldsV1 | undefined
  manager?: string | undefined
  operation?: string | undefined
  subresource?: string | undefined
  time?: IoK8SApimachineryPkgApisMetaV1Time | undefined
}
export type IoK8SApimachineryPkgApisMetaV1OwnerReference = {
  apiVersion: string
  blockOwnerDeletion?: boolean | undefined
  controller?: boolean | undefined
  kind: string
  name: string
  uid: string
}
export type IoK8SApimachineryPkgApisMetaV1ObjectMeta = {
  annotations?:
    | {
        [key: string]: string
      }
    | undefined
  creationTimestamp?: IoK8SApimachineryPkgApisMetaV1Time | undefined
  deletionGracePeriodSeconds?: number | undefined
  deletionTimestamp?: IoK8SApimachineryPkgApisMetaV1Time | undefined
  finalizers?: string[] | undefined
  generateName?: string | undefined
  generation?: number | undefined
  labels?:
    | {
        [key: string]: string
      }
    | undefined
  managedFields?: IoK8SApimachineryPkgApisMetaV1ManagedFieldsEntry[] | undefined
  name?: string | undefined
  namespace?: string | undefined
  ownerReferences?: IoK8SApimachineryPkgApisMetaV1OwnerReference[] | undefined
  resourceVersion?: string | undefined
  selfLink?: string | undefined
  uid?: string | undefined
}
export type OrgChaosMeshV1Alpha1AwsChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
    awsRegion: string
    deviceName?: string | undefined
    duration?: string | undefined
    ec2Instance: string
    endpoint?: string | undefined
    secretName?: string | undefined
    volumeID?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type IoK8SApimachineryPkgApisMetaV1ListMeta = {
  continue?: string | undefined
  remainingItemCount?: number | undefined
  resourceVersion?: string | undefined
  selfLink?: string | undefined
}
export type OrgChaosMeshV1Alpha1AwsChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1AwsChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1AzureChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action: 'vm-stop' | 'vm-restart' | 'disk-detach'
    diskName?: string | undefined
    duration?: string | undefined
    lun?: number | undefined
    resourceGroupName: string
    secretName?: string | undefined
    subscriptionID: string
    vmName: string
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1AzureChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1AzureChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1BlockChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action: 'delay'
    containerNames?: string[] | undefined
    delay?:
      | {
          correlation?: string | undefined
          jitter?: string | undefined
          latency?: string | undefined
        }
      | undefined
    duration?: string | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    value?: string | undefined
    volumeName: string
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
        ids?:
          | {
              [key: string]: number
            }
          | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1BlockChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1BlockChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1DnsChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action: 'error' | 'random'
    containerNames?: string[] | undefined
    duration?: string | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    patterns?: string[] | undefined
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    value?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1DnsChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1DnsChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1GcpChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action: 'node-stop' | 'node-reset' | 'disk-loss'
    deviceNames?: string[] | undefined
    duration?: string | undefined
    instance: string
    project: string
    secretName?: string | undefined
    zone: string
  }
  status?:
    | {
        attachedDiskStrings?: string[] | undefined
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1GcpChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1GcpChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1HttpChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec?:
    | {
        abort?: boolean | undefined
        code?: number | undefined
        delay?: string | undefined
        duration?: string | undefined
        method?: string | undefined
        mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
        patch?:
          | {
              body?:
                | {
                    type: string
                    value: string
                  }
                | undefined
              headers?: string[][] | undefined
              queries?: string[][] | undefined
            }
          | undefined
        path?: string | undefined
        port?: number | undefined
        replace?:
          | {
              body?: string | undefined
              code?: number | undefined
              headers?:
                | {
                    [key: string]: string
                  }
                | undefined
              method?: string | undefined
              path?: string | undefined
              queries?:
                | {
                    [key: string]: string
                  }
                | undefined
            }
          | undefined
        request_headers?:
          | {
              [key: string]: string
            }
          | undefined
        response_headers?:
          | {
              [key: string]: string
            }
          | undefined
        selector: {
          annotationSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          expressionSelectors?:
            | {
                key: string
                operator: string
                values?: string[] | undefined
              }[]
            | undefined
          fieldSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          labelSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          namespaces?: string[] | undefined
          nodeSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          nodes?: string[] | undefined
          podPhaseSelectors?: string[] | undefined
          pods?:
            | {
                [key: string]: string[]
              }
            | undefined
        }
        target: 'Request' | 'Response'
        value?: string | undefined
      }
    | undefined
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
        instances?:
          | {
              [key: string]: number
            }
          | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1HttpChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1HttpChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1IoChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec?:
    | {
        action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
        attr?:
          | {
              atime?:
                | {
                    nsec: number
                    sec: number
                  }
                | undefined
              blocks?: number | undefined
              ctime?:
                | {
                    nsec: number
                    sec: number
                  }
                | undefined
              gid?: number | undefined
              ino?: number | undefined
              kind?: string | undefined
              mtime?:
                | {
                    nsec: number
                    sec: number
                  }
                | undefined
              nlink?: number | undefined
              perm?: number | undefined
              rdev?: number | undefined
              size?: number | undefined
              uid?: number | undefined
            }
          | undefined
        containerNames?: string[] | undefined
        delay?: string | undefined
        duration?: string | undefined
        errno?: number | undefined
        methods?: string[] | undefined
        mistake?:
          | {
              filling?: ('zero' | 'random') | undefined
              maxLength?: number | undefined
              maxOccurrences?: number | undefined
            }
          | undefined
        mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
        path?: string | undefined
        percent?: number | undefined
        selector: {
          annotationSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          expressionSelectors?:
            | {
                key: string
                operator: string
                values?: string[] | undefined
              }[]
            | undefined
          fieldSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          labelSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          namespaces?: string[] | undefined
          nodeSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          nodes?: string[] | undefined
          podPhaseSelectors?: string[] | undefined
          pods?:
            | {
                [key: string]: string[]
              }
            | undefined
        }
        value?: string | undefined
        volumePath: string
      }
    | undefined
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
        instances?:
          | {
              [key: string]: number
            }
          | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1IoChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1IoChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1JvmChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec?:
    | {
        action:
          | 'latency'
          | 'return'
          | 'exception'
          | 'stress'
          | 'gc'
          | 'ruleData'
          | 'mysql'
        class?: string | undefined
        containerNames?: string[] | undefined
        cpuCount?: number | undefined
        database?: string | undefined
        duration?: string | undefined
        exception?: string | undefined
        latency?: number | undefined
        memType?: string | undefined
        method?: string | undefined
        mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
        mysqlConnectorVersion?: string | undefined
        name?: string | undefined
        pid?: number | undefined
        port?: number | undefined
        ruleData?: string | undefined
        selector: {
          annotationSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          expressionSelectors?:
            | {
                key: string
                operator: string
                values?: string[] | undefined
              }[]
            | undefined
          fieldSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          labelSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          namespaces?: string[] | undefined
          nodeSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          nodes?: string[] | undefined
          podPhaseSelectors?: string[] | undefined
          pods?:
            | {
                [key: string]: string[]
              }
            | undefined
        }
        sqlType?: string | undefined
        table?: string | undefined
        value?: string | undefined
      }
    | undefined
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1JvmChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1JvmChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1KernelChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    containerNames?: string[] | undefined
    duration?: string | undefined
    failKernRequest: {
      callchain?:
        | {
            funcname?: string | undefined
            parameters?: string | undefined
            predicate?: string | undefined
          }[]
        | undefined
      failtype: number
      headers?: string[] | undefined
      probability?: number | undefined
      times?: number | undefined
    }
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    value?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1KernelChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1KernelChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type IoK8SApimachineryPkgApisMetaV1StatusCause = {
  field?: string | undefined
  message?: string | undefined
  reason?: string | undefined
}
export type IoK8SApimachineryPkgApisMetaV1StatusDetails = {
  causes?: IoK8SApimachineryPkgApisMetaV1StatusCause[] | undefined
  group?: string | undefined
  kind?: string | undefined
  name?: string | undefined
  retryAfterSeconds?: number | undefined
  uid?: string | undefined
}
export type IoK8SApimachineryPkgApisMetaV1Status = {
  apiVersion?: string | undefined
  code?: number | undefined
  details?: IoK8SApimachineryPkgApisMetaV1StatusDetails | undefined
  kind?: string | undefined
  message?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
  reason?: string | undefined
  status?: string | undefined
}
export type IoK8SApimachineryPkgApisMetaV1Preconditions = {
  resourceVersion?: string | undefined
  uid?: string | undefined
}
export type IoK8SApimachineryPkgApisMetaV1DeleteOptions = {
  apiVersion?: string | undefined
  dryRun?: string[] | undefined
  gracePeriodSeconds?: number | undefined
  kind?: string | undefined
  orphanDependents?: boolean | undefined
  preconditions?: IoK8SApimachineryPkgApisMetaV1Preconditions | undefined
  propagationPolicy?: string | undefined
}
export type IoK8SApimachineryPkgApisMetaV1Patch = object
export type OrgChaosMeshV1Alpha1NetworkChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action:
      | 'netem'
      | 'delay'
      | 'loss'
      | 'duplicate'
      | 'corrupt'
      | 'partition'
      | 'bandwidth'
    bandwidth?:
      | {
          buffer: number
          limit: number
          minburst?: number | undefined
          peakrate?: number | undefined
          rate: string
        }
      | undefined
    corrupt?:
      | {
          correlation?: string | undefined
          corrupt: string
        }
      | undefined
    delay?:
      | {
          correlation?: string | undefined
          jitter?: string | undefined
          latency: string
          reorder?:
            | {
                correlation?: string | undefined
                gap: number
                reorder: string
              }
            | undefined
        }
      | undefined
    device?: string | undefined
    direction?: ('to' | 'from' | 'both') | undefined
    duplicate?:
      | {
          correlation?: string | undefined
          duplicate: string
        }
      | undefined
    duration?: string | undefined
    externalTargets?: string[] | undefined
    loss?:
      | {
          correlation?: string | undefined
          loss: string
        }
      | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    target?:
      | {
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    targetDevice?: string | undefined
    value?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
        instances?:
          | {
              [key: string]: number
            }
          | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1NetworkChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1NetworkChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1PhysicalMachineChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action:
      | 'stress-cpu'
      | 'stress-mem'
      | 'disk-read-payload'
      | 'disk-write-payload'
      | 'disk-fill'
      | 'network-corrupt'
      | 'network-duplicate'
      | 'network-loss'
      | 'network-delay'
      | 'network-partition'
      | 'network-dns'
      | 'network-bandwidth'
      | 'network-flood'
      | 'network-down'
      | 'process'
      | 'jvm-exception'
      | 'jvm-gc'
      | 'jvm-latency'
      | 'jvm-return'
      | 'jvm-stress'
      | 'jvm-rule-data'
      | 'jvm-mysql'
      | 'clock'
      | 'redis-expiration'
      | 'redis-penetration'
      | 'redis-cacheLimit'
      | 'redis-restart'
      | 'redis-stop'
      | 'kafka-fill'
      | 'kafka-flood'
      | 'kafka-io'
      | 'file-create'
      | 'file-modify'
      | 'file-delete'
      | 'file-rename'
      | 'file-append'
      | 'file-replace'
      | 'vm'
      | 'user_defined'
    address?: string[] | undefined
    clock?:
      | {
          'clock-ids-slice'?: string | undefined
          pid?: number | undefined
          'time-offset'?: string | undefined
        }
      | undefined
    'disk-fill'?:
      | {
          'fill-by-fallocate'?: boolean | undefined
          path?: string | undefined
          size?: string | undefined
        }
      | undefined
    'disk-read-payload'?:
      | {
          path?: string | undefined
          'payload-process-num'?: number | undefined
          size?: string | undefined
        }
      | undefined
    'disk-write-payload'?:
      | {
          path?: string | undefined
          'payload-process-num'?: number | undefined
          size?: string | undefined
        }
      | undefined
    duration?: string | undefined
    'file-append'?:
      | {
          count?: number | undefined
          data?: string | undefined
          'file-name'?: string | undefined
        }
      | undefined
    'file-create'?:
      | {
          'dir-name'?: string | undefined
          'file-name'?: string | undefined
        }
      | undefined
    'file-delete'?:
      | {
          'dir-name'?: string | undefined
          'file-name'?: string | undefined
        }
      | undefined
    'file-modify'?:
      | {
          'file-name'?: string | undefined
          privilege?: number | undefined
        }
      | undefined
    'file-rename'?:
      | {
          'dest-file'?: string | undefined
          'source-file'?: string | undefined
        }
      | undefined
    'file-replace'?:
      | {
          'dest-string'?: string | undefined
          'file-name'?: string | undefined
          line?: number | undefined
          'origin-string'?: string | undefined
        }
      | undefined
    'http-abort'?:
      | {
          code?: string | undefined
          method?: string | undefined
          path?: string | undefined
          port?: number | undefined
          proxy_ports: number[]
          target: string
        }
      | undefined
    'http-config'?:
      | {
          file_path?: string | undefined
        }
      | undefined
    'http-delay'?:
      | {
          code?: string | undefined
          delay: string
          method?: string | undefined
          path?: string | undefined
          port?: number | undefined
          proxy_ports: number[]
          target: string
        }
      | undefined
    'http-request'?:
      | {
          count?: number | undefined
          'enable-conn-pool'?: boolean | undefined
          url?: string | undefined
        }
      | undefined
    'jvm-exception'?:
      | {
          class?: string | undefined
          exception?: string | undefined
          method?: string | undefined
          pid?: number | undefined
          port?: number | undefined
        }
      | undefined
    'jvm-gc'?:
      | {
          pid?: number | undefined
          port?: number | undefined
        }
      | undefined
    'jvm-latency'?:
      | {
          class?: string | undefined
          latency?: number | undefined
          method?: string | undefined
          pid?: number | undefined
          port?: number | undefined
        }
      | undefined
    'jvm-mysql'?:
      | {
          database?: string | undefined
          exception?: string | undefined
          latency?: number | undefined
          mysqlConnectorVersion?: string | undefined
          pid?: number | undefined
          port?: number | undefined
          sqlType?: string | undefined
          table?: string | undefined
        }
      | undefined
    'jvm-return'?:
      | {
          class?: string | undefined
          method?: string | undefined
          pid?: number | undefined
          port?: number | undefined
          value?: string | undefined
        }
      | undefined
    'jvm-rule-data'?:
      | {
          pid?: number | undefined
          port?: number | undefined
          'rule-data'?: string | undefined
        }
      | undefined
    'jvm-stress'?:
      | {
          'cpu-count'?: number | undefined
          'mem-type'?: string | undefined
          pid?: number | undefined
          port?: number | undefined
        }
      | undefined
    'kafka-fill'?:
      | {
          host?: string | undefined
          maxBytes?: number | undefined
          messageSize?: number | undefined
          password?: string | undefined
          port?: number | undefined
          reloadCommand?: string | undefined
          topic?: string | undefined
          username?: string | undefined
        }
      | undefined
    'kafka-flood'?:
      | {
          host?: string | undefined
          messageSize?: number | undefined
          password?: string | undefined
          port?: number | undefined
          threads?: number | undefined
          topic?: string | undefined
          username?: string | undefined
        }
      | undefined
    'kafka-io'?:
      | {
          configFile?: string | undefined
          nonReadable?: boolean | undefined
          nonWritable?: boolean | undefined
          topic?: string | undefined
        }
      | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    'network-bandwidth'?:
      | {
          buffer: number
          device?: string | undefined
          hostname?: string | undefined
          'ip-address'?: string | undefined
          limit: number
          minburst?: number | undefined
          peakrate?: number | undefined
          rate: string
        }
      | undefined
    'network-corrupt'?:
      | {
          correlation?: string | undefined
          device?: string | undefined
          'egress-port'?: string | undefined
          hostname?: string | undefined
          'ip-address'?: string | undefined
          'ip-protocol'?: string | undefined
          percent?: string | undefined
          'source-port'?: string | undefined
        }
      | undefined
    'network-delay'?:
      | {
          'accept-tcp-flags'?: string | undefined
          correlation?: string | undefined
          device?: string | undefined
          'egress-port'?: string | undefined
          hostname?: string | undefined
          'ip-address'?: string | undefined
          'ip-protocol'?: string | undefined
          jitter?: string | undefined
          latency?: string | undefined
          'source-port'?: string | undefined
        }
      | undefined
    'network-dns'?:
      | {
          'dns-domain-name'?: string | undefined
          'dns-ip'?: string | undefined
          'dns-server'?: string | undefined
        }
      | undefined
    'network-down'?:
      | {
          device?: string | undefined
          duration?: string | undefined
        }
      | undefined
    'network-duplicate'?:
      | {
          correlation?: string | undefined
          device?: string | undefined
          'egress-port'?: string | undefined
          hostname?: string | undefined
          'ip-address'?: string | undefined
          'ip-protocol'?: string | undefined
          percent?: string | undefined
          'source-port'?: string | undefined
        }
      | undefined
    'network-flood'?:
      | {
          duration: string
          'ip-address'?: string | undefined
          parallel?: number | undefined
          port?: string | undefined
          rate: string
        }
      | undefined
    'network-loss'?:
      | {
          correlation?: string | undefined
          device?: string | undefined
          'egress-port'?: string | undefined
          hostname?: string | undefined
          'ip-address'?: string | undefined
          'ip-protocol'?: string | undefined
          percent?: string | undefined
          'source-port'?: string | undefined
        }
      | undefined
    'network-partition'?:
      | {
          'accept-tcp-flags'?: string | undefined
          device?: string | undefined
          direction?: string | undefined
          hostname?: string | undefined
          'ip-address'?: string | undefined
          'ip-protocol'?: string | undefined
        }
      | undefined
    process?:
      | {
          process?: string | undefined
          recoverCmd?: string | undefined
          signal?: number | undefined
        }
      | undefined
    'redis-cacheLimit'?:
      | {
          addr?: string | undefined
          cacheSize?: string | undefined
          password?: string | undefined
          percent?: string | undefined
        }
      | undefined
    'redis-expiration'?:
      | {
          addr?: string | undefined
          expiration?: string | undefined
          key?: string | undefined
          option?: string | undefined
          password?: string | undefined
        }
      | undefined
    'redis-penetration'?:
      | {
          addr?: string | undefined
          password?: string | undefined
          requestNum?: number | undefined
        }
      | undefined
    'redis-restart'?:
      | {
          addr?: string | undefined
          conf?: string | undefined
          flushConfig?: boolean | undefined
          password?: string | undefined
          redisPath?: boolean | undefined
        }
      | undefined
    'redis-stop'?:
      | {
          addr?: string | undefined
          conf?: string | undefined
          flushConfig?: boolean | undefined
          password?: string | undefined
          redisPath?: boolean | undefined
        }
      | undefined
    selector?:
      | {
          annotationSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          expressionSelectors?:
            | {
                key: string
                operator: string
                values?: string[] | undefined
              }[]
            | undefined
          fieldSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          labelSelectors?:
            | {
                [key: string]: string
              }
            | undefined
          namespaces?: string[] | undefined
          physicalMachines?:
            | {
                [key: string]: string[]
              }
            | undefined
        }
      | undefined
    'stress-cpu'?:
      | {
          load?: number | undefined
          options?: string[] | undefined
          workers?: number | undefined
        }
      | undefined
    'stress-mem'?:
      | {
          options?: string[] | undefined
          size?: string | undefined
        }
      | undefined
    uid?: string | undefined
    user_defined?:
      | {
          attackCmd?: string | undefined
          recoverCmd?: string | undefined
        }
      | undefined
    value?: string | undefined
    vm?:
      | {
          'vm-name'?: string | undefined
        }
      | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1PhysicalMachineChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1PhysicalMachineChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1PhysicalMachine = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    address: string
  }
}
export type OrgChaosMeshV1Alpha1PhysicalMachineList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1PhysicalMachine[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1PodChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    action: 'pod-kill' | 'pod-failure' | 'container-kill'
    containerNames?: string[] | undefined
    duration?: string | undefined
    gracePeriod?: number | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    value?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1PodChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1PodChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1PodHttpChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec?:
    | {
        rules?:
          | {
              actions: {
                abort?: boolean | undefined
                delay?: string | undefined
                patch?:
                  | {
                      body?:
                        | {
                            type: string
                            value: string
                          }
                        | undefined
                      headers?: string[][] | undefined
                      queries?: string[][] | undefined
                    }
                  | undefined
                replace?:
                  | {
                      body?: string | undefined
                      code?: number | undefined
                      headers?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                      method?: string | undefined
                      path?: string | undefined
                      queries?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                    }
                  | undefined
              }
              port: number
              selector: {
                code?: number | undefined
                method?: string | undefined
                path?: string | undefined
                port?: number | undefined
                request_headers?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                response_headers?:
                  | {
                      [key: string]: string
                    }
                  | undefined
              }
              source?: string | undefined
              target: string
            }[]
          | undefined
      }
    | undefined
  status?:
    | {
        failedMessage?: string | undefined
        observedGeneration?: number | undefined
        pid?: number | undefined
        startTime?: number | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1PodHttpChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1PodHttpChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1PodIoChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec?:
    | {
        actions?:
          | {
              atime?:
                | {
                    nsec: number
                    sec: number
                  }
                | undefined
              blocks?: number | undefined
              ctime?:
                | {
                    nsec: number
                    sec: number
                  }
                | undefined
              faults?:
                | {
                    errno: number
                    weight: number
                  }[]
                | undefined
              gid?: number | undefined
              ino?: number | undefined
              kind?: string | undefined
              latency?: string | undefined
              methods?: string[] | undefined
              mistake?:
                | {
                    filling?: ('zero' | 'random') | undefined
                    maxLength?: number | undefined
                    maxOccurrences?: number | undefined
                  }
                | undefined
              mtime?:
                | {
                    nsec: number
                    sec: number
                  }
                | undefined
              nlink?: number | undefined
              path: string
              percent: number
              perm?: number | undefined
              rdev?: number | undefined
              size?: number | undefined
              source?: string | undefined
              type: string
              uid?: number | undefined
            }[]
          | undefined
        container?: string | undefined
        volumeMountPath: string
      }
    | undefined
  status?:
    | {
        failedMessage?: string | undefined
        observedGeneration?: number | undefined
        pid?: number | undefined
        startTime?: number | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1PodIoChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1PodIoChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1PodNetworkChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    ipsets?:
      | {
          cidrAndPorts?:
            | {
                cidr: string
                port: number
              }[]
            | undefined
          cidrs?: string[] | undefined
          ipsetType: string
          name: string
          setNames?: string[] | undefined
          source: string
        }[]
      | undefined
    iptables?:
      | {
          device?: string | undefined
          direction: string
          ipsets?: (string[] | null) | undefined
          name: string
          source: string
        }[]
      | undefined
    tcs?:
      | {
          bandwidth?:
            | {
                buffer: number
                limit: number
                minburst?: number | undefined
                peakrate?: number | undefined
                rate: string
              }
            | undefined
          corrupt?:
            | {
                correlation?: string | undefined
                corrupt: string
              }
            | undefined
          delay?:
            | {
                correlation?: string | undefined
                jitter?: string | undefined
                latency: string
                reorder?:
                  | {
                      correlation?: string | undefined
                      gap: number
                      reorder: string
                    }
                  | undefined
              }
            | undefined
          device?: string | undefined
          duplicate?:
            | {
                correlation?: string | undefined
                duplicate: string
              }
            | undefined
          ipset?: string | undefined
          loss?:
            | {
                correlation?: string | undefined
                loss: string
              }
            | undefined
          source: string
          type: string
        }[]
      | undefined
  }
  status?:
    | {
        failedMessage?: string | undefined
        observedGeneration?: number | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1PodNetworkChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1PodNetworkChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1Schedule = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    awsChaos?:
      | {
          action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
          awsRegion: string
          deviceName?: string | undefined
          duration?: string | undefined
          ec2Instance: string
          endpoint?: string | undefined
          secretName?: string | undefined
          volumeID?: string | undefined
        }
      | undefined
    azureChaos?:
      | {
          action: 'vm-stop' | 'vm-restart' | 'disk-detach'
          diskName?: string | undefined
          duration?: string | undefined
          lun?: number | undefined
          resourceGroupName: string
          secretName?: string | undefined
          subscriptionID: string
          vmName: string
        }
      | undefined
    blockChaos?:
      | {
          action: 'delay'
          containerNames?: string[] | undefined
          delay?:
            | {
                correlation?: string | undefined
                jitter?: string | undefined
                latency?: string | undefined
              }
            | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
          volumeName: string
        }
      | undefined
    concurrencyPolicy?: ('Forbid' | 'Allow') | undefined
    dnsChaos?:
      | {
          action: 'error' | 'random'
          containerNames?: string[] | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          patterns?: string[] | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    gcpChaos?:
      | {
          action: 'node-stop' | 'node-reset' | 'disk-loss'
          deviceNames?: string[] | undefined
          duration?: string | undefined
          instance: string
          project: string
          secretName?: string | undefined
          zone: string
        }
      | undefined
    historyLimit?: number | undefined
    httpChaos?:
      | {
          abort?: boolean | undefined
          code?: number | undefined
          delay?: string | undefined
          duration?: string | undefined
          method?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          patch?:
            | {
                body?:
                  | {
                      type: string
                      value: string
                    }
                  | undefined
                headers?: string[][] | undefined
                queries?: string[][] | undefined
              }
            | undefined
          path?: string | undefined
          port?: number | undefined
          replace?:
            | {
                body?: string | undefined
                code?: number | undefined
                headers?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                method?: string | undefined
                path?: string | undefined
                queries?:
                  | {
                      [key: string]: string
                    }
                  | undefined
              }
            | undefined
          request_headers?:
            | {
                [key: string]: string
              }
            | undefined
          response_headers?:
            | {
                [key: string]: string
              }
            | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          target: 'Request' | 'Response'
          value?: string | undefined
        }
      | undefined
    ioChaos?:
      | {
          action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
          attr?:
            | {
                atime?:
                  | {
                      nsec: number
                      sec: number
                    }
                  | undefined
                blocks?: number | undefined
                ctime?:
                  | {
                      nsec: number
                      sec: number
                    }
                  | undefined
                gid?: number | undefined
                ino?: number | undefined
                kind?: string | undefined
                mtime?:
                  | {
                      nsec: number
                      sec: number
                    }
                  | undefined
                nlink?: number | undefined
                perm?: number | undefined
                rdev?: number | undefined
                size?: number | undefined
                uid?: number | undefined
              }
            | undefined
          containerNames?: string[] | undefined
          delay?: string | undefined
          duration?: string | undefined
          errno?: number | undefined
          methods?: string[] | undefined
          mistake?:
            | {
                filling?: ('zero' | 'random') | undefined
                maxLength?: number | undefined
                maxOccurrences?: number | undefined
              }
            | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          path?: string | undefined
          percent?: number | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
          volumePath: string
        }
      | undefined
    jvmChaos?:
      | {
          action:
            | 'latency'
            | 'return'
            | 'exception'
            | 'stress'
            | 'gc'
            | 'ruleData'
            | 'mysql'
          class?: string | undefined
          containerNames?: string[] | undefined
          cpuCount?: number | undefined
          database?: string | undefined
          duration?: string | undefined
          exception?: string | undefined
          latency?: number | undefined
          memType?: string | undefined
          method?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          mysqlConnectorVersion?: string | undefined
          name?: string | undefined
          pid?: number | undefined
          port?: number | undefined
          ruleData?: string | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          sqlType?: string | undefined
          table?: string | undefined
          value?: string | undefined
        }
      | undefined
    kernelChaos?:
      | {
          containerNames?: string[] | undefined
          duration?: string | undefined
          failKernRequest: {
            callchain?:
              | {
                  funcname?: string | undefined
                  parameters?: string | undefined
                  predicate?: string | undefined
                }[]
              | undefined
            failtype: number
            headers?: string[] | undefined
            probability?: number | undefined
            times?: number | undefined
          }
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    networkChaos?:
      | {
          action:
            | 'netem'
            | 'delay'
            | 'loss'
            | 'duplicate'
            | 'corrupt'
            | 'partition'
            | 'bandwidth'
          bandwidth?:
            | {
                buffer: number
                limit: number
                minburst?: number | undefined
                peakrate?: number | undefined
                rate: string
              }
            | undefined
          corrupt?:
            | {
                correlation?: string | undefined
                corrupt: string
              }
            | undefined
          delay?:
            | {
                correlation?: string | undefined
                jitter?: string | undefined
                latency: string
                reorder?:
                  | {
                      correlation?: string | undefined
                      gap: number
                      reorder: string
                    }
                  | undefined
              }
            | undefined
          device?: string | undefined
          direction?: ('to' | 'from' | 'both') | undefined
          duplicate?:
            | {
                correlation?: string | undefined
                duplicate: string
              }
            | undefined
          duration?: string | undefined
          externalTargets?: string[] | undefined
          loss?:
            | {
                correlation?: string | undefined
                loss: string
              }
            | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          target?:
            | {
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
              }
            | undefined
          targetDevice?: string | undefined
          value?: string | undefined
        }
      | undefined
    physicalmachineChaos?:
      | {
          action:
            | 'stress-cpu'
            | 'stress-mem'
            | 'disk-read-payload'
            | 'disk-write-payload'
            | 'disk-fill'
            | 'network-corrupt'
            | 'network-duplicate'
            | 'network-loss'
            | 'network-delay'
            | 'network-partition'
            | 'network-dns'
            | 'network-bandwidth'
            | 'network-flood'
            | 'network-down'
            | 'process'
            | 'jvm-exception'
            | 'jvm-gc'
            | 'jvm-latency'
            | 'jvm-return'
            | 'jvm-stress'
            | 'jvm-rule-data'
            | 'jvm-mysql'
            | 'clock'
            | 'redis-expiration'
            | 'redis-penetration'
            | 'redis-cacheLimit'
            | 'redis-restart'
            | 'redis-stop'
            | 'kafka-fill'
            | 'kafka-flood'
            | 'kafka-io'
            | 'file-create'
            | 'file-modify'
            | 'file-delete'
            | 'file-rename'
            | 'file-append'
            | 'file-replace'
            | 'vm'
            | 'user_defined'
          address?: string[] | undefined
          clock?:
            | {
                'clock-ids-slice'?: string | undefined
                pid?: number | undefined
                'time-offset'?: string | undefined
              }
            | undefined
          'disk-fill'?:
            | {
                'fill-by-fallocate'?: boolean | undefined
                path?: string | undefined
                size?: string | undefined
              }
            | undefined
          'disk-read-payload'?:
            | {
                path?: string | undefined
                'payload-process-num'?: number | undefined
                size?: string | undefined
              }
            | undefined
          'disk-write-payload'?:
            | {
                path?: string | undefined
                'payload-process-num'?: number | undefined
                size?: string | undefined
              }
            | undefined
          duration?: string | undefined
          'file-append'?:
            | {
                count?: number | undefined
                data?: string | undefined
                'file-name'?: string | undefined
              }
            | undefined
          'file-create'?:
            | {
                'dir-name'?: string | undefined
                'file-name'?: string | undefined
              }
            | undefined
          'file-delete'?:
            | {
                'dir-name'?: string | undefined
                'file-name'?: string | undefined
              }
            | undefined
          'file-modify'?:
            | {
                'file-name'?: string | undefined
                privilege?: number | undefined
              }
            | undefined
          'file-rename'?:
            | {
                'dest-file'?: string | undefined
                'source-file'?: string | undefined
              }
            | undefined
          'file-replace'?:
            | {
                'dest-string'?: string | undefined
                'file-name'?: string | undefined
                line?: number | undefined
                'origin-string'?: string | undefined
              }
            | undefined
          'http-abort'?:
            | {
                code?: string | undefined
                method?: string | undefined
                path?: string | undefined
                port?: number | undefined
                proxy_ports: number[]
                target: string
              }
            | undefined
          'http-config'?:
            | {
                file_path?: string | undefined
              }
            | undefined
          'http-delay'?:
            | {
                code?: string | undefined
                delay: string
                method?: string | undefined
                path?: string | undefined
                port?: number | undefined
                proxy_ports: number[]
                target: string
              }
            | undefined
          'http-request'?:
            | {
                count?: number | undefined
                'enable-conn-pool'?: boolean | undefined
                url?: string | undefined
              }
            | undefined
          'jvm-exception'?:
            | {
                class?: string | undefined
                exception?: string | undefined
                method?: string | undefined
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'jvm-gc'?:
            | {
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'jvm-latency'?:
            | {
                class?: string | undefined
                latency?: number | undefined
                method?: string | undefined
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'jvm-mysql'?:
            | {
                database?: string | undefined
                exception?: string | undefined
                latency?: number | undefined
                mysqlConnectorVersion?: string | undefined
                pid?: number | undefined
                port?: number | undefined
                sqlType?: string | undefined
                table?: string | undefined
              }
            | undefined
          'jvm-return'?:
            | {
                class?: string | undefined
                method?: string | undefined
                pid?: number | undefined
                port?: number | undefined
                value?: string | undefined
              }
            | undefined
          'jvm-rule-data'?:
            | {
                pid?: number | undefined
                port?: number | undefined
                'rule-data'?: string | undefined
              }
            | undefined
          'jvm-stress'?:
            | {
                'cpu-count'?: number | undefined
                'mem-type'?: string | undefined
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'kafka-fill'?:
            | {
                host?: string | undefined
                maxBytes?: number | undefined
                messageSize?: number | undefined
                password?: string | undefined
                port?: number | undefined
                reloadCommand?: string | undefined
                topic?: string | undefined
                username?: string | undefined
              }
            | undefined
          'kafka-flood'?:
            | {
                host?: string | undefined
                messageSize?: number | undefined
                password?: string | undefined
                port?: number | undefined
                threads?: number | undefined
                topic?: string | undefined
                username?: string | undefined
              }
            | undefined
          'kafka-io'?:
            | {
                configFile?: string | undefined
                nonReadable?: boolean | undefined
                nonWritable?: boolean | undefined
                topic?: string | undefined
              }
            | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          'network-bandwidth'?:
            | {
                buffer: number
                device?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                limit: number
                minburst?: number | undefined
                peakrate?: number | undefined
                rate: string
              }
            | undefined
          'network-corrupt'?:
            | {
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                percent?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-delay'?:
            | {
                'accept-tcp-flags'?: string | undefined
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                jitter?: string | undefined
                latency?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-dns'?:
            | {
                'dns-domain-name'?: string | undefined
                'dns-ip'?: string | undefined
                'dns-server'?: string | undefined
              }
            | undefined
          'network-down'?:
            | {
                device?: string | undefined
                duration?: string | undefined
              }
            | undefined
          'network-duplicate'?:
            | {
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                percent?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-flood'?:
            | {
                duration: string
                'ip-address'?: string | undefined
                parallel?: number | undefined
                port?: string | undefined
                rate: string
              }
            | undefined
          'network-loss'?:
            | {
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                percent?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-partition'?:
            | {
                'accept-tcp-flags'?: string | undefined
                device?: string | undefined
                direction?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
              }
            | undefined
          process?:
            | {
                process?: string | undefined
                recoverCmd?: string | undefined
                signal?: number | undefined
              }
            | undefined
          'redis-cacheLimit'?:
            | {
                addr?: string | undefined
                cacheSize?: string | undefined
                password?: string | undefined
                percent?: string | undefined
              }
            | undefined
          'redis-expiration'?:
            | {
                addr?: string | undefined
                expiration?: string | undefined
                key?: string | undefined
                option?: string | undefined
                password?: string | undefined
              }
            | undefined
          'redis-penetration'?:
            | {
                addr?: string | undefined
                password?: string | undefined
                requestNum?: number | undefined
              }
            | undefined
          'redis-restart'?:
            | {
                addr?: string | undefined
                conf?: string | undefined
                flushConfig?: boolean | undefined
                password?: string | undefined
                redisPath?: boolean | undefined
              }
            | undefined
          'redis-stop'?:
            | {
                addr?: string | undefined
                conf?: string | undefined
                flushConfig?: boolean | undefined
                password?: string | undefined
                redisPath?: boolean | undefined
              }
            | undefined
          selector?:
            | {
                annotationSelectors?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                expressionSelectors?:
                  | {
                      key: string
                      operator: string
                      values?: string[] | undefined
                    }[]
                  | undefined
                fieldSelectors?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                labelSelectors?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                namespaces?: string[] | undefined
                physicalMachines?:
                  | {
                      [key: string]: string[]
                    }
                  | undefined
              }
            | undefined
          'stress-cpu'?:
            | {
                load?: number | undefined
                options?: string[] | undefined
                workers?: number | undefined
              }
            | undefined
          'stress-mem'?:
            | {
                options?: string[] | undefined
                size?: string | undefined
              }
            | undefined
          uid?: string | undefined
          user_defined?:
            | {
                attackCmd?: string | undefined
                recoverCmd?: string | undefined
              }
            | undefined
          value?: string | undefined
          vm?:
            | {
                'vm-name'?: string | undefined
              }
            | undefined
        }
      | undefined
    podChaos?:
      | {
          action: 'pod-kill' | 'pod-failure' | 'container-kill'
          containerNames?: string[] | undefined
          duration?: string | undefined
          gracePeriod?: number | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    schedule: string
    startingDeadlineSeconds?: (number | null) | undefined
    stressChaos?:
      | {
          containerNames?: string[] | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          stressngStressors?: string | undefined
          stressors?:
            | {
                cpu?:
                  | {
                      load?: number | undefined
                      options?: string[] | undefined
                      workers: number
                    }
                  | undefined
                memory?:
                  | {
                      oomScoreAdj?: number | undefined
                      options?: string[] | undefined
                      size?: string | undefined
                      workers: number
                    }
                  | undefined
              }
            | undefined
          value?: string | undefined
        }
      | undefined
    timeChaos?:
      | {
          clockIds?: string[] | undefined
          containerNames?: string[] | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          timeOffset: string
          value?: string | undefined
        }
      | undefined
    type: string
    workflow?:
      | {
          entry: string
          templates: {
            abortWithStatusCheck?: boolean | undefined
            awsChaos?:
              | {
                  action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
                  awsRegion: string
                  deviceName?: string | undefined
                  duration?: string | undefined
                  ec2Instance: string
                  endpoint?: string | undefined
                  secretName?: string | undefined
                  volumeID?: string | undefined
                }
              | undefined
            azureChaos?:
              | {
                  action: 'vm-stop' | 'vm-restart' | 'disk-detach'
                  diskName?: string | undefined
                  duration?: string | undefined
                  lun?: number | undefined
                  resourceGroupName: string
                  secretName?: string | undefined
                  subscriptionID: string
                  vmName: string
                }
              | undefined
            blockChaos?:
              | {
                  action: 'delay'
                  containerNames?: string[] | undefined
                  delay?:
                    | {
                        correlation?: string | undefined
                        jitter?: string | undefined
                        latency?: string | undefined
                      }
                    | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                  volumeName: string
                }
              | undefined
            children?: string[] | undefined
            conditionalBranches?:
              | {
                  expression?: string | undefined
                  target: string
                }[]
              | undefined
            deadline?: string | undefined
            dnsChaos?:
              | {
                  action: 'error' | 'random'
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  patterns?: string[] | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            gcpChaos?:
              | {
                  action: 'node-stop' | 'node-reset' | 'disk-loss'
                  deviceNames?: string[] | undefined
                  duration?: string | undefined
                  instance: string
                  project: string
                  secretName?: string | undefined
                  zone: string
                }
              | undefined
            httpChaos?:
              | {
                  abort?: boolean | undefined
                  code?: number | undefined
                  delay?: string | undefined
                  duration?: string | undefined
                  method?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  patch?:
                    | {
                        body?:
                          | {
                              type: string
                              value: string
                            }
                          | undefined
                        headers?: string[][] | undefined
                        queries?: string[][] | undefined
                      }
                    | undefined
                  path?: string | undefined
                  port?: number | undefined
                  replace?:
                    | {
                        body?: string | undefined
                        code?: number | undefined
                        headers?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        method?: string | undefined
                        path?: string | undefined
                        queries?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                      }
                    | undefined
                  request_headers?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  response_headers?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  target: 'Request' | 'Response'
                  value?: string | undefined
                }
              | undefined
            ioChaos?:
              | {
                  action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
                  attr?:
                    | {
                        atime?:
                          | {
                              nsec: number
                              sec: number
                            }
                          | undefined
                        blocks?: number | undefined
                        ctime?:
                          | {
                              nsec: number
                              sec: number
                            }
                          | undefined
                        gid?: number | undefined
                        ino?: number | undefined
                        kind?: string | undefined
                        mtime?:
                          | {
                              nsec: number
                              sec: number
                            }
                          | undefined
                        nlink?: number | undefined
                        perm?: number | undefined
                        rdev?: number | undefined
                        size?: number | undefined
                        uid?: number | undefined
                      }
                    | undefined
                  containerNames?: string[] | undefined
                  delay?: string | undefined
                  duration?: string | undefined
                  errno?: number | undefined
                  methods?: string[] | undefined
                  mistake?:
                    | {
                        filling?: ('zero' | 'random') | undefined
                        maxLength?: number | undefined
                        maxOccurrences?: number | undefined
                      }
                    | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  path?: string | undefined
                  percent?: number | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                  volumePath: string
                }
              | undefined
            jvmChaos?:
              | {
                  action:
                    | 'latency'
                    | 'return'
                    | 'exception'
                    | 'stress'
                    | 'gc'
                    | 'ruleData'
                    | 'mysql'
                  class?: string | undefined
                  containerNames?: string[] | undefined
                  cpuCount?: number | undefined
                  database?: string | undefined
                  duration?: string | undefined
                  exception?: string | undefined
                  latency?: number | undefined
                  memType?: string | undefined
                  method?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  mysqlConnectorVersion?: string | undefined
                  name?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                  ruleData?: string | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  sqlType?: string | undefined
                  table?: string | undefined
                  value?: string | undefined
                }
              | undefined
            kernelChaos?:
              | {
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  failKernRequest: {
                    callchain?:
                      | {
                          funcname?: string | undefined
                          parameters?: string | undefined
                          predicate?: string | undefined
                        }[]
                      | undefined
                    failtype: number
                    headers?: string[] | undefined
                    probability?: number | undefined
                    times?: number | undefined
                  }
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            name: string
            networkChaos?:
              | {
                  action:
                    | 'netem'
                    | 'delay'
                    | 'loss'
                    | 'duplicate'
                    | 'corrupt'
                    | 'partition'
                    | 'bandwidth'
                  bandwidth?:
                    | {
                        buffer: number
                        limit: number
                        minburst?: number | undefined
                        peakrate?: number | undefined
                        rate: string
                      }
                    | undefined
                  corrupt?:
                    | {
                        correlation?: string | undefined
                        corrupt: string
                      }
                    | undefined
                  delay?:
                    | {
                        correlation?: string | undefined
                        jitter?: string | undefined
                        latency: string
                        reorder?:
                          | {
                              correlation?: string | undefined
                              gap: number
                              reorder: string
                            }
                          | undefined
                      }
                    | undefined
                  device?: string | undefined
                  direction?: ('to' | 'from' | 'both') | undefined
                  duplicate?:
                    | {
                        correlation?: string | undefined
                        duplicate: string
                      }
                    | undefined
                  duration?: string | undefined
                  externalTargets?: string[] | undefined
                  loss?:
                    | {
                        correlation?: string | undefined
                        loss: string
                      }
                    | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  target?:
                    | {
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  targetDevice?: string | undefined
                  value?: string | undefined
                }
              | undefined
            physicalmachineChaos?:
              | {
                  action:
                    | 'stress-cpu'
                    | 'stress-mem'
                    | 'disk-read-payload'
                    | 'disk-write-payload'
                    | 'disk-fill'
                    | 'network-corrupt'
                    | 'network-duplicate'
                    | 'network-loss'
                    | 'network-delay'
                    | 'network-partition'
                    | 'network-dns'
                    | 'network-bandwidth'
                    | 'network-flood'
                    | 'network-down'
                    | 'process'
                    | 'jvm-exception'
                    | 'jvm-gc'
                    | 'jvm-latency'
                    | 'jvm-return'
                    | 'jvm-stress'
                    | 'jvm-rule-data'
                    | 'jvm-mysql'
                    | 'clock'
                    | 'redis-expiration'
                    | 'redis-penetration'
                    | 'redis-cacheLimit'
                    | 'redis-restart'
                    | 'redis-stop'
                    | 'kafka-fill'
                    | 'kafka-flood'
                    | 'kafka-io'
                    | 'file-create'
                    | 'file-modify'
                    | 'file-delete'
                    | 'file-rename'
                    | 'file-append'
                    | 'file-replace'
                    | 'vm'
                    | 'user_defined'
                  address?: string[] | undefined
                  clock?:
                    | {
                        'clock-ids-slice'?: string | undefined
                        pid?: number | undefined
                        'time-offset'?: string | undefined
                      }
                    | undefined
                  'disk-fill'?:
                    | {
                        'fill-by-fallocate'?: boolean | undefined
                        path?: string | undefined
                        size?: string | undefined
                      }
                    | undefined
                  'disk-read-payload'?:
                    | {
                        path?: string | undefined
                        'payload-process-num'?: number | undefined
                        size?: string | undefined
                      }
                    | undefined
                  'disk-write-payload'?:
                    | {
                        path?: string | undefined
                        'payload-process-num'?: number | undefined
                        size?: string | undefined
                      }
                    | undefined
                  duration?: string | undefined
                  'file-append'?:
                    | {
                        count?: number | undefined
                        data?: string | undefined
                        'file-name'?: string | undefined
                      }
                    | undefined
                  'file-create'?:
                    | {
                        'dir-name'?: string | undefined
                        'file-name'?: string | undefined
                      }
                    | undefined
                  'file-delete'?:
                    | {
                        'dir-name'?: string | undefined
                        'file-name'?: string | undefined
                      }
                    | undefined
                  'file-modify'?:
                    | {
                        'file-name'?: string | undefined
                        privilege?: number | undefined
                      }
                    | undefined
                  'file-rename'?:
                    | {
                        'dest-file'?: string | undefined
                        'source-file'?: string | undefined
                      }
                    | undefined
                  'file-replace'?:
                    | {
                        'dest-string'?: string | undefined
                        'file-name'?: string | undefined
                        line?: number | undefined
                        'origin-string'?: string | undefined
                      }
                    | undefined
                  'http-abort'?:
                    | {
                        code?: string | undefined
                        method?: string | undefined
                        path?: string | undefined
                        port?: number | undefined
                        proxy_ports: number[]
                        target: string
                      }
                    | undefined
                  'http-config'?:
                    | {
                        file_path?: string | undefined
                      }
                    | undefined
                  'http-delay'?:
                    | {
                        code?: string | undefined
                        delay: string
                        method?: string | undefined
                        path?: string | undefined
                        port?: number | undefined
                        proxy_ports: number[]
                        target: string
                      }
                    | undefined
                  'http-request'?:
                    | {
                        count?: number | undefined
                        'enable-conn-pool'?: boolean | undefined
                        url?: string | undefined
                      }
                    | undefined
                  'jvm-exception'?:
                    | {
                        class?: string | undefined
                        exception?: string | undefined
                        method?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'jvm-gc'?:
                    | {
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'jvm-latency'?:
                    | {
                        class?: string | undefined
                        latency?: number | undefined
                        method?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'jvm-mysql'?:
                    | {
                        database?: string | undefined
                        exception?: string | undefined
                        latency?: number | undefined
                        mysqlConnectorVersion?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                        sqlType?: string | undefined
                        table?: string | undefined
                      }
                    | undefined
                  'jvm-return'?:
                    | {
                        class?: string | undefined
                        method?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                        value?: string | undefined
                      }
                    | undefined
                  'jvm-rule-data'?:
                    | {
                        pid?: number | undefined
                        port?: number | undefined
                        'rule-data'?: string | undefined
                      }
                    | undefined
                  'jvm-stress'?:
                    | {
                        'cpu-count'?: number | undefined
                        'mem-type'?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'kafka-fill'?:
                    | {
                        host?: string | undefined
                        maxBytes?: number | undefined
                        messageSize?: number | undefined
                        password?: string | undefined
                        port?: number | undefined
                        reloadCommand?: string | undefined
                        topic?: string | undefined
                        username?: string | undefined
                      }
                    | undefined
                  'kafka-flood'?:
                    | {
                        host?: string | undefined
                        messageSize?: number | undefined
                        password?: string | undefined
                        port?: number | undefined
                        threads?: number | undefined
                        topic?: string | undefined
                        username?: string | undefined
                      }
                    | undefined
                  'kafka-io'?:
                    | {
                        configFile?: string | undefined
                        nonReadable?: boolean | undefined
                        nonWritable?: boolean | undefined
                        topic?: string | undefined
                      }
                    | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  'network-bandwidth'?:
                    | {
                        buffer: number
                        device?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        limit: number
                        minburst?: number | undefined
                        peakrate?: number | undefined
                        rate: string
                      }
                    | undefined
                  'network-corrupt'?:
                    | {
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        percent?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-delay'?:
                    | {
                        'accept-tcp-flags'?: string | undefined
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        jitter?: string | undefined
                        latency?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-dns'?:
                    | {
                        'dns-domain-name'?: string | undefined
                        'dns-ip'?: string | undefined
                        'dns-server'?: string | undefined
                      }
                    | undefined
                  'network-down'?:
                    | {
                        device?: string | undefined
                        duration?: string | undefined
                      }
                    | undefined
                  'network-duplicate'?:
                    | {
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        percent?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-flood'?:
                    | {
                        duration: string
                        'ip-address'?: string | undefined
                        parallel?: number | undefined
                        port?: string | undefined
                        rate: string
                      }
                    | undefined
                  'network-loss'?:
                    | {
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        percent?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-partition'?:
                    | {
                        'accept-tcp-flags'?: string | undefined
                        device?: string | undefined
                        direction?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                      }
                    | undefined
                  process?:
                    | {
                        process?: string | undefined
                        recoverCmd?: string | undefined
                        signal?: number | undefined
                      }
                    | undefined
                  'redis-cacheLimit'?:
                    | {
                        addr?: string | undefined
                        cacheSize?: string | undefined
                        password?: string | undefined
                        percent?: string | undefined
                      }
                    | undefined
                  'redis-expiration'?:
                    | {
                        addr?: string | undefined
                        expiration?: string | undefined
                        key?: string | undefined
                        option?: string | undefined
                        password?: string | undefined
                      }
                    | undefined
                  'redis-penetration'?:
                    | {
                        addr?: string | undefined
                        password?: string | undefined
                        requestNum?: number | undefined
                      }
                    | undefined
                  'redis-restart'?:
                    | {
                        addr?: string | undefined
                        conf?: string | undefined
                        flushConfig?: boolean | undefined
                        password?: string | undefined
                        redisPath?: boolean | undefined
                      }
                    | undefined
                  'redis-stop'?:
                    | {
                        addr?: string | undefined
                        conf?: string | undefined
                        flushConfig?: boolean | undefined
                        password?: string | undefined
                        redisPath?: boolean | undefined
                      }
                    | undefined
                  selector?:
                    | {
                        annotationSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        expressionSelectors?:
                          | {
                              key: string
                              operator: string
                              values?: string[] | undefined
                            }[]
                          | undefined
                        fieldSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        labelSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        namespaces?: string[] | undefined
                        physicalMachines?:
                          | {
                              [key: string]: string[]
                            }
                          | undefined
                      }
                    | undefined
                  'stress-cpu'?:
                    | {
                        load?: number | undefined
                        options?: string[] | undefined
                        workers?: number | undefined
                      }
                    | undefined
                  'stress-mem'?:
                    | {
                        options?: string[] | undefined
                        size?: string | undefined
                      }
                    | undefined
                  uid?: string | undefined
                  user_defined?:
                    | {
                        attackCmd?: string | undefined
                        recoverCmd?: string | undefined
                      }
                    | undefined
                  value?: string | undefined
                  vm?:
                    | {
                        'vm-name'?: string | undefined
                      }
                    | undefined
                }
              | undefined
            podChaos?:
              | {
                  action: 'pod-kill' | 'pod-failure' | 'container-kill'
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  gracePeriod?: number | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            schedule?:
              | {
                  awsChaos?:
                    | {
                        action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
                        awsRegion: string
                        deviceName?: string | undefined
                        duration?: string | undefined
                        ec2Instance: string
                        endpoint?: string | undefined
                        secretName?: string | undefined
                        volumeID?: string | undefined
                      }
                    | undefined
                  azureChaos?:
                    | {
                        action: 'vm-stop' | 'vm-restart' | 'disk-detach'
                        diskName?: string | undefined
                        duration?: string | undefined
                        lun?: number | undefined
                        resourceGroupName: string
                        secretName?: string | undefined
                        subscriptionID: string
                        vmName: string
                      }
                    | undefined
                  blockChaos?:
                    | {
                        action: 'delay'
                        containerNames?: string[] | undefined
                        delay?:
                          | {
                              correlation?: string | undefined
                              jitter?: string | undefined
                              latency?: string | undefined
                            }
                          | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                        volumeName: string
                      }
                    | undefined
                  concurrencyPolicy?: ('Forbid' | 'Allow') | undefined
                  dnsChaos?:
                    | {
                        action: 'error' | 'random'
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        patterns?: string[] | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  gcpChaos?:
                    | {
                        action: 'node-stop' | 'node-reset' | 'disk-loss'
                        deviceNames?: string[] | undefined
                        duration?: string | undefined
                        instance: string
                        project: string
                        secretName?: string | undefined
                        zone: string
                      }
                    | undefined
                  historyLimit?: number | undefined
                  httpChaos?:
                    | {
                        abort?: boolean | undefined
                        code?: number | undefined
                        delay?: string | undefined
                        duration?: string | undefined
                        method?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        patch?:
                          | {
                              body?:
                                | {
                                    type: string
                                    value: string
                                  }
                                | undefined
                              headers?: string[][] | undefined
                              queries?: string[][] | undefined
                            }
                          | undefined
                        path?: string | undefined
                        port?: number | undefined
                        replace?:
                          | {
                              body?: string | undefined
                              code?: number | undefined
                              headers?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              method?: string | undefined
                              path?: string | undefined
                              queries?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                            }
                          | undefined
                        request_headers?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        response_headers?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        target: 'Request' | 'Response'
                        value?: string | undefined
                      }
                    | undefined
                  ioChaos?:
                    | {
                        action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
                        attr?:
                          | {
                              atime?:
                                | {
                                    nsec: number
                                    sec: number
                                  }
                                | undefined
                              blocks?: number | undefined
                              ctime?:
                                | {
                                    nsec: number
                                    sec: number
                                  }
                                | undefined
                              gid?: number | undefined
                              ino?: number | undefined
                              kind?: string | undefined
                              mtime?:
                                | {
                                    nsec: number
                                    sec: number
                                  }
                                | undefined
                              nlink?: number | undefined
                              perm?: number | undefined
                              rdev?: number | undefined
                              size?: number | undefined
                              uid?: number | undefined
                            }
                          | undefined
                        containerNames?: string[] | undefined
                        delay?: string | undefined
                        duration?: string | undefined
                        errno?: number | undefined
                        methods?: string[] | undefined
                        mistake?:
                          | {
                              filling?: ('zero' | 'random') | undefined
                              maxLength?: number | undefined
                              maxOccurrences?: number | undefined
                            }
                          | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        path?: string | undefined
                        percent?: number | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                        volumePath: string
                      }
                    | undefined
                  jvmChaos?:
                    | {
                        action:
                          | 'latency'
                          | 'return'
                          | 'exception'
                          | 'stress'
                          | 'gc'
                          | 'ruleData'
                          | 'mysql'
                        class?: string | undefined
                        containerNames?: string[] | undefined
                        cpuCount?: number | undefined
                        database?: string | undefined
                        duration?: string | undefined
                        exception?: string | undefined
                        latency?: number | undefined
                        memType?: string | undefined
                        method?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        mysqlConnectorVersion?: string | undefined
                        name?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                        ruleData?: string | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        sqlType?: string | undefined
                        table?: string | undefined
                        value?: string | undefined
                      }
                    | undefined
                  kernelChaos?:
                    | {
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        failKernRequest: {
                          callchain?:
                            | {
                                funcname?: string | undefined
                                parameters?: string | undefined
                                predicate?: string | undefined
                              }[]
                            | undefined
                          failtype: number
                          headers?: string[] | undefined
                          probability?: number | undefined
                          times?: number | undefined
                        }
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  networkChaos?:
                    | {
                        action:
                          | 'netem'
                          | 'delay'
                          | 'loss'
                          | 'duplicate'
                          | 'corrupt'
                          | 'partition'
                          | 'bandwidth'
                        bandwidth?:
                          | {
                              buffer: number
                              limit: number
                              minburst?: number | undefined
                              peakrate?: number | undefined
                              rate: string
                            }
                          | undefined
                        corrupt?:
                          | {
                              correlation?: string | undefined
                              corrupt: string
                            }
                          | undefined
                        delay?:
                          | {
                              correlation?: string | undefined
                              jitter?: string | undefined
                              latency: string
                              reorder?:
                                | {
                                    correlation?: string | undefined
                                    gap: number
                                    reorder: string
                                  }
                                | undefined
                            }
                          | undefined
                        device?: string | undefined
                        direction?: ('to' | 'from' | 'both') | undefined
                        duplicate?:
                          | {
                              correlation?: string | undefined
                              duplicate: string
                            }
                          | undefined
                        duration?: string | undefined
                        externalTargets?: string[] | undefined
                        loss?:
                          | {
                              correlation?: string | undefined
                              loss: string
                            }
                          | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        target?:
                          | {
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                            }
                          | undefined
                        targetDevice?: string | undefined
                        value?: string | undefined
                      }
                    | undefined
                  physicalmachineChaos?:
                    | {
                        action:
                          | 'stress-cpu'
                          | 'stress-mem'
                          | 'disk-read-payload'
                          | 'disk-write-payload'
                          | 'disk-fill'
                          | 'network-corrupt'
                          | 'network-duplicate'
                          | 'network-loss'
                          | 'network-delay'
                          | 'network-partition'
                          | 'network-dns'
                          | 'network-bandwidth'
                          | 'network-flood'
                          | 'network-down'
                          | 'process'
                          | 'jvm-exception'
                          | 'jvm-gc'
                          | 'jvm-latency'
                          | 'jvm-return'
                          | 'jvm-stress'
                          | 'jvm-rule-data'
                          | 'jvm-mysql'
                          | 'clock'
                          | 'redis-expiration'
                          | 'redis-penetration'
                          | 'redis-cacheLimit'
                          | 'redis-restart'
                          | 'redis-stop'
                          | 'kafka-fill'
                          | 'kafka-flood'
                          | 'kafka-io'
                          | 'file-create'
                          | 'file-modify'
                          | 'file-delete'
                          | 'file-rename'
                          | 'file-append'
                          | 'file-replace'
                          | 'vm'
                          | 'user_defined'
                        address?: string[] | undefined
                        clock?:
                          | {
                              'clock-ids-slice'?: string | undefined
                              pid?: number | undefined
                              'time-offset'?: string | undefined
                            }
                          | undefined
                        'disk-fill'?:
                          | {
                              'fill-by-fallocate'?: boolean | undefined
                              path?: string | undefined
                              size?: string | undefined
                            }
                          | undefined
                        'disk-read-payload'?:
                          | {
                              path?: string | undefined
                              'payload-process-num'?: number | undefined
                              size?: string | undefined
                            }
                          | undefined
                        'disk-write-payload'?:
                          | {
                              path?: string | undefined
                              'payload-process-num'?: number | undefined
                              size?: string | undefined
                            }
                          | undefined
                        duration?: string | undefined
                        'file-append'?:
                          | {
                              count?: number | undefined
                              data?: string | undefined
                              'file-name'?: string | undefined
                            }
                          | undefined
                        'file-create'?:
                          | {
                              'dir-name'?: string | undefined
                              'file-name'?: string | undefined
                            }
                          | undefined
                        'file-delete'?:
                          | {
                              'dir-name'?: string | undefined
                              'file-name'?: string | undefined
                            }
                          | undefined
                        'file-modify'?:
                          | {
                              'file-name'?: string | undefined
                              privilege?: number | undefined
                            }
                          | undefined
                        'file-rename'?:
                          | {
                              'dest-file'?: string | undefined
                              'source-file'?: string | undefined
                            }
                          | undefined
                        'file-replace'?:
                          | {
                              'dest-string'?: string | undefined
                              'file-name'?: string | undefined
                              line?: number | undefined
                              'origin-string'?: string | undefined
                            }
                          | undefined
                        'http-abort'?:
                          | {
                              code?: string | undefined
                              method?: string | undefined
                              path?: string | undefined
                              port?: number | undefined
                              proxy_ports: number[]
                              target: string
                            }
                          | undefined
                        'http-config'?:
                          | {
                              file_path?: string | undefined
                            }
                          | undefined
                        'http-delay'?:
                          | {
                              code?: string | undefined
                              delay: string
                              method?: string | undefined
                              path?: string | undefined
                              port?: number | undefined
                              proxy_ports: number[]
                              target: string
                            }
                          | undefined
                        'http-request'?:
                          | {
                              count?: number | undefined
                              'enable-conn-pool'?: boolean | undefined
                              url?: string | undefined
                            }
                          | undefined
                        'jvm-exception'?:
                          | {
                              class?: string | undefined
                              exception?: string | undefined
                              method?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'jvm-gc'?:
                          | {
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'jvm-latency'?:
                          | {
                              class?: string | undefined
                              latency?: number | undefined
                              method?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'jvm-mysql'?:
                          | {
                              database?: string | undefined
                              exception?: string | undefined
                              latency?: number | undefined
                              mysqlConnectorVersion?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                              sqlType?: string | undefined
                              table?: string | undefined
                            }
                          | undefined
                        'jvm-return'?:
                          | {
                              class?: string | undefined
                              method?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                              value?: string | undefined
                            }
                          | undefined
                        'jvm-rule-data'?:
                          | {
                              pid?: number | undefined
                              port?: number | undefined
                              'rule-data'?: string | undefined
                            }
                          | undefined
                        'jvm-stress'?:
                          | {
                              'cpu-count'?: number | undefined
                              'mem-type'?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'kafka-fill'?:
                          | {
                              host?: string | undefined
                              maxBytes?: number | undefined
                              messageSize?: number | undefined
                              password?: string | undefined
                              port?: number | undefined
                              reloadCommand?: string | undefined
                              topic?: string | undefined
                              username?: string | undefined
                            }
                          | undefined
                        'kafka-flood'?:
                          | {
                              host?: string | undefined
                              messageSize?: number | undefined
                              password?: string | undefined
                              port?: number | undefined
                              threads?: number | undefined
                              topic?: string | undefined
                              username?: string | undefined
                            }
                          | undefined
                        'kafka-io'?:
                          | {
                              configFile?: string | undefined
                              nonReadable?: boolean | undefined
                              nonWritable?: boolean | undefined
                              topic?: string | undefined
                            }
                          | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        'network-bandwidth'?:
                          | {
                              buffer: number
                              device?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              limit: number
                              minburst?: number | undefined
                              peakrate?: number | undefined
                              rate: string
                            }
                          | undefined
                        'network-corrupt'?:
                          | {
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              percent?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-delay'?:
                          | {
                              'accept-tcp-flags'?: string | undefined
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              jitter?: string | undefined
                              latency?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-dns'?:
                          | {
                              'dns-domain-name'?: string | undefined
                              'dns-ip'?: string | undefined
                              'dns-server'?: string | undefined
                            }
                          | undefined
                        'network-down'?:
                          | {
                              device?: string | undefined
                              duration?: string | undefined
                            }
                          | undefined
                        'network-duplicate'?:
                          | {
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              percent?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-flood'?:
                          | {
                              duration: string
                              'ip-address'?: string | undefined
                              parallel?: number | undefined
                              port?: string | undefined
                              rate: string
                            }
                          | undefined
                        'network-loss'?:
                          | {
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              percent?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-partition'?:
                          | {
                              'accept-tcp-flags'?: string | undefined
                              device?: string | undefined
                              direction?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                            }
                          | undefined
                        process?:
                          | {
                              process?: string | undefined
                              recoverCmd?: string | undefined
                              signal?: number | undefined
                            }
                          | undefined
                        'redis-cacheLimit'?:
                          | {
                              addr?: string | undefined
                              cacheSize?: string | undefined
                              password?: string | undefined
                              percent?: string | undefined
                            }
                          | undefined
                        'redis-expiration'?:
                          | {
                              addr?: string | undefined
                              expiration?: string | undefined
                              key?: string | undefined
                              option?: string | undefined
                              password?: string | undefined
                            }
                          | undefined
                        'redis-penetration'?:
                          | {
                              addr?: string | undefined
                              password?: string | undefined
                              requestNum?: number | undefined
                            }
                          | undefined
                        'redis-restart'?:
                          | {
                              addr?: string | undefined
                              conf?: string | undefined
                              flushConfig?: boolean | undefined
                              password?: string | undefined
                              redisPath?: boolean | undefined
                            }
                          | undefined
                        'redis-stop'?:
                          | {
                              addr?: string | undefined
                              conf?: string | undefined
                              flushConfig?: boolean | undefined
                              password?: string | undefined
                              redisPath?: boolean | undefined
                            }
                          | undefined
                        selector?:
                          | {
                              annotationSelectors?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              expressionSelectors?:
                                | {
                                    key: string
                                    operator: string
                                    values?: string[] | undefined
                                  }[]
                                | undefined
                              fieldSelectors?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              labelSelectors?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              namespaces?: string[] | undefined
                              physicalMachines?:
                                | {
                                    [key: string]: string[]
                                  }
                                | undefined
                            }
                          | undefined
                        'stress-cpu'?:
                          | {
                              load?: number | undefined
                              options?: string[] | undefined
                              workers?: number | undefined
                            }
                          | undefined
                        'stress-mem'?:
                          | {
                              options?: string[] | undefined
                              size?: string | undefined
                            }
                          | undefined
                        uid?: string | undefined
                        user_defined?:
                          | {
                              attackCmd?: string | undefined
                              recoverCmd?: string | undefined
                            }
                          | undefined
                        value?: string | undefined
                        vm?:
                          | {
                              'vm-name'?: string | undefined
                            }
                          | undefined
                      }
                    | undefined
                  podChaos?:
                    | {
                        action: 'pod-kill' | 'pod-failure' | 'container-kill'
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        gracePeriod?: number | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  schedule: string
                  startingDeadlineSeconds?: (number | null) | undefined
                  stressChaos?:
                    | {
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        stressngStressors?: string | undefined
                        stressors?:
                          | {
                              cpu?:
                                | {
                                    load?: number | undefined
                                    options?: string[] | undefined
                                    workers: number
                                  }
                                | undefined
                              memory?:
                                | {
                                    oomScoreAdj?: number | undefined
                                    options?: string[] | undefined
                                    size?: string | undefined
                                    workers: number
                                  }
                                | undefined
                            }
                          | undefined
                        value?: string | undefined
                      }
                    | undefined
                  timeChaos?:
                    | {
                        clockIds?: string[] | undefined
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        timeOffset: string
                        value?: string | undefined
                      }
                    | undefined
                  type: string
                }
              | undefined
            statusCheck?:
              | {
                  duration?: string | undefined
                  failureThreshold?: number | undefined
                  http?:
                    | {
                        body?: string | undefined
                        criteria: {
                          statusCode: string
                        }
                        headers?:
                          | {
                              [key: string]: string[]
                            }
                          | undefined
                        method?: ('GET' | 'POST') | undefined
                        url: string
                      }
                    | undefined
                  intervalSeconds?: number | undefined
                  mode?: ('Synchronous' | 'Continuous') | undefined
                  recordsHistoryLimit?: number | undefined
                  successThreshold?: number | undefined
                  timeoutSeconds?: number | undefined
                  type: 'HTTP'
                }
              | undefined
            stressChaos?:
              | {
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  stressngStressors?: string | undefined
                  stressors?:
                    | {
                        cpu?:
                          | {
                              load?: number | undefined
                              options?: string[] | undefined
                              workers: number
                            }
                          | undefined
                        memory?:
                          | {
                              oomScoreAdj?: number | undefined
                              options?: string[] | undefined
                              size?: string | undefined
                              workers: number
                            }
                          | undefined
                      }
                    | undefined
                  value?: string | undefined
                }
              | undefined
            task?:
              | {
                  container?:
                    | {
                        args?: string[] | undefined
                        command?: string[] | undefined
                        env?:
                          | {
                              name: string
                              value?: string | undefined
                              valueFrom?:
                                | {
                                    configMapKeyRef?:
                                      | {
                                          key: string
                                          name?: string | undefined
                                          optional?: boolean | undefined
                                        }
                                      | undefined
                                    fieldRef?:
                                      | {
                                          apiVersion?: string | undefined
                                          fieldPath: string
                                        }
                                      | undefined
                                    resourceFieldRef?:
                                      | {
                                          containerName?: string | undefined
                                          divisor?:
                                            | (number | string)
                                            | undefined
                                          resource: string
                                        }
                                      | undefined
                                    secretKeyRef?:
                                      | {
                                          key: string
                                          name?: string | undefined
                                          optional?: boolean | undefined
                                        }
                                      | undefined
                                  }
                                | undefined
                            }[]
                          | undefined
                        envFrom?:
                          | {
                              configMapRef?:
                                | {
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                              prefix?: string | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                            }[]
                          | undefined
                        image?: string | undefined
                        imagePullPolicy?: string | undefined
                        lifecycle?:
                          | {
                              postStart?:
                                | {
                                    exec?:
                                      | {
                                          command?: string[] | undefined
                                        }
                                      | undefined
                                    httpGet?:
                                      | {
                                          host?: string | undefined
                                          httpHeaders?:
                                            | {
                                                name: string
                                                value: string
                                              }[]
                                            | undefined
                                          path?: string | undefined
                                          port: number | string
                                          scheme?: string | undefined
                                        }
                                      | undefined
                                    tcpSocket?:
                                      | {
                                          host?: string | undefined
                                          port: number | string
                                        }
                                      | undefined
                                  }
                                | undefined
                              preStop?:
                                | {
                                    exec?:
                                      | {
                                          command?: string[] | undefined
                                        }
                                      | undefined
                                    httpGet?:
                                      | {
                                          host?: string | undefined
                                          httpHeaders?:
                                            | {
                                                name: string
                                                value: string
                                              }[]
                                            | undefined
                                          path?: string | undefined
                                          port: number | string
                                          scheme?: string | undefined
                                        }
                                      | undefined
                                    tcpSocket?:
                                      | {
                                          host?: string | undefined
                                          port: number | string
                                        }
                                      | undefined
                                  }
                                | undefined
                            }
                          | undefined
                        livenessProbe?:
                          | {
                              exec?:
                                | {
                                    command?: string[] | undefined
                                  }
                                | undefined
                              failureThreshold?: number | undefined
                              grpc?:
                                | {
                                    port: number
                                    service?: string | undefined
                                  }
                                | undefined
                              httpGet?:
                                | {
                                    host?: string | undefined
                                    httpHeaders?:
                                      | {
                                          name: string
                                          value: string
                                        }[]
                                      | undefined
                                    path?: string | undefined
                                    port: number | string
                                    scheme?: string | undefined
                                  }
                                | undefined
                              initialDelaySeconds?: number | undefined
                              periodSeconds?: number | undefined
                              successThreshold?: number | undefined
                              tcpSocket?:
                                | {
                                    host?: string | undefined
                                    port: number | string
                                  }
                                | undefined
                              terminationGracePeriodSeconds?: number | undefined
                              timeoutSeconds?: number | undefined
                            }
                          | undefined
                        name: string
                        ports?:
                          | {
                              containerPort: number
                              hostIP?: string | undefined
                              hostPort?: number | undefined
                              name?: string | undefined
                              protocol?: string | undefined
                            }[]
                          | undefined
                        readinessProbe?:
                          | {
                              exec?:
                                | {
                                    command?: string[] | undefined
                                  }
                                | undefined
                              failureThreshold?: number | undefined
                              grpc?:
                                | {
                                    port: number
                                    service?: string | undefined
                                  }
                                | undefined
                              httpGet?:
                                | {
                                    host?: string | undefined
                                    httpHeaders?:
                                      | {
                                          name: string
                                          value: string
                                        }[]
                                      | undefined
                                    path?: string | undefined
                                    port: number | string
                                    scheme?: string | undefined
                                  }
                                | undefined
                              initialDelaySeconds?: number | undefined
                              periodSeconds?: number | undefined
                              successThreshold?: number | undefined
                              tcpSocket?:
                                | {
                                    host?: string | undefined
                                    port: number | string
                                  }
                                | undefined
                              terminationGracePeriodSeconds?: number | undefined
                              timeoutSeconds?: number | undefined
                            }
                          | undefined
                        resources?:
                          | {
                              limits?:
                                | {
                                    [key: string]: number | string
                                  }
                                | undefined
                              requests?:
                                | {
                                    [key: string]: number | string
                                  }
                                | undefined
                            }
                          | undefined
                        securityContext?:
                          | {
                              allowPrivilegeEscalation?: boolean | undefined
                              capabilities?:
                                | {
                                    add?: string[] | undefined
                                    drop?: string[] | undefined
                                  }
                                | undefined
                              privileged?: boolean | undefined
                              procMount?: string | undefined
                              readOnlyRootFilesystem?: boolean | undefined
                              runAsGroup?: number | undefined
                              runAsNonRoot?: boolean | undefined
                              runAsUser?: number | undefined
                              seLinuxOptions?:
                                | {
                                    level?: string | undefined
                                    role?: string | undefined
                                    type?: string | undefined
                                    user?: string | undefined
                                  }
                                | undefined
                              seccompProfile?:
                                | {
                                    localhostProfile?: string | undefined
                                    type: string
                                  }
                                | undefined
                              windowsOptions?:
                                | {
                                    gmsaCredentialSpec?: string | undefined
                                    gmsaCredentialSpecName?: string | undefined
                                    hostProcess?: boolean | undefined
                                    runAsUserName?: string | undefined
                                  }
                                | undefined
                            }
                          | undefined
                        startupProbe?:
                          | {
                              exec?:
                                | {
                                    command?: string[] | undefined
                                  }
                                | undefined
                              failureThreshold?: number | undefined
                              grpc?:
                                | {
                                    port: number
                                    service?: string | undefined
                                  }
                                | undefined
                              httpGet?:
                                | {
                                    host?: string | undefined
                                    httpHeaders?:
                                      | {
                                          name: string
                                          value: string
                                        }[]
                                      | undefined
                                    path?: string | undefined
                                    port: number | string
                                    scheme?: string | undefined
                                  }
                                | undefined
                              initialDelaySeconds?: number | undefined
                              periodSeconds?: number | undefined
                              successThreshold?: number | undefined
                              tcpSocket?:
                                | {
                                    host?: string | undefined
                                    port: number | string
                                  }
                                | undefined
                              terminationGracePeriodSeconds?: number | undefined
                              timeoutSeconds?: number | undefined
                            }
                          | undefined
                        stdin?: boolean | undefined
                        stdinOnce?: boolean | undefined
                        terminationMessagePath?: string | undefined
                        terminationMessagePolicy?: string | undefined
                        tty?: boolean | undefined
                        volumeDevices?:
                          | {
                              devicePath: string
                              name: string
                            }[]
                          | undefined
                        volumeMounts?:
                          | {
                              mountPath: string
                              mountPropagation?: string | undefined
                              name: string
                              readOnly?: boolean | undefined
                              subPath?: string | undefined
                              subPathExpr?: string | undefined
                            }[]
                          | undefined
                        workingDir?: string | undefined
                      }
                    | undefined
                  volumes?:
                    | {
                        awsElasticBlockStore?:
                          | {
                              fsType?: string | undefined
                              partition?: number | undefined
                              readOnly?: boolean | undefined
                              volumeID: string
                            }
                          | undefined
                        azureDisk?:
                          | {
                              cachingMode?: string | undefined
                              diskName: string
                              diskURI: string
                              fsType?: string | undefined
                              kind?: string | undefined
                              readOnly?: boolean | undefined
                            }
                          | undefined
                        azureFile?:
                          | {
                              readOnly?: boolean | undefined
                              secretName: string
                              shareName: string
                            }
                          | undefined
                        cephfs?:
                          | {
                              monitors: string[]
                              path?: string | undefined
                              readOnly?: boolean | undefined
                              secretFile?: string | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                              user?: string | undefined
                            }
                          | undefined
                        cinder?:
                          | {
                              fsType?: string | undefined
                              readOnly?: boolean | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                              volumeID: string
                            }
                          | undefined
                        configMap?:
                          | {
                              defaultMode?: number | undefined
                              items?:
                                | {
                                    key: string
                                    mode?: number | undefined
                                    path: string
                                  }[]
                                | undefined
                              name?: string | undefined
                              optional?: boolean | undefined
                            }
                          | undefined
                        csi?:
                          | {
                              driver: string
                              fsType?: string | undefined
                              nodePublishSecretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                              readOnly?: boolean | undefined
                              volumeAttributes?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                            }
                          | undefined
                        downwardAPI?:
                          | {
                              defaultMode?: number | undefined
                              items?:
                                | {
                                    fieldRef?:
                                      | {
                                          apiVersion?: string | undefined
                                          fieldPath: string
                                        }
                                      | undefined
                                    mode?: number | undefined
                                    path: string
                                    resourceFieldRef?:
                                      | {
                                          containerName?: string | undefined
                                          divisor?:
                                            | (number | string)
                                            | undefined
                                          resource: string
                                        }
                                      | undefined
                                  }[]
                                | undefined
                            }
                          | undefined
                        emptyDir?:
                          | {
                              medium?: string | undefined
                              sizeLimit?: (number | string) | undefined
                            }
                          | undefined
                        ephemeral?:
                          | {
                              volumeClaimTemplate?:
                                | {
                                    metadata?: object | undefined
                                    spec: {
                                      accessModes?: string[] | undefined
                                      dataSource?:
                                        | {
                                            apiGroup?: string | undefined
                                            kind: string
                                            name: string
                                          }
                                        | undefined
                                      dataSourceRef?:
                                        | {
                                            apiGroup?: string | undefined
                                            kind: string
                                            name: string
                                          }
                                        | undefined
                                      resources?:
                                        | {
                                            limits?:
                                              | {
                                                  [key: string]: number | string
                                                }
                                              | undefined
                                            requests?:
                                              | {
                                                  [key: string]: number | string
                                                }
                                              | undefined
                                          }
                                        | undefined
                                      selector?:
                                        | {
                                            matchExpressions?:
                                              | {
                                                  key: string
                                                  operator: string
                                                  values?: string[] | undefined
                                                }[]
                                              | undefined
                                            matchLabels?:
                                              | {
                                                  [key: string]: string
                                                }
                                              | undefined
                                          }
                                        | undefined
                                      storageClassName?: string | undefined
                                      volumeMode?: string | undefined
                                      volumeName?: string | undefined
                                    }
                                  }
                                | undefined
                            }
                          | undefined
                        fc?:
                          | {
                              fsType?: string | undefined
                              lun?: number | undefined
                              readOnly?: boolean | undefined
                              targetWWNs?: string[] | undefined
                              wwids?: string[] | undefined
                            }
                          | undefined
                        flexVolume?:
                          | {
                              driver: string
                              fsType?: string | undefined
                              options?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              readOnly?: boolean | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                            }
                          | undefined
                        flocker?:
                          | {
                              datasetName?: string | undefined
                              datasetUUID?: string | undefined
                            }
                          | undefined
                        gcePersistentDisk?:
                          | {
                              fsType?: string | undefined
                              partition?: number | undefined
                              pdName: string
                              readOnly?: boolean | undefined
                            }
                          | undefined
                        gitRepo?:
                          | {
                              directory?: string | undefined
                              repository: string
                              revision?: string | undefined
                            }
                          | undefined
                        glusterfs?:
                          | {
                              endpoints: string
                              path: string
                              readOnly?: boolean | undefined
                            }
                          | undefined
                        hostPath?:
                          | {
                              path: string
                              type?: string | undefined
                            }
                          | undefined
                        iscsi?:
                          | {
                              chapAuthDiscovery?: boolean | undefined
                              chapAuthSession?: boolean | undefined
                              fsType?: string | undefined
                              initiatorName?: string | undefined
                              iqn: string
                              iscsiInterface?: string | undefined
                              lun: number
                              portals?: string[] | undefined
                              readOnly?: boolean | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                              targetPortal: string
                            }
                          | undefined
                        name: string
                        nfs?:
                          | {
                              path: string
                              readOnly?: boolean | undefined
                              server: string
                            }
                          | undefined
                        persistentVolumeClaim?:
                          | {
                              claimName: string
                              readOnly?: boolean | undefined
                            }
                          | undefined
                        photonPersistentDisk?:
                          | {
                              fsType?: string | undefined
                              pdID: string
                            }
                          | undefined
                        portworxVolume?:
                          | {
                              fsType?: string | undefined
                              readOnly?: boolean | undefined
                              volumeID: string
                            }
                          | undefined
                        projected?:
                          | {
                              defaultMode?: number | undefined
                              sources?:
                                | {
                                    configMap?:
                                      | {
                                          items?:
                                            | {
                                                key: string
                                                mode?: number | undefined
                                                path: string
                                              }[]
                                            | undefined
                                          name?: string | undefined
                                          optional?: boolean | undefined
                                        }
                                      | undefined
                                    downwardAPI?:
                                      | {
                                          items?:
                                            | {
                                                fieldRef?:
                                                  | {
                                                      apiVersion?:
                                                        | string
                                                        | undefined
                                                      fieldPath: string
                                                    }
                                                  | undefined
                                                mode?: number | undefined
                                                path: string
                                                resourceFieldRef?:
                                                  | {
                                                      containerName?:
                                                        | string
                                                        | undefined
                                                      divisor?:
                                                        | (number | string)
                                                        | undefined
                                                      resource: string
                                                    }
                                                  | undefined
                                              }[]
                                            | undefined
                                        }
                                      | undefined
                                    secret?:
                                      | {
                                          items?:
                                            | {
                                                key: string
                                                mode?: number | undefined
                                                path: string
                                              }[]
                                            | undefined
                                          name?: string | undefined
                                          optional?: boolean | undefined
                                        }
                                      | undefined
                                    serviceAccountToken?:
                                      | {
                                          audience?: string | undefined
                                          expirationSeconds?: number | undefined
                                          path: string
                                        }
                                      | undefined
                                  }[]
                                | undefined
                            }
                          | undefined
                        quobyte?:
                          | {
                              group?: string | undefined
                              readOnly?: boolean | undefined
                              registry: string
                              tenant?: string | undefined
                              user?: string | undefined
                              volume: string
                            }
                          | undefined
                        rbd?:
                          | {
                              fsType?: string | undefined
                              image: string
                              keyring?: string | undefined
                              monitors: string[]
                              pool?: string | undefined
                              readOnly?: boolean | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                              user?: string | undefined
                            }
                          | undefined
                        scaleIO?:
                          | {
                              fsType?: string | undefined
                              gateway: string
                              protectionDomain?: string | undefined
                              readOnly?: boolean | undefined
                              secretRef: {
                                name?: string | undefined
                              }
                              sslEnabled?: boolean | undefined
                              storageMode?: string | undefined
                              storagePool?: string | undefined
                              system: string
                              volumeName?: string | undefined
                            }
                          | undefined
                        secret?:
                          | {
                              defaultMode?: number | undefined
                              items?:
                                | {
                                    key: string
                                    mode?: number | undefined
                                    path: string
                                  }[]
                                | undefined
                              optional?: boolean | undefined
                              secretName?: string | undefined
                            }
                          | undefined
                        storageos?:
                          | {
                              fsType?: string | undefined
                              readOnly?: boolean | undefined
                              secretRef?:
                                | {
                                    name?: string | undefined
                                  }
                                | undefined
                              volumeName?: string | undefined
                              volumeNamespace?: string | undefined
                            }
                          | undefined
                        vsphereVolume?:
                          | {
                              fsType?: string | undefined
                              storagePolicyID?: string | undefined
                              storagePolicyName?: string | undefined
                              volumePath: string
                            }
                          | undefined
                      }[]
                    | undefined
                }
              | undefined
            templateType: string
            timeChaos?:
              | {
                  clockIds?: string[] | undefined
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  timeOffset: string
                  value?: string | undefined
                }
              | undefined
          }[]
        }
      | undefined
  }
  status?:
    | {
        active?:
          | {
              apiVersion?: string | undefined
              fieldPath?: string | undefined
              kind?: string | undefined
              name?: string | undefined
              namespace?: string | undefined
              resourceVersion?: string | undefined
              uid?: string | undefined
            }[]
          | undefined
        time?: (string | null) | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1ScheduleList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1Schedule[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1StatusCheck = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    duration?: string | undefined
    failureThreshold?: number | undefined
    http?:
      | {
          body?: string | undefined
          criteria: {
            statusCode: string
          }
          headers?:
            | {
                [key: string]: string[]
              }
            | undefined
          method?: ('GET' | 'POST') | undefined
          url: string
        }
      | undefined
    intervalSeconds?: number | undefined
    mode?: ('Synchronous' | 'Continuous') | undefined
    recordsHistoryLimit?: number | undefined
    successThreshold?: number | undefined
    timeoutSeconds?: number | undefined
    type: 'HTTP'
  }
  status?:
    | {
        completionTime?: string | undefined
        conditions?:
          | {
              lastProbeTime: string
              lastTransitionTime: string
              reason: string
              status: string
              type: string
            }[]
          | undefined
        count?: number | undefined
        records?:
          | {
              outcome: string
              startTime: string
            }[]
          | undefined
        startTime?: string | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1StatusCheckList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1StatusCheck[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1StressChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    containerNames?: string[] | undefined
    duration?: string | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    stressngStressors?: string | undefined
    stressors?:
      | {
          cpu?:
            | {
                load?: number | undefined
                options?: string[] | undefined
                workers: number
              }
            | undefined
          memory?:
            | {
                oomScoreAdj?: number | undefined
                options?: string[] | undefined
                size?: string | undefined
                workers: number
              }
            | undefined
        }
      | undefined
    value?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
        instances?:
          | {
              [key: string]: {
                memoryStartTime?: string | undefined
                memoryUid?: string | undefined
                startTime?: string | undefined
                uid?: string | undefined
              }
            }
          | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1StressChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1StressChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1TimeChaos = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    clockIds?: string[] | undefined
    containerNames?: string[] | undefined
    duration?: string | undefined
    mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
    selector: {
      annotationSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      expressionSelectors?:
        | {
            key: string
            operator: string
            values?: string[] | undefined
          }[]
        | undefined
      fieldSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      labelSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      namespaces?: string[] | undefined
      nodeSelectors?:
        | {
            [key: string]: string
          }
        | undefined
      nodes?: string[] | undefined
      podPhaseSelectors?: string[] | undefined
      pods?:
        | {
            [key: string]: string[]
          }
        | undefined
    }
    timeOffset: string
    value?: string | undefined
  }
  status?:
    | {
        conditions?:
          | {
              reason?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        experiment: {
          containerRecords?:
            | {
                events?:
                  | {
                      message?: string | undefined
                      operation: string
                      timestamp: string
                      type: string
                    }[]
                  | undefined
                id: string
                injectedCount: number
                phase: string
                recoveredCount: number
                selectorKey: string
              }[]
            | undefined
          desiredPhase?: ('Run' | 'Stop') | undefined
        }
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1TimeChaosList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1TimeChaos[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1WorkflowNode = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    abortWithStatusCheck?: boolean | undefined
    awsChaos?:
      | {
          action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
          awsRegion: string
          deviceName?: string | undefined
          duration?: string | undefined
          ec2Instance: string
          endpoint?: string | undefined
          secretName?: string | undefined
          volumeID?: string | undefined
        }
      | undefined
    azureChaos?:
      | {
          action: 'vm-stop' | 'vm-restart' | 'disk-detach'
          diskName?: string | undefined
          duration?: string | undefined
          lun?: number | undefined
          resourceGroupName: string
          secretName?: string | undefined
          subscriptionID: string
          vmName: string
        }
      | undefined
    blockChaos?:
      | {
          action: 'delay'
          containerNames?: string[] | undefined
          delay?:
            | {
                correlation?: string | undefined
                jitter?: string | undefined
                latency?: string | undefined
              }
            | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
          volumeName: string
        }
      | undefined
    children?: string[] | undefined
    conditionalBranches?:
      | {
          expression?: string | undefined
          target: string
        }[]
      | undefined
    deadline?: string | undefined
    dnsChaos?:
      | {
          action: 'error' | 'random'
          containerNames?: string[] | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          patterns?: string[] | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    gcpChaos?:
      | {
          action: 'node-stop' | 'node-reset' | 'disk-loss'
          deviceNames?: string[] | undefined
          duration?: string | undefined
          instance: string
          project: string
          secretName?: string | undefined
          zone: string
        }
      | undefined
    httpChaos?:
      | {
          abort?: boolean | undefined
          code?: number | undefined
          delay?: string | undefined
          duration?: string | undefined
          method?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          patch?:
            | {
                body?:
                  | {
                      type: string
                      value: string
                    }
                  | undefined
                headers?: string[][] | undefined
                queries?: string[][] | undefined
              }
            | undefined
          path?: string | undefined
          port?: number | undefined
          replace?:
            | {
                body?: string | undefined
                code?: number | undefined
                headers?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                method?: string | undefined
                path?: string | undefined
                queries?:
                  | {
                      [key: string]: string
                    }
                  | undefined
              }
            | undefined
          request_headers?:
            | {
                [key: string]: string
              }
            | undefined
          response_headers?:
            | {
                [key: string]: string
              }
            | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          target: 'Request' | 'Response'
          value?: string | undefined
        }
      | undefined
    ioChaos?:
      | {
          action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
          attr?:
            | {
                atime?:
                  | {
                      nsec: number
                      sec: number
                    }
                  | undefined
                blocks?: number | undefined
                ctime?:
                  | {
                      nsec: number
                      sec: number
                    }
                  | undefined
                gid?: number | undefined
                ino?: number | undefined
                kind?: string | undefined
                mtime?:
                  | {
                      nsec: number
                      sec: number
                    }
                  | undefined
                nlink?: number | undefined
                perm?: number | undefined
                rdev?: number | undefined
                size?: number | undefined
                uid?: number | undefined
              }
            | undefined
          containerNames?: string[] | undefined
          delay?: string | undefined
          duration?: string | undefined
          errno?: number | undefined
          methods?: string[] | undefined
          mistake?:
            | {
                filling?: ('zero' | 'random') | undefined
                maxLength?: number | undefined
                maxOccurrences?: number | undefined
              }
            | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          path?: string | undefined
          percent?: number | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
          volumePath: string
        }
      | undefined
    jvmChaos?:
      | {
          action:
            | 'latency'
            | 'return'
            | 'exception'
            | 'stress'
            | 'gc'
            | 'ruleData'
            | 'mysql'
          class?: string | undefined
          containerNames?: string[] | undefined
          cpuCount?: number | undefined
          database?: string | undefined
          duration?: string | undefined
          exception?: string | undefined
          latency?: number | undefined
          memType?: string | undefined
          method?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          mysqlConnectorVersion?: string | undefined
          name?: string | undefined
          pid?: number | undefined
          port?: number | undefined
          ruleData?: string | undefined
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          sqlType?: string | undefined
          table?: string | undefined
          value?: string | undefined
        }
      | undefined
    kernelChaos?:
      | {
          containerNames?: string[] | undefined
          duration?: string | undefined
          failKernRequest: {
            callchain?:
              | {
                  funcname?: string | undefined
                  parameters?: string | undefined
                  predicate?: string | undefined
                }[]
              | undefined
            failtype: number
            headers?: string[] | undefined
            probability?: number | undefined
            times?: number | undefined
          }
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    networkChaos?:
      | {
          action:
            | 'netem'
            | 'delay'
            | 'loss'
            | 'duplicate'
            | 'corrupt'
            | 'partition'
            | 'bandwidth'
          bandwidth?:
            | {
                buffer: number
                limit: number
                minburst?: number | undefined
                peakrate?: number | undefined
                rate: string
              }
            | undefined
          corrupt?:
            | {
                correlation?: string | undefined
                corrupt: string
              }
            | undefined
          delay?:
            | {
                correlation?: string | undefined
                jitter?: string | undefined
                latency: string
                reorder?:
                  | {
                      correlation?: string | undefined
                      gap: number
                      reorder: string
                    }
                  | undefined
              }
            | undefined
          device?: string | undefined
          direction?: ('to' | 'from' | 'both') | undefined
          duplicate?:
            | {
                correlation?: string | undefined
                duplicate: string
              }
            | undefined
          duration?: string | undefined
          externalTargets?: string[] | undefined
          loss?:
            | {
                correlation?: string | undefined
                loss: string
              }
            | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          target?:
            | {
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
              }
            | undefined
          targetDevice?: string | undefined
          value?: string | undefined
        }
      | undefined
    physicalmachineChaos?:
      | {
          action:
            | 'stress-cpu'
            | 'stress-mem'
            | 'disk-read-payload'
            | 'disk-write-payload'
            | 'disk-fill'
            | 'network-corrupt'
            | 'network-duplicate'
            | 'network-loss'
            | 'network-delay'
            | 'network-partition'
            | 'network-dns'
            | 'network-bandwidth'
            | 'network-flood'
            | 'network-down'
            | 'process'
            | 'jvm-exception'
            | 'jvm-gc'
            | 'jvm-latency'
            | 'jvm-return'
            | 'jvm-stress'
            | 'jvm-rule-data'
            | 'jvm-mysql'
            | 'clock'
            | 'redis-expiration'
            | 'redis-penetration'
            | 'redis-cacheLimit'
            | 'redis-restart'
            | 'redis-stop'
            | 'kafka-fill'
            | 'kafka-flood'
            | 'kafka-io'
            | 'file-create'
            | 'file-modify'
            | 'file-delete'
            | 'file-rename'
            | 'file-append'
            | 'file-replace'
            | 'vm'
            | 'user_defined'
          address?: string[] | undefined
          clock?:
            | {
                'clock-ids-slice'?: string | undefined
                pid?: number | undefined
                'time-offset'?: string | undefined
              }
            | undefined
          'disk-fill'?:
            | {
                'fill-by-fallocate'?: boolean | undefined
                path?: string | undefined
                size?: string | undefined
              }
            | undefined
          'disk-read-payload'?:
            | {
                path?: string | undefined
                'payload-process-num'?: number | undefined
                size?: string | undefined
              }
            | undefined
          'disk-write-payload'?:
            | {
                path?: string | undefined
                'payload-process-num'?: number | undefined
                size?: string | undefined
              }
            | undefined
          duration?: string | undefined
          'file-append'?:
            | {
                count?: number | undefined
                data?: string | undefined
                'file-name'?: string | undefined
              }
            | undefined
          'file-create'?:
            | {
                'dir-name'?: string | undefined
                'file-name'?: string | undefined
              }
            | undefined
          'file-delete'?:
            | {
                'dir-name'?: string | undefined
                'file-name'?: string | undefined
              }
            | undefined
          'file-modify'?:
            | {
                'file-name'?: string | undefined
                privilege?: number | undefined
              }
            | undefined
          'file-rename'?:
            | {
                'dest-file'?: string | undefined
                'source-file'?: string | undefined
              }
            | undefined
          'file-replace'?:
            | {
                'dest-string'?: string | undefined
                'file-name'?: string | undefined
                line?: number | undefined
                'origin-string'?: string | undefined
              }
            | undefined
          'http-abort'?:
            | {
                code?: string | undefined
                method?: string | undefined
                path?: string | undefined
                port?: number | undefined
                proxy_ports: number[]
                target: string
              }
            | undefined
          'http-config'?:
            | {
                file_path?: string | undefined
              }
            | undefined
          'http-delay'?:
            | {
                code?: string | undefined
                delay: string
                method?: string | undefined
                path?: string | undefined
                port?: number | undefined
                proxy_ports: number[]
                target: string
              }
            | undefined
          'http-request'?:
            | {
                count?: number | undefined
                'enable-conn-pool'?: boolean | undefined
                url?: string | undefined
              }
            | undefined
          'jvm-exception'?:
            | {
                class?: string | undefined
                exception?: string | undefined
                method?: string | undefined
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'jvm-gc'?:
            | {
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'jvm-latency'?:
            | {
                class?: string | undefined
                latency?: number | undefined
                method?: string | undefined
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'jvm-mysql'?:
            | {
                database?: string | undefined
                exception?: string | undefined
                latency?: number | undefined
                mysqlConnectorVersion?: string | undefined
                pid?: number | undefined
                port?: number | undefined
                sqlType?: string | undefined
                table?: string | undefined
              }
            | undefined
          'jvm-return'?:
            | {
                class?: string | undefined
                method?: string | undefined
                pid?: number | undefined
                port?: number | undefined
                value?: string | undefined
              }
            | undefined
          'jvm-rule-data'?:
            | {
                pid?: number | undefined
                port?: number | undefined
                'rule-data'?: string | undefined
              }
            | undefined
          'jvm-stress'?:
            | {
                'cpu-count'?: number | undefined
                'mem-type'?: string | undefined
                pid?: number | undefined
                port?: number | undefined
              }
            | undefined
          'kafka-fill'?:
            | {
                host?: string | undefined
                maxBytes?: number | undefined
                messageSize?: number | undefined
                password?: string | undefined
                port?: number | undefined
                reloadCommand?: string | undefined
                topic?: string | undefined
                username?: string | undefined
              }
            | undefined
          'kafka-flood'?:
            | {
                host?: string | undefined
                messageSize?: number | undefined
                password?: string | undefined
                port?: number | undefined
                threads?: number | undefined
                topic?: string | undefined
                username?: string | undefined
              }
            | undefined
          'kafka-io'?:
            | {
                configFile?: string | undefined
                nonReadable?: boolean | undefined
                nonWritable?: boolean | undefined
                topic?: string | undefined
              }
            | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          'network-bandwidth'?:
            | {
                buffer: number
                device?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                limit: number
                minburst?: number | undefined
                peakrate?: number | undefined
                rate: string
              }
            | undefined
          'network-corrupt'?:
            | {
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                percent?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-delay'?:
            | {
                'accept-tcp-flags'?: string | undefined
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                jitter?: string | undefined
                latency?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-dns'?:
            | {
                'dns-domain-name'?: string | undefined
                'dns-ip'?: string | undefined
                'dns-server'?: string | undefined
              }
            | undefined
          'network-down'?:
            | {
                device?: string | undefined
                duration?: string | undefined
              }
            | undefined
          'network-duplicate'?:
            | {
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                percent?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-flood'?:
            | {
                duration: string
                'ip-address'?: string | undefined
                parallel?: number | undefined
                port?: string | undefined
                rate: string
              }
            | undefined
          'network-loss'?:
            | {
                correlation?: string | undefined
                device?: string | undefined
                'egress-port'?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
                percent?: string | undefined
                'source-port'?: string | undefined
              }
            | undefined
          'network-partition'?:
            | {
                'accept-tcp-flags'?: string | undefined
                device?: string | undefined
                direction?: string | undefined
                hostname?: string | undefined
                'ip-address'?: string | undefined
                'ip-protocol'?: string | undefined
              }
            | undefined
          process?:
            | {
                process?: string | undefined
                recoverCmd?: string | undefined
                signal?: number | undefined
              }
            | undefined
          'redis-cacheLimit'?:
            | {
                addr?: string | undefined
                cacheSize?: string | undefined
                password?: string | undefined
                percent?: string | undefined
              }
            | undefined
          'redis-expiration'?:
            | {
                addr?: string | undefined
                expiration?: string | undefined
                key?: string | undefined
                option?: string | undefined
                password?: string | undefined
              }
            | undefined
          'redis-penetration'?:
            | {
                addr?: string | undefined
                password?: string | undefined
                requestNum?: number | undefined
              }
            | undefined
          'redis-restart'?:
            | {
                addr?: string | undefined
                conf?: string | undefined
                flushConfig?: boolean | undefined
                password?: string | undefined
                redisPath?: boolean | undefined
              }
            | undefined
          'redis-stop'?:
            | {
                addr?: string | undefined
                conf?: string | undefined
                flushConfig?: boolean | undefined
                password?: string | undefined
                redisPath?: boolean | undefined
              }
            | undefined
          selector?:
            | {
                annotationSelectors?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                expressionSelectors?:
                  | {
                      key: string
                      operator: string
                      values?: string[] | undefined
                    }[]
                  | undefined
                fieldSelectors?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                labelSelectors?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                namespaces?: string[] | undefined
                physicalMachines?:
                  | {
                      [key: string]: string[]
                    }
                  | undefined
              }
            | undefined
          'stress-cpu'?:
            | {
                load?: number | undefined
                options?: string[] | undefined
                workers?: number | undefined
              }
            | undefined
          'stress-mem'?:
            | {
                options?: string[] | undefined
                size?: string | undefined
              }
            | undefined
          uid?: string | undefined
          user_defined?:
            | {
                attackCmd?: string | undefined
                recoverCmd?: string | undefined
              }
            | undefined
          value?: string | undefined
          vm?:
            | {
                'vm-name'?: string | undefined
              }
            | undefined
        }
      | undefined
    podChaos?:
      | {
          action: 'pod-kill' | 'pod-failure' | 'container-kill'
          containerNames?: string[] | undefined
          duration?: string | undefined
          gracePeriod?: number | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          value?: string | undefined
        }
      | undefined
    schedule?:
      | {
          awsChaos?:
            | {
                action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
                awsRegion: string
                deviceName?: string | undefined
                duration?: string | undefined
                ec2Instance: string
                endpoint?: string | undefined
                secretName?: string | undefined
                volumeID?: string | undefined
              }
            | undefined
          azureChaos?:
            | {
                action: 'vm-stop' | 'vm-restart' | 'disk-detach'
                diskName?: string | undefined
                duration?: string | undefined
                lun?: number | undefined
                resourceGroupName: string
                secretName?: string | undefined
                subscriptionID: string
                vmName: string
              }
            | undefined
          blockChaos?:
            | {
                action: 'delay'
                containerNames?: string[] | undefined
                delay?:
                  | {
                      correlation?: string | undefined
                      jitter?: string | undefined
                      latency?: string | undefined
                    }
                  | undefined
                duration?: string | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
                volumeName: string
              }
            | undefined
          concurrencyPolicy?: ('Forbid' | 'Allow') | undefined
          dnsChaos?:
            | {
                action: 'error' | 'random'
                containerNames?: string[] | undefined
                duration?: string | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                patterns?: string[] | undefined
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
              }
            | undefined
          gcpChaos?:
            | {
                action: 'node-stop' | 'node-reset' | 'disk-loss'
                deviceNames?: string[] | undefined
                duration?: string | undefined
                instance: string
                project: string
                secretName?: string | undefined
                zone: string
              }
            | undefined
          historyLimit?: number | undefined
          httpChaos?:
            | {
                abort?: boolean | undefined
                code?: number | undefined
                delay?: string | undefined
                duration?: string | undefined
                method?: string | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                patch?:
                  | {
                      body?:
                        | {
                            type: string
                            value: string
                          }
                        | undefined
                      headers?: string[][] | undefined
                      queries?: string[][] | undefined
                    }
                  | undefined
                path?: string | undefined
                port?: number | undefined
                replace?:
                  | {
                      body?: string | undefined
                      code?: number | undefined
                      headers?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                      method?: string | undefined
                      path?: string | undefined
                      queries?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                    }
                  | undefined
                request_headers?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                response_headers?:
                  | {
                      [key: string]: string
                    }
                  | undefined
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                target: 'Request' | 'Response'
                value?: string | undefined
              }
            | undefined
          ioChaos?:
            | {
                action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
                attr?:
                  | {
                      atime?:
                        | {
                            nsec: number
                            sec: number
                          }
                        | undefined
                      blocks?: number | undefined
                      ctime?:
                        | {
                            nsec: number
                            sec: number
                          }
                        | undefined
                      gid?: number | undefined
                      ino?: number | undefined
                      kind?: string | undefined
                      mtime?:
                        | {
                            nsec: number
                            sec: number
                          }
                        | undefined
                      nlink?: number | undefined
                      perm?: number | undefined
                      rdev?: number | undefined
                      size?: number | undefined
                      uid?: number | undefined
                    }
                  | undefined
                containerNames?: string[] | undefined
                delay?: string | undefined
                duration?: string | undefined
                errno?: number | undefined
                methods?: string[] | undefined
                mistake?:
                  | {
                      filling?: ('zero' | 'random') | undefined
                      maxLength?: number | undefined
                      maxOccurrences?: number | undefined
                    }
                  | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                path?: string | undefined
                percent?: number | undefined
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
                volumePath: string
              }
            | undefined
          jvmChaos?:
            | {
                action:
                  | 'latency'
                  | 'return'
                  | 'exception'
                  | 'stress'
                  | 'gc'
                  | 'ruleData'
                  | 'mysql'
                class?: string | undefined
                containerNames?: string[] | undefined
                cpuCount?: number | undefined
                database?: string | undefined
                duration?: string | undefined
                exception?: string | undefined
                latency?: number | undefined
                memType?: string | undefined
                method?: string | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                mysqlConnectorVersion?: string | undefined
                name?: string | undefined
                pid?: number | undefined
                port?: number | undefined
                ruleData?: string | undefined
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                sqlType?: string | undefined
                table?: string | undefined
                value?: string | undefined
              }
            | undefined
          kernelChaos?:
            | {
                containerNames?: string[] | undefined
                duration?: string | undefined
                failKernRequest: {
                  callchain?:
                    | {
                        funcname?: string | undefined
                        parameters?: string | undefined
                        predicate?: string | undefined
                      }[]
                    | undefined
                  failtype: number
                  headers?: string[] | undefined
                  probability?: number | undefined
                  times?: number | undefined
                }
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
              }
            | undefined
          networkChaos?:
            | {
                action:
                  | 'netem'
                  | 'delay'
                  | 'loss'
                  | 'duplicate'
                  | 'corrupt'
                  | 'partition'
                  | 'bandwidth'
                bandwidth?:
                  | {
                      buffer: number
                      limit: number
                      minburst?: number | undefined
                      peakrate?: number | undefined
                      rate: string
                    }
                  | undefined
                corrupt?:
                  | {
                      correlation?: string | undefined
                      corrupt: string
                    }
                  | undefined
                delay?:
                  | {
                      correlation?: string | undefined
                      jitter?: string | undefined
                      latency: string
                      reorder?:
                        | {
                            correlation?: string | undefined
                            gap: number
                            reorder: string
                          }
                        | undefined
                    }
                  | undefined
                device?: string | undefined
                direction?: ('to' | 'from' | 'both') | undefined
                duplicate?:
                  | {
                      correlation?: string | undefined
                      duplicate: string
                    }
                  | undefined
                duration?: string | undefined
                externalTargets?: string[] | undefined
                loss?:
                  | {
                      correlation?: string | undefined
                      loss: string
                    }
                  | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                target?:
                  | {
                      mode:
                        | 'one'
                        | 'all'
                        | 'fixed'
                        | 'fixed-percent'
                        | 'random-max-percent'
                      selector: {
                        annotationSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        expressionSelectors?:
                          | {
                              key: string
                              operator: string
                              values?: string[] | undefined
                            }[]
                          | undefined
                        fieldSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        labelSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        namespaces?: string[] | undefined
                        nodeSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        nodes?: string[] | undefined
                        podPhaseSelectors?: string[] | undefined
                        pods?:
                          | {
                              [key: string]: string[]
                            }
                          | undefined
                      }
                      value?: string | undefined
                    }
                  | undefined
                targetDevice?: string | undefined
                value?: string | undefined
              }
            | undefined
          physicalmachineChaos?:
            | {
                action:
                  | 'stress-cpu'
                  | 'stress-mem'
                  | 'disk-read-payload'
                  | 'disk-write-payload'
                  | 'disk-fill'
                  | 'network-corrupt'
                  | 'network-duplicate'
                  | 'network-loss'
                  | 'network-delay'
                  | 'network-partition'
                  | 'network-dns'
                  | 'network-bandwidth'
                  | 'network-flood'
                  | 'network-down'
                  | 'process'
                  | 'jvm-exception'
                  | 'jvm-gc'
                  | 'jvm-latency'
                  | 'jvm-return'
                  | 'jvm-stress'
                  | 'jvm-rule-data'
                  | 'jvm-mysql'
                  | 'clock'
                  | 'redis-expiration'
                  | 'redis-penetration'
                  | 'redis-cacheLimit'
                  | 'redis-restart'
                  | 'redis-stop'
                  | 'kafka-fill'
                  | 'kafka-flood'
                  | 'kafka-io'
                  | 'file-create'
                  | 'file-modify'
                  | 'file-delete'
                  | 'file-rename'
                  | 'file-append'
                  | 'file-replace'
                  | 'vm'
                  | 'user_defined'
                address?: string[] | undefined
                clock?:
                  | {
                      'clock-ids-slice'?: string | undefined
                      pid?: number | undefined
                      'time-offset'?: string | undefined
                    }
                  | undefined
                'disk-fill'?:
                  | {
                      'fill-by-fallocate'?: boolean | undefined
                      path?: string | undefined
                      size?: string | undefined
                    }
                  | undefined
                'disk-read-payload'?:
                  | {
                      path?: string | undefined
                      'payload-process-num'?: number | undefined
                      size?: string | undefined
                    }
                  | undefined
                'disk-write-payload'?:
                  | {
                      path?: string | undefined
                      'payload-process-num'?: number | undefined
                      size?: string | undefined
                    }
                  | undefined
                duration?: string | undefined
                'file-append'?:
                  | {
                      count?: number | undefined
                      data?: string | undefined
                      'file-name'?: string | undefined
                    }
                  | undefined
                'file-create'?:
                  | {
                      'dir-name'?: string | undefined
                      'file-name'?: string | undefined
                    }
                  | undefined
                'file-delete'?:
                  | {
                      'dir-name'?: string | undefined
                      'file-name'?: string | undefined
                    }
                  | undefined
                'file-modify'?:
                  | {
                      'file-name'?: string | undefined
                      privilege?: number | undefined
                    }
                  | undefined
                'file-rename'?:
                  | {
                      'dest-file'?: string | undefined
                      'source-file'?: string | undefined
                    }
                  | undefined
                'file-replace'?:
                  | {
                      'dest-string'?: string | undefined
                      'file-name'?: string | undefined
                      line?: number | undefined
                      'origin-string'?: string | undefined
                    }
                  | undefined
                'http-abort'?:
                  | {
                      code?: string | undefined
                      method?: string | undefined
                      path?: string | undefined
                      port?: number | undefined
                      proxy_ports: number[]
                      target: string
                    }
                  | undefined
                'http-config'?:
                  | {
                      file_path?: string | undefined
                    }
                  | undefined
                'http-delay'?:
                  | {
                      code?: string | undefined
                      delay: string
                      method?: string | undefined
                      path?: string | undefined
                      port?: number | undefined
                      proxy_ports: number[]
                      target: string
                    }
                  | undefined
                'http-request'?:
                  | {
                      count?: number | undefined
                      'enable-conn-pool'?: boolean | undefined
                      url?: string | undefined
                    }
                  | undefined
                'jvm-exception'?:
                  | {
                      class?: string | undefined
                      exception?: string | undefined
                      method?: string | undefined
                      pid?: number | undefined
                      port?: number | undefined
                    }
                  | undefined
                'jvm-gc'?:
                  | {
                      pid?: number | undefined
                      port?: number | undefined
                    }
                  | undefined
                'jvm-latency'?:
                  | {
                      class?: string | undefined
                      latency?: number | undefined
                      method?: string | undefined
                      pid?: number | undefined
                      port?: number | undefined
                    }
                  | undefined
                'jvm-mysql'?:
                  | {
                      database?: string | undefined
                      exception?: string | undefined
                      latency?: number | undefined
                      mysqlConnectorVersion?: string | undefined
                      pid?: number | undefined
                      port?: number | undefined
                      sqlType?: string | undefined
                      table?: string | undefined
                    }
                  | undefined
                'jvm-return'?:
                  | {
                      class?: string | undefined
                      method?: string | undefined
                      pid?: number | undefined
                      port?: number | undefined
                      value?: string | undefined
                    }
                  | undefined
                'jvm-rule-data'?:
                  | {
                      pid?: number | undefined
                      port?: number | undefined
                      'rule-data'?: string | undefined
                    }
                  | undefined
                'jvm-stress'?:
                  | {
                      'cpu-count'?: number | undefined
                      'mem-type'?: string | undefined
                      pid?: number | undefined
                      port?: number | undefined
                    }
                  | undefined
                'kafka-fill'?:
                  | {
                      host?: string | undefined
                      maxBytes?: number | undefined
                      messageSize?: number | undefined
                      password?: string | undefined
                      port?: number | undefined
                      reloadCommand?: string | undefined
                      topic?: string | undefined
                      username?: string | undefined
                    }
                  | undefined
                'kafka-flood'?:
                  | {
                      host?: string | undefined
                      messageSize?: number | undefined
                      password?: string | undefined
                      port?: number | undefined
                      threads?: number | undefined
                      topic?: string | undefined
                      username?: string | undefined
                    }
                  | undefined
                'kafka-io'?:
                  | {
                      configFile?: string | undefined
                      nonReadable?: boolean | undefined
                      nonWritable?: boolean | undefined
                      topic?: string | undefined
                    }
                  | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                'network-bandwidth'?:
                  | {
                      buffer: number
                      device?: string | undefined
                      hostname?: string | undefined
                      'ip-address'?: string | undefined
                      limit: number
                      minburst?: number | undefined
                      peakrate?: number | undefined
                      rate: string
                    }
                  | undefined
                'network-corrupt'?:
                  | {
                      correlation?: string | undefined
                      device?: string | undefined
                      'egress-port'?: string | undefined
                      hostname?: string | undefined
                      'ip-address'?: string | undefined
                      'ip-protocol'?: string | undefined
                      percent?: string | undefined
                      'source-port'?: string | undefined
                    }
                  | undefined
                'network-delay'?:
                  | {
                      'accept-tcp-flags'?: string | undefined
                      correlation?: string | undefined
                      device?: string | undefined
                      'egress-port'?: string | undefined
                      hostname?: string | undefined
                      'ip-address'?: string | undefined
                      'ip-protocol'?: string | undefined
                      jitter?: string | undefined
                      latency?: string | undefined
                      'source-port'?: string | undefined
                    }
                  | undefined
                'network-dns'?:
                  | {
                      'dns-domain-name'?: string | undefined
                      'dns-ip'?: string | undefined
                      'dns-server'?: string | undefined
                    }
                  | undefined
                'network-down'?:
                  | {
                      device?: string | undefined
                      duration?: string | undefined
                    }
                  | undefined
                'network-duplicate'?:
                  | {
                      correlation?: string | undefined
                      device?: string | undefined
                      'egress-port'?: string | undefined
                      hostname?: string | undefined
                      'ip-address'?: string | undefined
                      'ip-protocol'?: string | undefined
                      percent?: string | undefined
                      'source-port'?: string | undefined
                    }
                  | undefined
                'network-flood'?:
                  | {
                      duration: string
                      'ip-address'?: string | undefined
                      parallel?: number | undefined
                      port?: string | undefined
                      rate: string
                    }
                  | undefined
                'network-loss'?:
                  | {
                      correlation?: string | undefined
                      device?: string | undefined
                      'egress-port'?: string | undefined
                      hostname?: string | undefined
                      'ip-address'?: string | undefined
                      'ip-protocol'?: string | undefined
                      percent?: string | undefined
                      'source-port'?: string | undefined
                    }
                  | undefined
                'network-partition'?:
                  | {
                      'accept-tcp-flags'?: string | undefined
                      device?: string | undefined
                      direction?: string | undefined
                      hostname?: string | undefined
                      'ip-address'?: string | undefined
                      'ip-protocol'?: string | undefined
                    }
                  | undefined
                process?:
                  | {
                      process?: string | undefined
                      recoverCmd?: string | undefined
                      signal?: number | undefined
                    }
                  | undefined
                'redis-cacheLimit'?:
                  | {
                      addr?: string | undefined
                      cacheSize?: string | undefined
                      password?: string | undefined
                      percent?: string | undefined
                    }
                  | undefined
                'redis-expiration'?:
                  | {
                      addr?: string | undefined
                      expiration?: string | undefined
                      key?: string | undefined
                      option?: string | undefined
                      password?: string | undefined
                    }
                  | undefined
                'redis-penetration'?:
                  | {
                      addr?: string | undefined
                      password?: string | undefined
                      requestNum?: number | undefined
                    }
                  | undefined
                'redis-restart'?:
                  | {
                      addr?: string | undefined
                      conf?: string | undefined
                      flushConfig?: boolean | undefined
                      password?: string | undefined
                      redisPath?: boolean | undefined
                    }
                  | undefined
                'redis-stop'?:
                  | {
                      addr?: string | undefined
                      conf?: string | undefined
                      flushConfig?: boolean | undefined
                      password?: string | undefined
                      redisPath?: boolean | undefined
                    }
                  | undefined
                selector?:
                  | {
                      annotationSelectors?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                      expressionSelectors?:
                        | {
                            key: string
                            operator: string
                            values?: string[] | undefined
                          }[]
                        | undefined
                      fieldSelectors?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                      labelSelectors?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                      namespaces?: string[] | undefined
                      physicalMachines?:
                        | {
                            [key: string]: string[]
                          }
                        | undefined
                    }
                  | undefined
                'stress-cpu'?:
                  | {
                      load?: number | undefined
                      options?: string[] | undefined
                      workers?: number | undefined
                    }
                  | undefined
                'stress-mem'?:
                  | {
                      options?: string[] | undefined
                      size?: string | undefined
                    }
                  | undefined
                uid?: string | undefined
                user_defined?:
                  | {
                      attackCmd?: string | undefined
                      recoverCmd?: string | undefined
                    }
                  | undefined
                value?: string | undefined
                vm?:
                  | {
                      'vm-name'?: string | undefined
                    }
                  | undefined
              }
            | undefined
          podChaos?:
            | {
                action: 'pod-kill' | 'pod-failure' | 'container-kill'
                containerNames?: string[] | undefined
                duration?: string | undefined
                gracePeriod?: number | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                value?: string | undefined
              }
            | undefined
          schedule: string
          startingDeadlineSeconds?: (number | null) | undefined
          stressChaos?:
            | {
                containerNames?: string[] | undefined
                duration?: string | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                stressngStressors?: string | undefined
                stressors?:
                  | {
                      cpu?:
                        | {
                            load?: number | undefined
                            options?: string[] | undefined
                            workers: number
                          }
                        | undefined
                      memory?:
                        | {
                            oomScoreAdj?: number | undefined
                            options?: string[] | undefined
                            size?: string | undefined
                            workers: number
                          }
                        | undefined
                    }
                  | undefined
                value?: string | undefined
              }
            | undefined
          timeChaos?:
            | {
                clockIds?: string[] | undefined
                containerNames?: string[] | undefined
                duration?: string | undefined
                mode:
                  | 'one'
                  | 'all'
                  | 'fixed'
                  | 'fixed-percent'
                  | 'random-max-percent'
                selector: {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  nodeSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  nodes?: string[] | undefined
                  podPhaseSelectors?: string[] | undefined
                  pods?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
                timeOffset: string
                value?: string | undefined
              }
            | undefined
          type: string
          workflow?:
            | {
                entry: string
                templates: {
                  abortWithStatusCheck?: boolean | undefined
                  awsChaos?:
                    | {
                        action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
                        awsRegion: string
                        deviceName?: string | undefined
                        duration?: string | undefined
                        ec2Instance: string
                        endpoint?: string | undefined
                        secretName?: string | undefined
                        volumeID?: string | undefined
                      }
                    | undefined
                  azureChaos?:
                    | {
                        action: 'vm-stop' | 'vm-restart' | 'disk-detach'
                        diskName?: string | undefined
                        duration?: string | undefined
                        lun?: number | undefined
                        resourceGroupName: string
                        secretName?: string | undefined
                        subscriptionID: string
                        vmName: string
                      }
                    | undefined
                  blockChaos?:
                    | {
                        action: 'delay'
                        containerNames?: string[] | undefined
                        delay?:
                          | {
                              correlation?: string | undefined
                              jitter?: string | undefined
                              latency?: string | undefined
                            }
                          | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                        volumeName: string
                      }
                    | undefined
                  children?: string[] | undefined
                  conditionalBranches?:
                    | {
                        expression?: string | undefined
                        target: string
                      }[]
                    | undefined
                  deadline?: string | undefined
                  dnsChaos?:
                    | {
                        action: 'error' | 'random'
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        patterns?: string[] | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  gcpChaos?:
                    | {
                        action: 'node-stop' | 'node-reset' | 'disk-loss'
                        deviceNames?: string[] | undefined
                        duration?: string | undefined
                        instance: string
                        project: string
                        secretName?: string | undefined
                        zone: string
                      }
                    | undefined
                  httpChaos?:
                    | {
                        abort?: boolean | undefined
                        code?: number | undefined
                        delay?: string | undefined
                        duration?: string | undefined
                        method?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        patch?:
                          | {
                              body?:
                                | {
                                    type: string
                                    value: string
                                  }
                                | undefined
                              headers?: string[][] | undefined
                              queries?: string[][] | undefined
                            }
                          | undefined
                        path?: string | undefined
                        port?: number | undefined
                        replace?:
                          | {
                              body?: string | undefined
                              code?: number | undefined
                              headers?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              method?: string | undefined
                              path?: string | undefined
                              queries?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                            }
                          | undefined
                        request_headers?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        response_headers?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        target: 'Request' | 'Response'
                        value?: string | undefined
                      }
                    | undefined
                  ioChaos?:
                    | {
                        action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
                        attr?:
                          | {
                              atime?:
                                | {
                                    nsec: number
                                    sec: number
                                  }
                                | undefined
                              blocks?: number | undefined
                              ctime?:
                                | {
                                    nsec: number
                                    sec: number
                                  }
                                | undefined
                              gid?: number | undefined
                              ino?: number | undefined
                              kind?: string | undefined
                              mtime?:
                                | {
                                    nsec: number
                                    sec: number
                                  }
                                | undefined
                              nlink?: number | undefined
                              perm?: number | undefined
                              rdev?: number | undefined
                              size?: number | undefined
                              uid?: number | undefined
                            }
                          | undefined
                        containerNames?: string[] | undefined
                        delay?: string | undefined
                        duration?: string | undefined
                        errno?: number | undefined
                        methods?: string[] | undefined
                        mistake?:
                          | {
                              filling?: ('zero' | 'random') | undefined
                              maxLength?: number | undefined
                              maxOccurrences?: number | undefined
                            }
                          | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        path?: string | undefined
                        percent?: number | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                        volumePath: string
                      }
                    | undefined
                  jvmChaos?:
                    | {
                        action:
                          | 'latency'
                          | 'return'
                          | 'exception'
                          | 'stress'
                          | 'gc'
                          | 'ruleData'
                          | 'mysql'
                        class?: string | undefined
                        containerNames?: string[] | undefined
                        cpuCount?: number | undefined
                        database?: string | undefined
                        duration?: string | undefined
                        exception?: string | undefined
                        latency?: number | undefined
                        memType?: string | undefined
                        method?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        mysqlConnectorVersion?: string | undefined
                        name?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                        ruleData?: string | undefined
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        sqlType?: string | undefined
                        table?: string | undefined
                        value?: string | undefined
                      }
                    | undefined
                  kernelChaos?:
                    | {
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        failKernRequest: {
                          callchain?:
                            | {
                                funcname?: string | undefined
                                parameters?: string | undefined
                                predicate?: string | undefined
                              }[]
                            | undefined
                          failtype: number
                          headers?: string[] | undefined
                          probability?: number | undefined
                          times?: number | undefined
                        }
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  name: string
                  networkChaos?:
                    | {
                        action:
                          | 'netem'
                          | 'delay'
                          | 'loss'
                          | 'duplicate'
                          | 'corrupt'
                          | 'partition'
                          | 'bandwidth'
                        bandwidth?:
                          | {
                              buffer: number
                              limit: number
                              minburst?: number | undefined
                              peakrate?: number | undefined
                              rate: string
                            }
                          | undefined
                        corrupt?:
                          | {
                              correlation?: string | undefined
                              corrupt: string
                            }
                          | undefined
                        delay?:
                          | {
                              correlation?: string | undefined
                              jitter?: string | undefined
                              latency: string
                              reorder?:
                                | {
                                    correlation?: string | undefined
                                    gap: number
                                    reorder: string
                                  }
                                | undefined
                            }
                          | undefined
                        device?: string | undefined
                        direction?: ('to' | 'from' | 'both') | undefined
                        duplicate?:
                          | {
                              correlation?: string | undefined
                              duplicate: string
                            }
                          | undefined
                        duration?: string | undefined
                        externalTargets?: string[] | undefined
                        loss?:
                          | {
                              correlation?: string | undefined
                              loss: string
                            }
                          | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        target?:
                          | {
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                            }
                          | undefined
                        targetDevice?: string | undefined
                        value?: string | undefined
                      }
                    | undefined
                  physicalmachineChaos?:
                    | {
                        action:
                          | 'stress-cpu'
                          | 'stress-mem'
                          | 'disk-read-payload'
                          | 'disk-write-payload'
                          | 'disk-fill'
                          | 'network-corrupt'
                          | 'network-duplicate'
                          | 'network-loss'
                          | 'network-delay'
                          | 'network-partition'
                          | 'network-dns'
                          | 'network-bandwidth'
                          | 'network-flood'
                          | 'network-down'
                          | 'process'
                          | 'jvm-exception'
                          | 'jvm-gc'
                          | 'jvm-latency'
                          | 'jvm-return'
                          | 'jvm-stress'
                          | 'jvm-rule-data'
                          | 'jvm-mysql'
                          | 'clock'
                          | 'redis-expiration'
                          | 'redis-penetration'
                          | 'redis-cacheLimit'
                          | 'redis-restart'
                          | 'redis-stop'
                          | 'kafka-fill'
                          | 'kafka-flood'
                          | 'kafka-io'
                          | 'file-create'
                          | 'file-modify'
                          | 'file-delete'
                          | 'file-rename'
                          | 'file-append'
                          | 'file-replace'
                          | 'vm'
                          | 'user_defined'
                        address?: string[] | undefined
                        clock?:
                          | {
                              'clock-ids-slice'?: string | undefined
                              pid?: number | undefined
                              'time-offset'?: string | undefined
                            }
                          | undefined
                        'disk-fill'?:
                          | {
                              'fill-by-fallocate'?: boolean | undefined
                              path?: string | undefined
                              size?: string | undefined
                            }
                          | undefined
                        'disk-read-payload'?:
                          | {
                              path?: string | undefined
                              'payload-process-num'?: number | undefined
                              size?: string | undefined
                            }
                          | undefined
                        'disk-write-payload'?:
                          | {
                              path?: string | undefined
                              'payload-process-num'?: number | undefined
                              size?: string | undefined
                            }
                          | undefined
                        duration?: string | undefined
                        'file-append'?:
                          | {
                              count?: number | undefined
                              data?: string | undefined
                              'file-name'?: string | undefined
                            }
                          | undefined
                        'file-create'?:
                          | {
                              'dir-name'?: string | undefined
                              'file-name'?: string | undefined
                            }
                          | undefined
                        'file-delete'?:
                          | {
                              'dir-name'?: string | undefined
                              'file-name'?: string | undefined
                            }
                          | undefined
                        'file-modify'?:
                          | {
                              'file-name'?: string | undefined
                              privilege?: number | undefined
                            }
                          | undefined
                        'file-rename'?:
                          | {
                              'dest-file'?: string | undefined
                              'source-file'?: string | undefined
                            }
                          | undefined
                        'file-replace'?:
                          | {
                              'dest-string'?: string | undefined
                              'file-name'?: string | undefined
                              line?: number | undefined
                              'origin-string'?: string | undefined
                            }
                          | undefined
                        'http-abort'?:
                          | {
                              code?: string | undefined
                              method?: string | undefined
                              path?: string | undefined
                              port?: number | undefined
                              proxy_ports: number[]
                              target: string
                            }
                          | undefined
                        'http-config'?:
                          | {
                              file_path?: string | undefined
                            }
                          | undefined
                        'http-delay'?:
                          | {
                              code?: string | undefined
                              delay: string
                              method?: string | undefined
                              path?: string | undefined
                              port?: number | undefined
                              proxy_ports: number[]
                              target: string
                            }
                          | undefined
                        'http-request'?:
                          | {
                              count?: number | undefined
                              'enable-conn-pool'?: boolean | undefined
                              url?: string | undefined
                            }
                          | undefined
                        'jvm-exception'?:
                          | {
                              class?: string | undefined
                              exception?: string | undefined
                              method?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'jvm-gc'?:
                          | {
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'jvm-latency'?:
                          | {
                              class?: string | undefined
                              latency?: number | undefined
                              method?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'jvm-mysql'?:
                          | {
                              database?: string | undefined
                              exception?: string | undefined
                              latency?: number | undefined
                              mysqlConnectorVersion?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                              sqlType?: string | undefined
                              table?: string | undefined
                            }
                          | undefined
                        'jvm-return'?:
                          | {
                              class?: string | undefined
                              method?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                              value?: string | undefined
                            }
                          | undefined
                        'jvm-rule-data'?:
                          | {
                              pid?: number | undefined
                              port?: number | undefined
                              'rule-data'?: string | undefined
                            }
                          | undefined
                        'jvm-stress'?:
                          | {
                              'cpu-count'?: number | undefined
                              'mem-type'?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                            }
                          | undefined
                        'kafka-fill'?:
                          | {
                              host?: string | undefined
                              maxBytes?: number | undefined
                              messageSize?: number | undefined
                              password?: string | undefined
                              port?: number | undefined
                              reloadCommand?: string | undefined
                              topic?: string | undefined
                              username?: string | undefined
                            }
                          | undefined
                        'kafka-flood'?:
                          | {
                              host?: string | undefined
                              messageSize?: number | undefined
                              password?: string | undefined
                              port?: number | undefined
                              threads?: number | undefined
                              topic?: string | undefined
                              username?: string | undefined
                            }
                          | undefined
                        'kafka-io'?:
                          | {
                              configFile?: string | undefined
                              nonReadable?: boolean | undefined
                              nonWritable?: boolean | undefined
                              topic?: string | undefined
                            }
                          | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        'network-bandwidth'?:
                          | {
                              buffer: number
                              device?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              limit: number
                              minburst?: number | undefined
                              peakrate?: number | undefined
                              rate: string
                            }
                          | undefined
                        'network-corrupt'?:
                          | {
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              percent?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-delay'?:
                          | {
                              'accept-tcp-flags'?: string | undefined
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              jitter?: string | undefined
                              latency?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-dns'?:
                          | {
                              'dns-domain-name'?: string | undefined
                              'dns-ip'?: string | undefined
                              'dns-server'?: string | undefined
                            }
                          | undefined
                        'network-down'?:
                          | {
                              device?: string | undefined
                              duration?: string | undefined
                            }
                          | undefined
                        'network-duplicate'?:
                          | {
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              percent?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-flood'?:
                          | {
                              duration: string
                              'ip-address'?: string | undefined
                              parallel?: number | undefined
                              port?: string | undefined
                              rate: string
                            }
                          | undefined
                        'network-loss'?:
                          | {
                              correlation?: string | undefined
                              device?: string | undefined
                              'egress-port'?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                              percent?: string | undefined
                              'source-port'?: string | undefined
                            }
                          | undefined
                        'network-partition'?:
                          | {
                              'accept-tcp-flags'?: string | undefined
                              device?: string | undefined
                              direction?: string | undefined
                              hostname?: string | undefined
                              'ip-address'?: string | undefined
                              'ip-protocol'?: string | undefined
                            }
                          | undefined
                        process?:
                          | {
                              process?: string | undefined
                              recoverCmd?: string | undefined
                              signal?: number | undefined
                            }
                          | undefined
                        'redis-cacheLimit'?:
                          | {
                              addr?: string | undefined
                              cacheSize?: string | undefined
                              password?: string | undefined
                              percent?: string | undefined
                            }
                          | undefined
                        'redis-expiration'?:
                          | {
                              addr?: string | undefined
                              expiration?: string | undefined
                              key?: string | undefined
                              option?: string | undefined
                              password?: string | undefined
                            }
                          | undefined
                        'redis-penetration'?:
                          | {
                              addr?: string | undefined
                              password?: string | undefined
                              requestNum?: number | undefined
                            }
                          | undefined
                        'redis-restart'?:
                          | {
                              addr?: string | undefined
                              conf?: string | undefined
                              flushConfig?: boolean | undefined
                              password?: string | undefined
                              redisPath?: boolean | undefined
                            }
                          | undefined
                        'redis-stop'?:
                          | {
                              addr?: string | undefined
                              conf?: string | undefined
                              flushConfig?: boolean | undefined
                              password?: string | undefined
                              redisPath?: boolean | undefined
                            }
                          | undefined
                        selector?:
                          | {
                              annotationSelectors?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              expressionSelectors?:
                                | {
                                    key: string
                                    operator: string
                                    values?: string[] | undefined
                                  }[]
                                | undefined
                              fieldSelectors?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              labelSelectors?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              namespaces?: string[] | undefined
                              physicalMachines?:
                                | {
                                    [key: string]: string[]
                                  }
                                | undefined
                            }
                          | undefined
                        'stress-cpu'?:
                          | {
                              load?: number | undefined
                              options?: string[] | undefined
                              workers?: number | undefined
                            }
                          | undefined
                        'stress-mem'?:
                          | {
                              options?: string[] | undefined
                              size?: string | undefined
                            }
                          | undefined
                        uid?: string | undefined
                        user_defined?:
                          | {
                              attackCmd?: string | undefined
                              recoverCmd?: string | undefined
                            }
                          | undefined
                        value?: string | undefined
                        vm?:
                          | {
                              'vm-name'?: string | undefined
                            }
                          | undefined
                      }
                    | undefined
                  podChaos?:
                    | {
                        action: 'pod-kill' | 'pod-failure' | 'container-kill'
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        gracePeriod?: number | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  schedule?:
                    | {
                        awsChaos?:
                          | {
                              action:
                                | 'ec2-stop'
                                | 'ec2-restart'
                                | 'detach-volume'
                              awsRegion: string
                              deviceName?: string | undefined
                              duration?: string | undefined
                              ec2Instance: string
                              endpoint?: string | undefined
                              secretName?: string | undefined
                              volumeID?: string | undefined
                            }
                          | undefined
                        azureChaos?:
                          | {
                              action: 'vm-stop' | 'vm-restart' | 'disk-detach'
                              diskName?: string | undefined
                              duration?: string | undefined
                              lun?: number | undefined
                              resourceGroupName: string
                              secretName?: string | undefined
                              subscriptionID: string
                              vmName: string
                            }
                          | undefined
                        blockChaos?:
                          | {
                              action: 'delay'
                              containerNames?: string[] | undefined
                              delay?:
                                | {
                                    correlation?: string | undefined
                                    jitter?: string | undefined
                                    latency?: string | undefined
                                  }
                                | undefined
                              duration?: string | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                              volumeName: string
                            }
                          | undefined
                        concurrencyPolicy?: ('Forbid' | 'Allow') | undefined
                        dnsChaos?:
                          | {
                              action: 'error' | 'random'
                              containerNames?: string[] | undefined
                              duration?: string | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              patterns?: string[] | undefined
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                            }
                          | undefined
                        gcpChaos?:
                          | {
                              action: 'node-stop' | 'node-reset' | 'disk-loss'
                              deviceNames?: string[] | undefined
                              duration?: string | undefined
                              instance: string
                              project: string
                              secretName?: string | undefined
                              zone: string
                            }
                          | undefined
                        historyLimit?: number | undefined
                        httpChaos?:
                          | {
                              abort?: boolean | undefined
                              code?: number | undefined
                              delay?: string | undefined
                              duration?: string | undefined
                              method?: string | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              patch?:
                                | {
                                    body?:
                                      | {
                                          type: string
                                          value: string
                                        }
                                      | undefined
                                    headers?: string[][] | undefined
                                    queries?: string[][] | undefined
                                  }
                                | undefined
                              path?: string | undefined
                              port?: number | undefined
                              replace?:
                                | {
                                    body?: string | undefined
                                    code?: number | undefined
                                    headers?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                    method?: string | undefined
                                    path?: string | undefined
                                    queries?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                  }
                                | undefined
                              request_headers?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              response_headers?:
                                | {
                                    [key: string]: string
                                  }
                                | undefined
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              target: 'Request' | 'Response'
                              value?: string | undefined
                            }
                          | undefined
                        ioChaos?:
                          | {
                              action:
                                | 'latency'
                                | 'fault'
                                | 'attrOverride'
                                | 'mistake'
                              attr?:
                                | {
                                    atime?:
                                      | {
                                          nsec: number
                                          sec: number
                                        }
                                      | undefined
                                    blocks?: number | undefined
                                    ctime?:
                                      | {
                                          nsec: number
                                          sec: number
                                        }
                                      | undefined
                                    gid?: number | undefined
                                    ino?: number | undefined
                                    kind?: string | undefined
                                    mtime?:
                                      | {
                                          nsec: number
                                          sec: number
                                        }
                                      | undefined
                                    nlink?: number | undefined
                                    perm?: number | undefined
                                    rdev?: number | undefined
                                    size?: number | undefined
                                    uid?: number | undefined
                                  }
                                | undefined
                              containerNames?: string[] | undefined
                              delay?: string | undefined
                              duration?: string | undefined
                              errno?: number | undefined
                              methods?: string[] | undefined
                              mistake?:
                                | {
                                    filling?: ('zero' | 'random') | undefined
                                    maxLength?: number | undefined
                                    maxOccurrences?: number | undefined
                                  }
                                | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              path?: string | undefined
                              percent?: number | undefined
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                              volumePath: string
                            }
                          | undefined
                        jvmChaos?:
                          | {
                              action:
                                | 'latency'
                                | 'return'
                                | 'exception'
                                | 'stress'
                                | 'gc'
                                | 'ruleData'
                                | 'mysql'
                              class?: string | undefined
                              containerNames?: string[] | undefined
                              cpuCount?: number | undefined
                              database?: string | undefined
                              duration?: string | undefined
                              exception?: string | undefined
                              latency?: number | undefined
                              memType?: string | undefined
                              method?: string | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              mysqlConnectorVersion?: string | undefined
                              name?: string | undefined
                              pid?: number | undefined
                              port?: number | undefined
                              ruleData?: string | undefined
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              sqlType?: string | undefined
                              table?: string | undefined
                              value?: string | undefined
                            }
                          | undefined
                        kernelChaos?:
                          | {
                              containerNames?: string[] | undefined
                              duration?: string | undefined
                              failKernRequest: {
                                callchain?:
                                  | {
                                      funcname?: string | undefined
                                      parameters?: string | undefined
                                      predicate?: string | undefined
                                    }[]
                                  | undefined
                                failtype: number
                                headers?: string[] | undefined
                                probability?: number | undefined
                                times?: number | undefined
                              }
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                            }
                          | undefined
                        networkChaos?:
                          | {
                              action:
                                | 'netem'
                                | 'delay'
                                | 'loss'
                                | 'duplicate'
                                | 'corrupt'
                                | 'partition'
                                | 'bandwidth'
                              bandwidth?:
                                | {
                                    buffer: number
                                    limit: number
                                    minburst?: number | undefined
                                    peakrate?: number | undefined
                                    rate: string
                                  }
                                | undefined
                              corrupt?:
                                | {
                                    correlation?: string | undefined
                                    corrupt: string
                                  }
                                | undefined
                              delay?:
                                | {
                                    correlation?: string | undefined
                                    jitter?: string | undefined
                                    latency: string
                                    reorder?:
                                      | {
                                          correlation?: string | undefined
                                          gap: number
                                          reorder: string
                                        }
                                      | undefined
                                  }
                                | undefined
                              device?: string | undefined
                              direction?: ('to' | 'from' | 'both') | undefined
                              duplicate?:
                                | {
                                    correlation?: string | undefined
                                    duplicate: string
                                  }
                                | undefined
                              duration?: string | undefined
                              externalTargets?: string[] | undefined
                              loss?:
                                | {
                                    correlation?: string | undefined
                                    loss: string
                                  }
                                | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              target?:
                                | {
                                    mode:
                                      | 'one'
                                      | 'all'
                                      | 'fixed'
                                      | 'fixed-percent'
                                      | 'random-max-percent'
                                    selector: {
                                      annotationSelectors?:
                                        | {
                                            [key: string]: string
                                          }
                                        | undefined
                                      expressionSelectors?:
                                        | {
                                            key: string
                                            operator: string
                                            values?: string[] | undefined
                                          }[]
                                        | undefined
                                      fieldSelectors?:
                                        | {
                                            [key: string]: string
                                          }
                                        | undefined
                                      labelSelectors?:
                                        | {
                                            [key: string]: string
                                          }
                                        | undefined
                                      namespaces?: string[] | undefined
                                      nodeSelectors?:
                                        | {
                                            [key: string]: string
                                          }
                                        | undefined
                                      nodes?: string[] | undefined
                                      podPhaseSelectors?: string[] | undefined
                                      pods?:
                                        | {
                                            [key: string]: string[]
                                          }
                                        | undefined
                                    }
                                    value?: string | undefined
                                  }
                                | undefined
                              targetDevice?: string | undefined
                              value?: string | undefined
                            }
                          | undefined
                        physicalmachineChaos?:
                          | {
                              action:
                                | 'stress-cpu'
                                | 'stress-mem'
                                | 'disk-read-payload'
                                | 'disk-write-payload'
                                | 'disk-fill'
                                | 'network-corrupt'
                                | 'network-duplicate'
                                | 'network-loss'
                                | 'network-delay'
                                | 'network-partition'
                                | 'network-dns'
                                | 'network-bandwidth'
                                | 'network-flood'
                                | 'network-down'
                                | 'process'
                                | 'jvm-exception'
                                | 'jvm-gc'
                                | 'jvm-latency'
                                | 'jvm-return'
                                | 'jvm-stress'
                                | 'jvm-rule-data'
                                | 'jvm-mysql'
                                | 'clock'
                                | 'redis-expiration'
                                | 'redis-penetration'
                                | 'redis-cacheLimit'
                                | 'redis-restart'
                                | 'redis-stop'
                                | 'kafka-fill'
                                | 'kafka-flood'
                                | 'kafka-io'
                                | 'file-create'
                                | 'file-modify'
                                | 'file-delete'
                                | 'file-rename'
                                | 'file-append'
                                | 'file-replace'
                                | 'vm'
                                | 'user_defined'
                              address?: string[] | undefined
                              clock?:
                                | {
                                    'clock-ids-slice'?: string | undefined
                                    pid?: number | undefined
                                    'time-offset'?: string | undefined
                                  }
                                | undefined
                              'disk-fill'?:
                                | {
                                    'fill-by-fallocate'?: boolean | undefined
                                    path?: string | undefined
                                    size?: string | undefined
                                  }
                                | undefined
                              'disk-read-payload'?:
                                | {
                                    path?: string | undefined
                                    'payload-process-num'?: number | undefined
                                    size?: string | undefined
                                  }
                                | undefined
                              'disk-write-payload'?:
                                | {
                                    path?: string | undefined
                                    'payload-process-num'?: number | undefined
                                    size?: string | undefined
                                  }
                                | undefined
                              duration?: string | undefined
                              'file-append'?:
                                | {
                                    count?: number | undefined
                                    data?: string | undefined
                                    'file-name'?: string | undefined
                                  }
                                | undefined
                              'file-create'?:
                                | {
                                    'dir-name'?: string | undefined
                                    'file-name'?: string | undefined
                                  }
                                | undefined
                              'file-delete'?:
                                | {
                                    'dir-name'?: string | undefined
                                    'file-name'?: string | undefined
                                  }
                                | undefined
                              'file-modify'?:
                                | {
                                    'file-name'?: string | undefined
                                    privilege?: number | undefined
                                  }
                                | undefined
                              'file-rename'?:
                                | {
                                    'dest-file'?: string | undefined
                                    'source-file'?: string | undefined
                                  }
                                | undefined
                              'file-replace'?:
                                | {
                                    'dest-string'?: string | undefined
                                    'file-name'?: string | undefined
                                    line?: number | undefined
                                    'origin-string'?: string | undefined
                                  }
                                | undefined
                              'http-abort'?:
                                | {
                                    code?: string | undefined
                                    method?: string | undefined
                                    path?: string | undefined
                                    port?: number | undefined
                                    proxy_ports: number[]
                                    target: string
                                  }
                                | undefined
                              'http-config'?:
                                | {
                                    file_path?: string | undefined
                                  }
                                | undefined
                              'http-delay'?:
                                | {
                                    code?: string | undefined
                                    delay: string
                                    method?: string | undefined
                                    path?: string | undefined
                                    port?: number | undefined
                                    proxy_ports: number[]
                                    target: string
                                  }
                                | undefined
                              'http-request'?:
                                | {
                                    count?: number | undefined
                                    'enable-conn-pool'?: boolean | undefined
                                    url?: string | undefined
                                  }
                                | undefined
                              'jvm-exception'?:
                                | {
                                    class?: string | undefined
                                    exception?: string | undefined
                                    method?: string | undefined
                                    pid?: number | undefined
                                    port?: number | undefined
                                  }
                                | undefined
                              'jvm-gc'?:
                                | {
                                    pid?: number | undefined
                                    port?: number | undefined
                                  }
                                | undefined
                              'jvm-latency'?:
                                | {
                                    class?: string | undefined
                                    latency?: number | undefined
                                    method?: string | undefined
                                    pid?: number | undefined
                                    port?: number | undefined
                                  }
                                | undefined
                              'jvm-mysql'?:
                                | {
                                    database?: string | undefined
                                    exception?: string | undefined
                                    latency?: number | undefined
                                    mysqlConnectorVersion?: string | undefined
                                    pid?: number | undefined
                                    port?: number | undefined
                                    sqlType?: string | undefined
                                    table?: string | undefined
                                  }
                                | undefined
                              'jvm-return'?:
                                | {
                                    class?: string | undefined
                                    method?: string | undefined
                                    pid?: number | undefined
                                    port?: number | undefined
                                    value?: string | undefined
                                  }
                                | undefined
                              'jvm-rule-data'?:
                                | {
                                    pid?: number | undefined
                                    port?: number | undefined
                                    'rule-data'?: string | undefined
                                  }
                                | undefined
                              'jvm-stress'?:
                                | {
                                    'cpu-count'?: number | undefined
                                    'mem-type'?: string | undefined
                                    pid?: number | undefined
                                    port?: number | undefined
                                  }
                                | undefined
                              'kafka-fill'?:
                                | {
                                    host?: string | undefined
                                    maxBytes?: number | undefined
                                    messageSize?: number | undefined
                                    password?: string | undefined
                                    port?: number | undefined
                                    reloadCommand?: string | undefined
                                    topic?: string | undefined
                                    username?: string | undefined
                                  }
                                | undefined
                              'kafka-flood'?:
                                | {
                                    host?: string | undefined
                                    messageSize?: number | undefined
                                    password?: string | undefined
                                    port?: number | undefined
                                    threads?: number | undefined
                                    topic?: string | undefined
                                    username?: string | undefined
                                  }
                                | undefined
                              'kafka-io'?:
                                | {
                                    configFile?: string | undefined
                                    nonReadable?: boolean | undefined
                                    nonWritable?: boolean | undefined
                                    topic?: string | undefined
                                  }
                                | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              'network-bandwidth'?:
                                | {
                                    buffer: number
                                    device?: string | undefined
                                    hostname?: string | undefined
                                    'ip-address'?: string | undefined
                                    limit: number
                                    minburst?: number | undefined
                                    peakrate?: number | undefined
                                    rate: string
                                  }
                                | undefined
                              'network-corrupt'?:
                                | {
                                    correlation?: string | undefined
                                    device?: string | undefined
                                    'egress-port'?: string | undefined
                                    hostname?: string | undefined
                                    'ip-address'?: string | undefined
                                    'ip-protocol'?: string | undefined
                                    percent?: string | undefined
                                    'source-port'?: string | undefined
                                  }
                                | undefined
                              'network-delay'?:
                                | {
                                    'accept-tcp-flags'?: string | undefined
                                    correlation?: string | undefined
                                    device?: string | undefined
                                    'egress-port'?: string | undefined
                                    hostname?: string | undefined
                                    'ip-address'?: string | undefined
                                    'ip-protocol'?: string | undefined
                                    jitter?: string | undefined
                                    latency?: string | undefined
                                    'source-port'?: string | undefined
                                  }
                                | undefined
                              'network-dns'?:
                                | {
                                    'dns-domain-name'?: string | undefined
                                    'dns-ip'?: string | undefined
                                    'dns-server'?: string | undefined
                                  }
                                | undefined
                              'network-down'?:
                                | {
                                    device?: string | undefined
                                    duration?: string | undefined
                                  }
                                | undefined
                              'network-duplicate'?:
                                | {
                                    correlation?: string | undefined
                                    device?: string | undefined
                                    'egress-port'?: string | undefined
                                    hostname?: string | undefined
                                    'ip-address'?: string | undefined
                                    'ip-protocol'?: string | undefined
                                    percent?: string | undefined
                                    'source-port'?: string | undefined
                                  }
                                | undefined
                              'network-flood'?:
                                | {
                                    duration: string
                                    'ip-address'?: string | undefined
                                    parallel?: number | undefined
                                    port?: string | undefined
                                    rate: string
                                  }
                                | undefined
                              'network-loss'?:
                                | {
                                    correlation?: string | undefined
                                    device?: string | undefined
                                    'egress-port'?: string | undefined
                                    hostname?: string | undefined
                                    'ip-address'?: string | undefined
                                    'ip-protocol'?: string | undefined
                                    percent?: string | undefined
                                    'source-port'?: string | undefined
                                  }
                                | undefined
                              'network-partition'?:
                                | {
                                    'accept-tcp-flags'?: string | undefined
                                    device?: string | undefined
                                    direction?: string | undefined
                                    hostname?: string | undefined
                                    'ip-address'?: string | undefined
                                    'ip-protocol'?: string | undefined
                                  }
                                | undefined
                              process?:
                                | {
                                    process?: string | undefined
                                    recoverCmd?: string | undefined
                                    signal?: number | undefined
                                  }
                                | undefined
                              'redis-cacheLimit'?:
                                | {
                                    addr?: string | undefined
                                    cacheSize?: string | undefined
                                    password?: string | undefined
                                    percent?: string | undefined
                                  }
                                | undefined
                              'redis-expiration'?:
                                | {
                                    addr?: string | undefined
                                    expiration?: string | undefined
                                    key?: string | undefined
                                    option?: string | undefined
                                    password?: string | undefined
                                  }
                                | undefined
                              'redis-penetration'?:
                                | {
                                    addr?: string | undefined
                                    password?: string | undefined
                                    requestNum?: number | undefined
                                  }
                                | undefined
                              'redis-restart'?:
                                | {
                                    addr?: string | undefined
                                    conf?: string | undefined
                                    flushConfig?: boolean | undefined
                                    password?: string | undefined
                                    redisPath?: boolean | undefined
                                  }
                                | undefined
                              'redis-stop'?:
                                | {
                                    addr?: string | undefined
                                    conf?: string | undefined
                                    flushConfig?: boolean | undefined
                                    password?: string | undefined
                                    redisPath?: boolean | undefined
                                  }
                                | undefined
                              selector?:
                                | {
                                    annotationSelectors?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                    expressionSelectors?:
                                      | {
                                          key: string
                                          operator: string
                                          values?: string[] | undefined
                                        }[]
                                      | undefined
                                    fieldSelectors?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                    labelSelectors?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                    namespaces?: string[] | undefined
                                    physicalMachines?:
                                      | {
                                          [key: string]: string[]
                                        }
                                      | undefined
                                  }
                                | undefined
                              'stress-cpu'?:
                                | {
                                    load?: number | undefined
                                    options?: string[] | undefined
                                    workers?: number | undefined
                                  }
                                | undefined
                              'stress-mem'?:
                                | {
                                    options?: string[] | undefined
                                    size?: string | undefined
                                  }
                                | undefined
                              uid?: string | undefined
                              user_defined?:
                                | {
                                    attackCmd?: string | undefined
                                    recoverCmd?: string | undefined
                                  }
                                | undefined
                              value?: string | undefined
                              vm?:
                                | {
                                    'vm-name'?: string | undefined
                                  }
                                | undefined
                            }
                          | undefined
                        podChaos?:
                          | {
                              action:
                                | 'pod-kill'
                                | 'pod-failure'
                                | 'container-kill'
                              containerNames?: string[] | undefined
                              duration?: string | undefined
                              gracePeriod?: number | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              value?: string | undefined
                            }
                          | undefined
                        schedule: string
                        startingDeadlineSeconds?: (number | null) | undefined
                        stressChaos?:
                          | {
                              containerNames?: string[] | undefined
                              duration?: string | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              stressngStressors?: string | undefined
                              stressors?:
                                | {
                                    cpu?:
                                      | {
                                          load?: number | undefined
                                          options?: string[] | undefined
                                          workers: number
                                        }
                                      | undefined
                                    memory?:
                                      | {
                                          oomScoreAdj?: number | undefined
                                          options?: string[] | undefined
                                          size?: string | undefined
                                          workers: number
                                        }
                                      | undefined
                                  }
                                | undefined
                              value?: string | undefined
                            }
                          | undefined
                        timeChaos?:
                          | {
                              clockIds?: string[] | undefined
                              containerNames?: string[] | undefined
                              duration?: string | undefined
                              mode:
                                | 'one'
                                | 'all'
                                | 'fixed'
                                | 'fixed-percent'
                                | 'random-max-percent'
                              selector: {
                                annotationSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                expressionSelectors?:
                                  | {
                                      key: string
                                      operator: string
                                      values?: string[] | undefined
                                    }[]
                                  | undefined
                                fieldSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                labelSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                namespaces?: string[] | undefined
                                nodeSelectors?:
                                  | {
                                      [key: string]: string
                                    }
                                  | undefined
                                nodes?: string[] | undefined
                                podPhaseSelectors?: string[] | undefined
                                pods?:
                                  | {
                                      [key: string]: string[]
                                    }
                                  | undefined
                              }
                              timeOffset: string
                              value?: string | undefined
                            }
                          | undefined
                        type: string
                      }
                    | undefined
                  statusCheck?:
                    | {
                        duration?: string | undefined
                        failureThreshold?: number | undefined
                        http?:
                          | {
                              body?: string | undefined
                              criteria: {
                                statusCode: string
                              }
                              headers?:
                                | {
                                    [key: string]: string[]
                                  }
                                | undefined
                              method?: ('GET' | 'POST') | undefined
                              url: string
                            }
                          | undefined
                        intervalSeconds?: number | undefined
                        mode?: ('Synchronous' | 'Continuous') | undefined
                        recordsHistoryLimit?: number | undefined
                        successThreshold?: number | undefined
                        timeoutSeconds?: number | undefined
                        type: 'HTTP'
                      }
                    | undefined
                  stressChaos?:
                    | {
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        stressngStressors?: string | undefined
                        stressors?:
                          | {
                              cpu?:
                                | {
                                    load?: number | undefined
                                    options?: string[] | undefined
                                    workers: number
                                  }
                                | undefined
                              memory?:
                                | {
                                    oomScoreAdj?: number | undefined
                                    options?: string[] | undefined
                                    size?: string | undefined
                                    workers: number
                                  }
                                | undefined
                            }
                          | undefined
                        value?: string | undefined
                      }
                    | undefined
                  task?:
                    | {
                        container?:
                          | {
                              args?: string[] | undefined
                              command?: string[] | undefined
                              env?:
                                | {
                                    name: string
                                    value?: string | undefined
                                    valueFrom?:
                                      | {
                                          configMapKeyRef?:
                                            | {
                                                key: string
                                                name?: string | undefined
                                                optional?: boolean | undefined
                                              }
                                            | undefined
                                          fieldRef?:
                                            | {
                                                apiVersion?: string | undefined
                                                fieldPath: string
                                              }
                                            | undefined
                                          resourceFieldRef?:
                                            | {
                                                containerName?:
                                                  | string
                                                  | undefined
                                                divisor?:
                                                  | (number | string)
                                                  | undefined
                                                resource: string
                                              }
                                            | undefined
                                          secretKeyRef?:
                                            | {
                                                key: string
                                                name?: string | undefined
                                                optional?: boolean | undefined
                                              }
                                            | undefined
                                        }
                                      | undefined
                                  }[]
                                | undefined
                              envFrom?:
                                | {
                                    configMapRef?:
                                      | {
                                          name?: string | undefined
                                          optional?: boolean | undefined
                                        }
                                      | undefined
                                    prefix?: string | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                          optional?: boolean | undefined
                                        }
                                      | undefined
                                  }[]
                                | undefined
                              image?: string | undefined
                              imagePullPolicy?: string | undefined
                              lifecycle?:
                                | {
                                    postStart?:
                                      | {
                                          exec?:
                                            | {
                                                command?: string[] | undefined
                                              }
                                            | undefined
                                          httpGet?:
                                            | {
                                                host?: string | undefined
                                                httpHeaders?:
                                                  | {
                                                      name: string
                                                      value: string
                                                    }[]
                                                  | undefined
                                                path?: string | undefined
                                                port: number | string
                                                scheme?: string | undefined
                                              }
                                            | undefined
                                          tcpSocket?:
                                            | {
                                                host?: string | undefined
                                                port: number | string
                                              }
                                            | undefined
                                        }
                                      | undefined
                                    preStop?:
                                      | {
                                          exec?:
                                            | {
                                                command?: string[] | undefined
                                              }
                                            | undefined
                                          httpGet?:
                                            | {
                                                host?: string | undefined
                                                httpHeaders?:
                                                  | {
                                                      name: string
                                                      value: string
                                                    }[]
                                                  | undefined
                                                path?: string | undefined
                                                port: number | string
                                                scheme?: string | undefined
                                              }
                                            | undefined
                                          tcpSocket?:
                                            | {
                                                host?: string | undefined
                                                port: number | string
                                              }
                                            | undefined
                                        }
                                      | undefined
                                  }
                                | undefined
                              livenessProbe?:
                                | {
                                    exec?:
                                      | {
                                          command?: string[] | undefined
                                        }
                                      | undefined
                                    failureThreshold?: number | undefined
                                    grpc?:
                                      | {
                                          port: number
                                          service?: string | undefined
                                        }
                                      | undefined
                                    httpGet?:
                                      | {
                                          host?: string | undefined
                                          httpHeaders?:
                                            | {
                                                name: string
                                                value: string
                                              }[]
                                            | undefined
                                          path?: string | undefined
                                          port: number | string
                                          scheme?: string | undefined
                                        }
                                      | undefined
                                    initialDelaySeconds?: number | undefined
                                    periodSeconds?: number | undefined
                                    successThreshold?: number | undefined
                                    tcpSocket?:
                                      | {
                                          host?: string | undefined
                                          port: number | string
                                        }
                                      | undefined
                                    terminationGracePeriodSeconds?:
                                      | number
                                      | undefined
                                    timeoutSeconds?: number | undefined
                                  }
                                | undefined
                              name: string
                              ports?:
                                | {
                                    containerPort: number
                                    hostIP?: string | undefined
                                    hostPort?: number | undefined
                                    name?: string | undefined
                                    protocol?: string | undefined
                                  }[]
                                | undefined
                              readinessProbe?:
                                | {
                                    exec?:
                                      | {
                                          command?: string[] | undefined
                                        }
                                      | undefined
                                    failureThreshold?: number | undefined
                                    grpc?:
                                      | {
                                          port: number
                                          service?: string | undefined
                                        }
                                      | undefined
                                    httpGet?:
                                      | {
                                          host?: string | undefined
                                          httpHeaders?:
                                            | {
                                                name: string
                                                value: string
                                              }[]
                                            | undefined
                                          path?: string | undefined
                                          port: number | string
                                          scheme?: string | undefined
                                        }
                                      | undefined
                                    initialDelaySeconds?: number | undefined
                                    periodSeconds?: number | undefined
                                    successThreshold?: number | undefined
                                    tcpSocket?:
                                      | {
                                          host?: string | undefined
                                          port: number | string
                                        }
                                      | undefined
                                    terminationGracePeriodSeconds?:
                                      | number
                                      | undefined
                                    timeoutSeconds?: number | undefined
                                  }
                                | undefined
                              resources?:
                                | {
                                    limits?:
                                      | {
                                          [key: string]: number | string
                                        }
                                      | undefined
                                    requests?:
                                      | {
                                          [key: string]: number | string
                                        }
                                      | undefined
                                  }
                                | undefined
                              securityContext?:
                                | {
                                    allowPrivilegeEscalation?:
                                      | boolean
                                      | undefined
                                    capabilities?:
                                      | {
                                          add?: string[] | undefined
                                          drop?: string[] | undefined
                                        }
                                      | undefined
                                    privileged?: boolean | undefined
                                    procMount?: string | undefined
                                    readOnlyRootFilesystem?: boolean | undefined
                                    runAsGroup?: number | undefined
                                    runAsNonRoot?: boolean | undefined
                                    runAsUser?: number | undefined
                                    seLinuxOptions?:
                                      | {
                                          level?: string | undefined
                                          role?: string | undefined
                                          type?: string | undefined
                                          user?: string | undefined
                                        }
                                      | undefined
                                    seccompProfile?:
                                      | {
                                          localhostProfile?: string | undefined
                                          type: string
                                        }
                                      | undefined
                                    windowsOptions?:
                                      | {
                                          gmsaCredentialSpec?:
                                            | string
                                            | undefined
                                          gmsaCredentialSpecName?:
                                            | string
                                            | undefined
                                          hostProcess?: boolean | undefined
                                          runAsUserName?: string | undefined
                                        }
                                      | undefined
                                  }
                                | undefined
                              startupProbe?:
                                | {
                                    exec?:
                                      | {
                                          command?: string[] | undefined
                                        }
                                      | undefined
                                    failureThreshold?: number | undefined
                                    grpc?:
                                      | {
                                          port: number
                                          service?: string | undefined
                                        }
                                      | undefined
                                    httpGet?:
                                      | {
                                          host?: string | undefined
                                          httpHeaders?:
                                            | {
                                                name: string
                                                value: string
                                              }[]
                                            | undefined
                                          path?: string | undefined
                                          port: number | string
                                          scheme?: string | undefined
                                        }
                                      | undefined
                                    initialDelaySeconds?: number | undefined
                                    periodSeconds?: number | undefined
                                    successThreshold?: number | undefined
                                    tcpSocket?:
                                      | {
                                          host?: string | undefined
                                          port: number | string
                                        }
                                      | undefined
                                    terminationGracePeriodSeconds?:
                                      | number
                                      | undefined
                                    timeoutSeconds?: number | undefined
                                  }
                                | undefined
                              stdin?: boolean | undefined
                              stdinOnce?: boolean | undefined
                              terminationMessagePath?: string | undefined
                              terminationMessagePolicy?: string | undefined
                              tty?: boolean | undefined
                              volumeDevices?:
                                | {
                                    devicePath: string
                                    name: string
                                  }[]
                                | undefined
                              volumeMounts?:
                                | {
                                    mountPath: string
                                    mountPropagation?: string | undefined
                                    name: string
                                    readOnly?: boolean | undefined
                                    subPath?: string | undefined
                                    subPathExpr?: string | undefined
                                  }[]
                                | undefined
                              workingDir?: string | undefined
                            }
                          | undefined
                        volumes?:
                          | {
                              awsElasticBlockStore?:
                                | {
                                    fsType?: string | undefined
                                    partition?: number | undefined
                                    readOnly?: boolean | undefined
                                    volumeID: string
                                  }
                                | undefined
                              azureDisk?:
                                | {
                                    cachingMode?: string | undefined
                                    diskName: string
                                    diskURI: string
                                    fsType?: string | undefined
                                    kind?: string | undefined
                                    readOnly?: boolean | undefined
                                  }
                                | undefined
                              azureFile?:
                                | {
                                    readOnly?: boolean | undefined
                                    secretName: string
                                    shareName: string
                                  }
                                | undefined
                              cephfs?:
                                | {
                                    monitors: string[]
                                    path?: string | undefined
                                    readOnly?: boolean | undefined
                                    secretFile?: string | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                    user?: string | undefined
                                  }
                                | undefined
                              cinder?:
                                | {
                                    fsType?: string | undefined
                                    readOnly?: boolean | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                    volumeID: string
                                  }
                                | undefined
                              configMap?:
                                | {
                                    defaultMode?: number | undefined
                                    items?:
                                      | {
                                          key: string
                                          mode?: number | undefined
                                          path: string
                                        }[]
                                      | undefined
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                              csi?:
                                | {
                                    driver: string
                                    fsType?: string | undefined
                                    nodePublishSecretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                    readOnly?: boolean | undefined
                                    volumeAttributes?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                  }
                                | undefined
                              downwardAPI?:
                                | {
                                    defaultMode?: number | undefined
                                    items?:
                                      | {
                                          fieldRef?:
                                            | {
                                                apiVersion?: string | undefined
                                                fieldPath: string
                                              }
                                            | undefined
                                          mode?: number | undefined
                                          path: string
                                          resourceFieldRef?:
                                            | {
                                                containerName?:
                                                  | string
                                                  | undefined
                                                divisor?:
                                                  | (number | string)
                                                  | undefined
                                                resource: string
                                              }
                                            | undefined
                                        }[]
                                      | undefined
                                  }
                                | undefined
                              emptyDir?:
                                | {
                                    medium?: string | undefined
                                    sizeLimit?: (number | string) | undefined
                                  }
                                | undefined
                              ephemeral?:
                                | {
                                    volumeClaimTemplate?:
                                      | {
                                          metadata?: object | undefined
                                          spec: {
                                            accessModes?: string[] | undefined
                                            dataSource?:
                                              | {
                                                  apiGroup?: string | undefined
                                                  kind: string
                                                  name: string
                                                }
                                              | undefined
                                            dataSourceRef?:
                                              | {
                                                  apiGroup?: string | undefined
                                                  kind: string
                                                  name: string
                                                }
                                              | undefined
                                            resources?:
                                              | {
                                                  limits?:
                                                    | {
                                                        [key: string]:
                                                          | number
                                                          | string
                                                      }
                                                    | undefined
                                                  requests?:
                                                    | {
                                                        [key: string]:
                                                          | number
                                                          | string
                                                      }
                                                    | undefined
                                                }
                                              | undefined
                                            selector?:
                                              | {
                                                  matchExpressions?:
                                                    | {
                                                        key: string
                                                        operator: string
                                                        values?:
                                                          | string[]
                                                          | undefined
                                                      }[]
                                                    | undefined
                                                  matchLabels?:
                                                    | {
                                                        [key: string]: string
                                                      }
                                                    | undefined
                                                }
                                              | undefined
                                            storageClassName?:
                                              | string
                                              | undefined
                                            volumeMode?: string | undefined
                                            volumeName?: string | undefined
                                          }
                                        }
                                      | undefined
                                  }
                                | undefined
                              fc?:
                                | {
                                    fsType?: string | undefined
                                    lun?: number | undefined
                                    readOnly?: boolean | undefined
                                    targetWWNs?: string[] | undefined
                                    wwids?: string[] | undefined
                                  }
                                | undefined
                              flexVolume?:
                                | {
                                    driver: string
                                    fsType?: string | undefined
                                    options?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                    readOnly?: boolean | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                  }
                                | undefined
                              flocker?:
                                | {
                                    datasetName?: string | undefined
                                    datasetUUID?: string | undefined
                                  }
                                | undefined
                              gcePersistentDisk?:
                                | {
                                    fsType?: string | undefined
                                    partition?: number | undefined
                                    pdName: string
                                    readOnly?: boolean | undefined
                                  }
                                | undefined
                              gitRepo?:
                                | {
                                    directory?: string | undefined
                                    repository: string
                                    revision?: string | undefined
                                  }
                                | undefined
                              glusterfs?:
                                | {
                                    endpoints: string
                                    path: string
                                    readOnly?: boolean | undefined
                                  }
                                | undefined
                              hostPath?:
                                | {
                                    path: string
                                    type?: string | undefined
                                  }
                                | undefined
                              iscsi?:
                                | {
                                    chapAuthDiscovery?: boolean | undefined
                                    chapAuthSession?: boolean | undefined
                                    fsType?: string | undefined
                                    initiatorName?: string | undefined
                                    iqn: string
                                    iscsiInterface?: string | undefined
                                    lun: number
                                    portals?: string[] | undefined
                                    readOnly?: boolean | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                    targetPortal: string
                                  }
                                | undefined
                              name: string
                              nfs?:
                                | {
                                    path: string
                                    readOnly?: boolean | undefined
                                    server: string
                                  }
                                | undefined
                              persistentVolumeClaim?:
                                | {
                                    claimName: string
                                    readOnly?: boolean | undefined
                                  }
                                | undefined
                              photonPersistentDisk?:
                                | {
                                    fsType?: string | undefined
                                    pdID: string
                                  }
                                | undefined
                              portworxVolume?:
                                | {
                                    fsType?: string | undefined
                                    readOnly?: boolean | undefined
                                    volumeID: string
                                  }
                                | undefined
                              projected?:
                                | {
                                    defaultMode?: number | undefined
                                    sources?:
                                      | {
                                          configMap?:
                                            | {
                                                items?:
                                                  | {
                                                      key: string
                                                      mode?: number | undefined
                                                      path: string
                                                    }[]
                                                  | undefined
                                                name?: string | undefined
                                                optional?: boolean | undefined
                                              }
                                            | undefined
                                          downwardAPI?:
                                            | {
                                                items?:
                                                  | {
                                                      fieldRef?:
                                                        | {
                                                            apiVersion?:
                                                              | string
                                                              | undefined
                                                            fieldPath: string
                                                          }
                                                        | undefined
                                                      mode?: number | undefined
                                                      path: string
                                                      resourceFieldRef?:
                                                        | {
                                                            containerName?:
                                                              | string
                                                              | undefined
                                                            divisor?:
                                                              | (
                                                                  | number
                                                                  | string
                                                                )
                                                              | undefined
                                                            resource: string
                                                          }
                                                        | undefined
                                                    }[]
                                                  | undefined
                                              }
                                            | undefined
                                          secret?:
                                            | {
                                                items?:
                                                  | {
                                                      key: string
                                                      mode?: number | undefined
                                                      path: string
                                                    }[]
                                                  | undefined
                                                name?: string | undefined
                                                optional?: boolean | undefined
                                              }
                                            | undefined
                                          serviceAccountToken?:
                                            | {
                                                audience?: string | undefined
                                                expirationSeconds?:
                                                  | number
                                                  | undefined
                                                path: string
                                              }
                                            | undefined
                                        }[]
                                      | undefined
                                  }
                                | undefined
                              quobyte?:
                                | {
                                    group?: string | undefined
                                    readOnly?: boolean | undefined
                                    registry: string
                                    tenant?: string | undefined
                                    user?: string | undefined
                                    volume: string
                                  }
                                | undefined
                              rbd?:
                                | {
                                    fsType?: string | undefined
                                    image: string
                                    keyring?: string | undefined
                                    monitors: string[]
                                    pool?: string | undefined
                                    readOnly?: boolean | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                    user?: string | undefined
                                  }
                                | undefined
                              scaleIO?:
                                | {
                                    fsType?: string | undefined
                                    gateway: string
                                    protectionDomain?: string | undefined
                                    readOnly?: boolean | undefined
                                    secretRef: {
                                      name?: string | undefined
                                    }
                                    sslEnabled?: boolean | undefined
                                    storageMode?: string | undefined
                                    storagePool?: string | undefined
                                    system: string
                                    volumeName?: string | undefined
                                  }
                                | undefined
                              secret?:
                                | {
                                    defaultMode?: number | undefined
                                    items?:
                                      | {
                                          key: string
                                          mode?: number | undefined
                                          path: string
                                        }[]
                                      | undefined
                                    optional?: boolean | undefined
                                    secretName?: string | undefined
                                  }
                                | undefined
                              storageos?:
                                | {
                                    fsType?: string | undefined
                                    readOnly?: boolean | undefined
                                    secretRef?:
                                      | {
                                          name?: string | undefined
                                        }
                                      | undefined
                                    volumeName?: string | undefined
                                    volumeNamespace?: string | undefined
                                  }
                                | undefined
                              vsphereVolume?:
                                | {
                                    fsType?: string | undefined
                                    storagePolicyID?: string | undefined
                                    storagePolicyName?: string | undefined
                                    volumePath: string
                                  }
                                | undefined
                            }[]
                          | undefined
                      }
                    | undefined
                  templateType: string
                  timeChaos?:
                    | {
                        clockIds?: string[] | undefined
                        containerNames?: string[] | undefined
                        duration?: string | undefined
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        timeOffset: string
                        value?: string | undefined
                      }
                    | undefined
                }[]
              }
            | undefined
        }
      | undefined
    startTime: string
    statusCheck?:
      | {
          duration?: string | undefined
          failureThreshold?: number | undefined
          http?:
            | {
                body?: string | undefined
                criteria: {
                  statusCode: string
                }
                headers?:
                  | {
                      [key: string]: string[]
                    }
                  | undefined
                method?: ('GET' | 'POST') | undefined
                url: string
              }
            | undefined
          intervalSeconds?: number | undefined
          mode?: ('Synchronous' | 'Continuous') | undefined
          recordsHistoryLimit?: number | undefined
          successThreshold?: number | undefined
          timeoutSeconds?: number | undefined
          type: 'HTTP'
        }
      | undefined
    stressChaos?:
      | {
          containerNames?: string[] | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          stressngStressors?: string | undefined
          stressors?:
            | {
                cpu?:
                  | {
                      load?: number | undefined
                      options?: string[] | undefined
                      workers: number
                    }
                  | undefined
                memory?:
                  | {
                      oomScoreAdj?: number | undefined
                      options?: string[] | undefined
                      size?: string | undefined
                      workers: number
                    }
                  | undefined
              }
            | undefined
          value?: string | undefined
        }
      | undefined
    task?:
      | {
          container?:
            | {
                args?: string[] | undefined
                command?: string[] | undefined
                env?:
                  | {
                      name: string
                      value?: string | undefined
                      valueFrom?:
                        | {
                            configMapKeyRef?:
                              | {
                                  key: string
                                  name?: string | undefined
                                  optional?: boolean | undefined
                                }
                              | undefined
                            fieldRef?:
                              | {
                                  apiVersion?: string | undefined
                                  fieldPath: string
                                }
                              | undefined
                            resourceFieldRef?:
                              | {
                                  containerName?: string | undefined
                                  divisor?: (number | string) | undefined
                                  resource: string
                                }
                              | undefined
                            secretKeyRef?:
                              | {
                                  key: string
                                  name?: string | undefined
                                  optional?: boolean | undefined
                                }
                              | undefined
                          }
                        | undefined
                    }[]
                  | undefined
                envFrom?:
                  | {
                      configMapRef?:
                        | {
                            name?: string | undefined
                            optional?: boolean | undefined
                          }
                        | undefined
                      prefix?: string | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                            optional?: boolean | undefined
                          }
                        | undefined
                    }[]
                  | undefined
                image?: string | undefined
                imagePullPolicy?: string | undefined
                lifecycle?:
                  | {
                      postStart?:
                        | {
                            exec?:
                              | {
                                  command?: string[] | undefined
                                }
                              | undefined
                            httpGet?:
                              | {
                                  host?: string | undefined
                                  httpHeaders?:
                                    | {
                                        name: string
                                        value: string
                                      }[]
                                    | undefined
                                  path?: string | undefined
                                  port: number | string
                                  scheme?: string | undefined
                                }
                              | undefined
                            tcpSocket?:
                              | {
                                  host?: string | undefined
                                  port: number | string
                                }
                              | undefined
                          }
                        | undefined
                      preStop?:
                        | {
                            exec?:
                              | {
                                  command?: string[] | undefined
                                }
                              | undefined
                            httpGet?:
                              | {
                                  host?: string | undefined
                                  httpHeaders?:
                                    | {
                                        name: string
                                        value: string
                                      }[]
                                    | undefined
                                  path?: string | undefined
                                  port: number | string
                                  scheme?: string | undefined
                                }
                              | undefined
                            tcpSocket?:
                              | {
                                  host?: string | undefined
                                  port: number | string
                                }
                              | undefined
                          }
                        | undefined
                    }
                  | undefined
                livenessProbe?:
                  | {
                      exec?:
                        | {
                            command?: string[] | undefined
                          }
                        | undefined
                      failureThreshold?: number | undefined
                      grpc?:
                        | {
                            port: number
                            service?: string | undefined
                          }
                        | undefined
                      httpGet?:
                        | {
                            host?: string | undefined
                            httpHeaders?:
                              | {
                                  name: string
                                  value: string
                                }[]
                              | undefined
                            path?: string | undefined
                            port: number | string
                            scheme?: string | undefined
                          }
                        | undefined
                      initialDelaySeconds?: number | undefined
                      periodSeconds?: number | undefined
                      successThreshold?: number | undefined
                      tcpSocket?:
                        | {
                            host?: string | undefined
                            port: number | string
                          }
                        | undefined
                      terminationGracePeriodSeconds?: number | undefined
                      timeoutSeconds?: number | undefined
                    }
                  | undefined
                name: string
                ports?:
                  | {
                      containerPort: number
                      hostIP?: string | undefined
                      hostPort?: number | undefined
                      name?: string | undefined
                      protocol?: string | undefined
                    }[]
                  | undefined
                readinessProbe?:
                  | {
                      exec?:
                        | {
                            command?: string[] | undefined
                          }
                        | undefined
                      failureThreshold?: number | undefined
                      grpc?:
                        | {
                            port: number
                            service?: string | undefined
                          }
                        | undefined
                      httpGet?:
                        | {
                            host?: string | undefined
                            httpHeaders?:
                              | {
                                  name: string
                                  value: string
                                }[]
                              | undefined
                            path?: string | undefined
                            port: number | string
                            scheme?: string | undefined
                          }
                        | undefined
                      initialDelaySeconds?: number | undefined
                      periodSeconds?: number | undefined
                      successThreshold?: number | undefined
                      tcpSocket?:
                        | {
                            host?: string | undefined
                            port: number | string
                          }
                        | undefined
                      terminationGracePeriodSeconds?: number | undefined
                      timeoutSeconds?: number | undefined
                    }
                  | undefined
                resources?:
                  | {
                      limits?:
                        | {
                            [key: string]: number | string
                          }
                        | undefined
                      requests?:
                        | {
                            [key: string]: number | string
                          }
                        | undefined
                    }
                  | undefined
                securityContext?:
                  | {
                      allowPrivilegeEscalation?: boolean | undefined
                      capabilities?:
                        | {
                            add?: string[] | undefined
                            drop?: string[] | undefined
                          }
                        | undefined
                      privileged?: boolean | undefined
                      procMount?: string | undefined
                      readOnlyRootFilesystem?: boolean | undefined
                      runAsGroup?: number | undefined
                      runAsNonRoot?: boolean | undefined
                      runAsUser?: number | undefined
                      seLinuxOptions?:
                        | {
                            level?: string | undefined
                            role?: string | undefined
                            type?: string | undefined
                            user?: string | undefined
                          }
                        | undefined
                      seccompProfile?:
                        | {
                            localhostProfile?: string | undefined
                            type: string
                          }
                        | undefined
                      windowsOptions?:
                        | {
                            gmsaCredentialSpec?: string | undefined
                            gmsaCredentialSpecName?: string | undefined
                            hostProcess?: boolean | undefined
                            runAsUserName?: string | undefined
                          }
                        | undefined
                    }
                  | undefined
                startupProbe?:
                  | {
                      exec?:
                        | {
                            command?: string[] | undefined
                          }
                        | undefined
                      failureThreshold?: number | undefined
                      grpc?:
                        | {
                            port: number
                            service?: string | undefined
                          }
                        | undefined
                      httpGet?:
                        | {
                            host?: string | undefined
                            httpHeaders?:
                              | {
                                  name: string
                                  value: string
                                }[]
                              | undefined
                            path?: string | undefined
                            port: number | string
                            scheme?: string | undefined
                          }
                        | undefined
                      initialDelaySeconds?: number | undefined
                      periodSeconds?: number | undefined
                      successThreshold?: number | undefined
                      tcpSocket?:
                        | {
                            host?: string | undefined
                            port: number | string
                          }
                        | undefined
                      terminationGracePeriodSeconds?: number | undefined
                      timeoutSeconds?: number | undefined
                    }
                  | undefined
                stdin?: boolean | undefined
                stdinOnce?: boolean | undefined
                terminationMessagePath?: string | undefined
                terminationMessagePolicy?: string | undefined
                tty?: boolean | undefined
                volumeDevices?:
                  | {
                      devicePath: string
                      name: string
                    }[]
                  | undefined
                volumeMounts?:
                  | {
                      mountPath: string
                      mountPropagation?: string | undefined
                      name: string
                      readOnly?: boolean | undefined
                      subPath?: string | undefined
                      subPathExpr?: string | undefined
                    }[]
                  | undefined
                workingDir?: string | undefined
              }
            | undefined
          volumes?:
            | {
                awsElasticBlockStore?:
                  | {
                      fsType?: string | undefined
                      partition?: number | undefined
                      readOnly?: boolean | undefined
                      volumeID: string
                    }
                  | undefined
                azureDisk?:
                  | {
                      cachingMode?: string | undefined
                      diskName: string
                      diskURI: string
                      fsType?: string | undefined
                      kind?: string | undefined
                      readOnly?: boolean | undefined
                    }
                  | undefined
                azureFile?:
                  | {
                      readOnly?: boolean | undefined
                      secretName: string
                      shareName: string
                    }
                  | undefined
                cephfs?:
                  | {
                      monitors: string[]
                      path?: string | undefined
                      readOnly?: boolean | undefined
                      secretFile?: string | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                      user?: string | undefined
                    }
                  | undefined
                cinder?:
                  | {
                      fsType?: string | undefined
                      readOnly?: boolean | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                      volumeID: string
                    }
                  | undefined
                configMap?:
                  | {
                      defaultMode?: number | undefined
                      items?:
                        | {
                            key: string
                            mode?: number | undefined
                            path: string
                          }[]
                        | undefined
                      name?: string | undefined
                      optional?: boolean | undefined
                    }
                  | undefined
                csi?:
                  | {
                      driver: string
                      fsType?: string | undefined
                      nodePublishSecretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                      readOnly?: boolean | undefined
                      volumeAttributes?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                    }
                  | undefined
                downwardAPI?:
                  | {
                      defaultMode?: number | undefined
                      items?:
                        | {
                            fieldRef?:
                              | {
                                  apiVersion?: string | undefined
                                  fieldPath: string
                                }
                              | undefined
                            mode?: number | undefined
                            path: string
                            resourceFieldRef?:
                              | {
                                  containerName?: string | undefined
                                  divisor?: (number | string) | undefined
                                  resource: string
                                }
                              | undefined
                          }[]
                        | undefined
                    }
                  | undefined
                emptyDir?:
                  | {
                      medium?: string | undefined
                      sizeLimit?: (number | string) | undefined
                    }
                  | undefined
                ephemeral?:
                  | {
                      volumeClaimTemplate?:
                        | {
                            metadata?: object | undefined
                            spec: {
                              accessModes?: string[] | undefined
                              dataSource?:
                                | {
                                    apiGroup?: string | undefined
                                    kind: string
                                    name: string
                                  }
                                | undefined
                              dataSourceRef?:
                                | {
                                    apiGroup?: string | undefined
                                    kind: string
                                    name: string
                                  }
                                | undefined
                              resources?:
                                | {
                                    limits?:
                                      | {
                                          [key: string]: number | string
                                        }
                                      | undefined
                                    requests?:
                                      | {
                                          [key: string]: number | string
                                        }
                                      | undefined
                                  }
                                | undefined
                              selector?:
                                | {
                                    matchExpressions?:
                                      | {
                                          key: string
                                          operator: string
                                          values?: string[] | undefined
                                        }[]
                                      | undefined
                                    matchLabels?:
                                      | {
                                          [key: string]: string
                                        }
                                      | undefined
                                  }
                                | undefined
                              storageClassName?: string | undefined
                              volumeMode?: string | undefined
                              volumeName?: string | undefined
                            }
                          }
                        | undefined
                    }
                  | undefined
                fc?:
                  | {
                      fsType?: string | undefined
                      lun?: number | undefined
                      readOnly?: boolean | undefined
                      targetWWNs?: string[] | undefined
                      wwids?: string[] | undefined
                    }
                  | undefined
                flexVolume?:
                  | {
                      driver: string
                      fsType?: string | undefined
                      options?:
                        | {
                            [key: string]: string
                          }
                        | undefined
                      readOnly?: boolean | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                    }
                  | undefined
                flocker?:
                  | {
                      datasetName?: string | undefined
                      datasetUUID?: string | undefined
                    }
                  | undefined
                gcePersistentDisk?:
                  | {
                      fsType?: string | undefined
                      partition?: number | undefined
                      pdName: string
                      readOnly?: boolean | undefined
                    }
                  | undefined
                gitRepo?:
                  | {
                      directory?: string | undefined
                      repository: string
                      revision?: string | undefined
                    }
                  | undefined
                glusterfs?:
                  | {
                      endpoints: string
                      path: string
                      readOnly?: boolean | undefined
                    }
                  | undefined
                hostPath?:
                  | {
                      path: string
                      type?: string | undefined
                    }
                  | undefined
                iscsi?:
                  | {
                      chapAuthDiscovery?: boolean | undefined
                      chapAuthSession?: boolean | undefined
                      fsType?: string | undefined
                      initiatorName?: string | undefined
                      iqn: string
                      iscsiInterface?: string | undefined
                      lun: number
                      portals?: string[] | undefined
                      readOnly?: boolean | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                      targetPortal: string
                    }
                  | undefined
                name: string
                nfs?:
                  | {
                      path: string
                      readOnly?: boolean | undefined
                      server: string
                    }
                  | undefined
                persistentVolumeClaim?:
                  | {
                      claimName: string
                      readOnly?: boolean | undefined
                    }
                  | undefined
                photonPersistentDisk?:
                  | {
                      fsType?: string | undefined
                      pdID: string
                    }
                  | undefined
                portworxVolume?:
                  | {
                      fsType?: string | undefined
                      readOnly?: boolean | undefined
                      volumeID: string
                    }
                  | undefined
                projected?:
                  | {
                      defaultMode?: number | undefined
                      sources?:
                        | {
                            configMap?:
                              | {
                                  items?:
                                    | {
                                        key: string
                                        mode?: number | undefined
                                        path: string
                                      }[]
                                    | undefined
                                  name?: string | undefined
                                  optional?: boolean | undefined
                                }
                              | undefined
                            downwardAPI?:
                              | {
                                  items?:
                                    | {
                                        fieldRef?:
                                          | {
                                              apiVersion?: string | undefined
                                              fieldPath: string
                                            }
                                          | undefined
                                        mode?: number | undefined
                                        path: string
                                        resourceFieldRef?:
                                          | {
                                              containerName?: string | undefined
                                              divisor?:
                                                | (number | string)
                                                | undefined
                                              resource: string
                                            }
                                          | undefined
                                      }[]
                                    | undefined
                                }
                              | undefined
                            secret?:
                              | {
                                  items?:
                                    | {
                                        key: string
                                        mode?: number | undefined
                                        path: string
                                      }[]
                                    | undefined
                                  name?: string | undefined
                                  optional?: boolean | undefined
                                }
                              | undefined
                            serviceAccountToken?:
                              | {
                                  audience?: string | undefined
                                  expirationSeconds?: number | undefined
                                  path: string
                                }
                              | undefined
                          }[]
                        | undefined
                    }
                  | undefined
                quobyte?:
                  | {
                      group?: string | undefined
                      readOnly?: boolean | undefined
                      registry: string
                      tenant?: string | undefined
                      user?: string | undefined
                      volume: string
                    }
                  | undefined
                rbd?:
                  | {
                      fsType?: string | undefined
                      image: string
                      keyring?: string | undefined
                      monitors: string[]
                      pool?: string | undefined
                      readOnly?: boolean | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                      user?: string | undefined
                    }
                  | undefined
                scaleIO?:
                  | {
                      fsType?: string | undefined
                      gateway: string
                      protectionDomain?: string | undefined
                      readOnly?: boolean | undefined
                      secretRef: {
                        name?: string | undefined
                      }
                      sslEnabled?: boolean | undefined
                      storageMode?: string | undefined
                      storagePool?: string | undefined
                      system: string
                      volumeName?: string | undefined
                    }
                  | undefined
                secret?:
                  | {
                      defaultMode?: number | undefined
                      items?:
                        | {
                            key: string
                            mode?: number | undefined
                            path: string
                          }[]
                        | undefined
                      optional?: boolean | undefined
                      secretName?: string | undefined
                    }
                  | undefined
                storageos?:
                  | {
                      fsType?: string | undefined
                      readOnly?: boolean | undefined
                      secretRef?:
                        | {
                            name?: string | undefined
                          }
                        | undefined
                      volumeName?: string | undefined
                      volumeNamespace?: string | undefined
                    }
                  | undefined
                vsphereVolume?:
                  | {
                      fsType?: string | undefined
                      storagePolicyID?: string | undefined
                      storagePolicyName?: string | undefined
                      volumePath: string
                    }
                  | undefined
              }[]
            | undefined
        }
      | undefined
    templateName: string
    timeChaos?:
      | {
          clockIds?: string[] | undefined
          containerNames?: string[] | undefined
          duration?: string | undefined
          mode: 'one' | 'all' | 'fixed' | 'fixed-percent' | 'random-max-percent'
          selector: {
            annotationSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            expressionSelectors?:
              | {
                  key: string
                  operator: string
                  values?: string[] | undefined
                }[]
              | undefined
            fieldSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            labelSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            namespaces?: string[] | undefined
            nodeSelectors?:
              | {
                  [key: string]: string
                }
              | undefined
            nodes?: string[] | undefined
            podPhaseSelectors?: string[] | undefined
            pods?:
              | {
                  [key: string]: string[]
                }
              | undefined
          }
          timeOffset: string
          value?: string | undefined
        }
      | undefined
    type: string
    workflowName: string
  }
  status?:
    | {
        activeChildren?:
          | {
              name?: string | undefined
            }[]
          | undefined
        chaosResource?:
          | {
              apiGroup?: string | undefined
              kind: string
              name: string
            }
          | undefined
        conditionalBranchesStatus?:
          | {
              branches?:
                | {
                    evaluationResult: string
                    target: string
                  }[]
                | undefined
              context?: string[] | undefined
            }
          | undefined
        conditions?:
          | {
              reason: string
              status: string
              type: string
            }[]
          | undefined
        finishedChildren?:
          | {
              name?: string | undefined
            }[]
          | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1WorkflowNodeList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1WorkflowNode[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
export type OrgChaosMeshV1Alpha1Workflow = {
  apiVersion?: string | undefined
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ObjectMeta | undefined
  spec: {
    entry: string
    templates: {
      abortWithStatusCheck?: boolean | undefined
      awsChaos?:
        | {
            action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
            awsRegion: string
            deviceName?: string | undefined
            duration?: string | undefined
            ec2Instance: string
            endpoint?: string | undefined
            secretName?: string | undefined
            volumeID?: string | undefined
          }
        | undefined
      azureChaos?:
        | {
            action: 'vm-stop' | 'vm-restart' | 'disk-detach'
            diskName?: string | undefined
            duration?: string | undefined
            lun?: number | undefined
            resourceGroupName: string
            secretName?: string | undefined
            subscriptionID: string
            vmName: string
          }
        | undefined
      blockChaos?:
        | {
            action: 'delay'
            containerNames?: string[] | undefined
            delay?:
              | {
                  correlation?: string | undefined
                  jitter?: string | undefined
                  latency?: string | undefined
                }
              | undefined
            duration?: string | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            value?: string | undefined
            volumeName: string
          }
        | undefined
      children?: string[] | undefined
      conditionalBranches?:
        | {
            expression?: string | undefined
            target: string
          }[]
        | undefined
      deadline?: string | undefined
      dnsChaos?:
        | {
            action: 'error' | 'random'
            containerNames?: string[] | undefined
            duration?: string | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            patterns?: string[] | undefined
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            value?: string | undefined
          }
        | undefined
      gcpChaos?:
        | {
            action: 'node-stop' | 'node-reset' | 'disk-loss'
            deviceNames?: string[] | undefined
            duration?: string | undefined
            instance: string
            project: string
            secretName?: string | undefined
            zone: string
          }
        | undefined
      httpChaos?:
        | {
            abort?: boolean | undefined
            code?: number | undefined
            delay?: string | undefined
            duration?: string | undefined
            method?: string | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            patch?:
              | {
                  body?:
                    | {
                        type: string
                        value: string
                      }
                    | undefined
                  headers?: string[][] | undefined
                  queries?: string[][] | undefined
                }
              | undefined
            path?: string | undefined
            port?: number | undefined
            replace?:
              | {
                  body?: string | undefined
                  code?: number | undefined
                  headers?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  method?: string | undefined
                  path?: string | undefined
                  queries?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                }
              | undefined
            request_headers?:
              | {
                  [key: string]: string
                }
              | undefined
            response_headers?:
              | {
                  [key: string]: string
                }
              | undefined
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            target: 'Request' | 'Response'
            value?: string | undefined
          }
        | undefined
      ioChaos?:
        | {
            action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
            attr?:
              | {
                  atime?:
                    | {
                        nsec: number
                        sec: number
                      }
                    | undefined
                  blocks?: number | undefined
                  ctime?:
                    | {
                        nsec: number
                        sec: number
                      }
                    | undefined
                  gid?: number | undefined
                  ino?: number | undefined
                  kind?: string | undefined
                  mtime?:
                    | {
                        nsec: number
                        sec: number
                      }
                    | undefined
                  nlink?: number | undefined
                  perm?: number | undefined
                  rdev?: number | undefined
                  size?: number | undefined
                  uid?: number | undefined
                }
              | undefined
            containerNames?: string[] | undefined
            delay?: string | undefined
            duration?: string | undefined
            errno?: number | undefined
            methods?: string[] | undefined
            mistake?:
              | {
                  filling?: ('zero' | 'random') | undefined
                  maxLength?: number | undefined
                  maxOccurrences?: number | undefined
                }
              | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            path?: string | undefined
            percent?: number | undefined
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            value?: string | undefined
            volumePath: string
          }
        | undefined
      jvmChaos?:
        | {
            action:
              | 'latency'
              | 'return'
              | 'exception'
              | 'stress'
              | 'gc'
              | 'ruleData'
              | 'mysql'
            class?: string | undefined
            containerNames?: string[] | undefined
            cpuCount?: number | undefined
            database?: string | undefined
            duration?: string | undefined
            exception?: string | undefined
            latency?: number | undefined
            memType?: string | undefined
            method?: string | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            mysqlConnectorVersion?: string | undefined
            name?: string | undefined
            pid?: number | undefined
            port?: number | undefined
            ruleData?: string | undefined
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            sqlType?: string | undefined
            table?: string | undefined
            value?: string | undefined
          }
        | undefined
      kernelChaos?:
        | {
            containerNames?: string[] | undefined
            duration?: string | undefined
            failKernRequest: {
              callchain?:
                | {
                    funcname?: string | undefined
                    parameters?: string | undefined
                    predicate?: string | undefined
                  }[]
                | undefined
              failtype: number
              headers?: string[] | undefined
              probability?: number | undefined
              times?: number | undefined
            }
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            value?: string | undefined
          }
        | undefined
      name: string
      networkChaos?:
        | {
            action:
              | 'netem'
              | 'delay'
              | 'loss'
              | 'duplicate'
              | 'corrupt'
              | 'partition'
              | 'bandwidth'
            bandwidth?:
              | {
                  buffer: number
                  limit: number
                  minburst?: number | undefined
                  peakrate?: number | undefined
                  rate: string
                }
              | undefined
            corrupt?:
              | {
                  correlation?: string | undefined
                  corrupt: string
                }
              | undefined
            delay?:
              | {
                  correlation?: string | undefined
                  jitter?: string | undefined
                  latency: string
                  reorder?:
                    | {
                        correlation?: string | undefined
                        gap: number
                        reorder: string
                      }
                    | undefined
                }
              | undefined
            device?: string | undefined
            direction?: ('to' | 'from' | 'both') | undefined
            duplicate?:
              | {
                  correlation?: string | undefined
                  duplicate: string
                }
              | undefined
            duration?: string | undefined
            externalTargets?: string[] | undefined
            loss?:
              | {
                  correlation?: string | undefined
                  loss: string
                }
              | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            target?:
              | {
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            targetDevice?: string | undefined
            value?: string | undefined
          }
        | undefined
      physicalmachineChaos?:
        | {
            action:
              | 'stress-cpu'
              | 'stress-mem'
              | 'disk-read-payload'
              | 'disk-write-payload'
              | 'disk-fill'
              | 'network-corrupt'
              | 'network-duplicate'
              | 'network-loss'
              | 'network-delay'
              | 'network-partition'
              | 'network-dns'
              | 'network-bandwidth'
              | 'network-flood'
              | 'network-down'
              | 'process'
              | 'jvm-exception'
              | 'jvm-gc'
              | 'jvm-latency'
              | 'jvm-return'
              | 'jvm-stress'
              | 'jvm-rule-data'
              | 'jvm-mysql'
              | 'clock'
              | 'redis-expiration'
              | 'redis-penetration'
              | 'redis-cacheLimit'
              | 'redis-restart'
              | 'redis-stop'
              | 'kafka-fill'
              | 'kafka-flood'
              | 'kafka-io'
              | 'file-create'
              | 'file-modify'
              | 'file-delete'
              | 'file-rename'
              | 'file-append'
              | 'file-replace'
              | 'vm'
              | 'user_defined'
            address?: string[] | undefined
            clock?:
              | {
                  'clock-ids-slice'?: string | undefined
                  pid?: number | undefined
                  'time-offset'?: string | undefined
                }
              | undefined
            'disk-fill'?:
              | {
                  'fill-by-fallocate'?: boolean | undefined
                  path?: string | undefined
                  size?: string | undefined
                }
              | undefined
            'disk-read-payload'?:
              | {
                  path?: string | undefined
                  'payload-process-num'?: number | undefined
                  size?: string | undefined
                }
              | undefined
            'disk-write-payload'?:
              | {
                  path?: string | undefined
                  'payload-process-num'?: number | undefined
                  size?: string | undefined
                }
              | undefined
            duration?: string | undefined
            'file-append'?:
              | {
                  count?: number | undefined
                  data?: string | undefined
                  'file-name'?: string | undefined
                }
              | undefined
            'file-create'?:
              | {
                  'dir-name'?: string | undefined
                  'file-name'?: string | undefined
                }
              | undefined
            'file-delete'?:
              | {
                  'dir-name'?: string | undefined
                  'file-name'?: string | undefined
                }
              | undefined
            'file-modify'?:
              | {
                  'file-name'?: string | undefined
                  privilege?: number | undefined
                }
              | undefined
            'file-rename'?:
              | {
                  'dest-file'?: string | undefined
                  'source-file'?: string | undefined
                }
              | undefined
            'file-replace'?:
              | {
                  'dest-string'?: string | undefined
                  'file-name'?: string | undefined
                  line?: number | undefined
                  'origin-string'?: string | undefined
                }
              | undefined
            'http-abort'?:
              | {
                  code?: string | undefined
                  method?: string | undefined
                  path?: string | undefined
                  port?: number | undefined
                  proxy_ports: number[]
                  target: string
                }
              | undefined
            'http-config'?:
              | {
                  file_path?: string | undefined
                }
              | undefined
            'http-delay'?:
              | {
                  code?: string | undefined
                  delay: string
                  method?: string | undefined
                  path?: string | undefined
                  port?: number | undefined
                  proxy_ports: number[]
                  target: string
                }
              | undefined
            'http-request'?:
              | {
                  count?: number | undefined
                  'enable-conn-pool'?: boolean | undefined
                  url?: string | undefined
                }
              | undefined
            'jvm-exception'?:
              | {
                  class?: string | undefined
                  exception?: string | undefined
                  method?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                }
              | undefined
            'jvm-gc'?:
              | {
                  pid?: number | undefined
                  port?: number | undefined
                }
              | undefined
            'jvm-latency'?:
              | {
                  class?: string | undefined
                  latency?: number | undefined
                  method?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                }
              | undefined
            'jvm-mysql'?:
              | {
                  database?: string | undefined
                  exception?: string | undefined
                  latency?: number | undefined
                  mysqlConnectorVersion?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                  sqlType?: string | undefined
                  table?: string | undefined
                }
              | undefined
            'jvm-return'?:
              | {
                  class?: string | undefined
                  method?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                  value?: string | undefined
                }
              | undefined
            'jvm-rule-data'?:
              | {
                  pid?: number | undefined
                  port?: number | undefined
                  'rule-data'?: string | undefined
                }
              | undefined
            'jvm-stress'?:
              | {
                  'cpu-count'?: number | undefined
                  'mem-type'?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                }
              | undefined
            'kafka-fill'?:
              | {
                  host?: string | undefined
                  maxBytes?: number | undefined
                  messageSize?: number | undefined
                  password?: string | undefined
                  port?: number | undefined
                  reloadCommand?: string | undefined
                  topic?: string | undefined
                  username?: string | undefined
                }
              | undefined
            'kafka-flood'?:
              | {
                  host?: string | undefined
                  messageSize?: number | undefined
                  password?: string | undefined
                  port?: number | undefined
                  threads?: number | undefined
                  topic?: string | undefined
                  username?: string | undefined
                }
              | undefined
            'kafka-io'?:
              | {
                  configFile?: string | undefined
                  nonReadable?: boolean | undefined
                  nonWritable?: boolean | undefined
                  topic?: string | undefined
                }
              | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            'network-bandwidth'?:
              | {
                  buffer: number
                  device?: string | undefined
                  hostname?: string | undefined
                  'ip-address'?: string | undefined
                  limit: number
                  minburst?: number | undefined
                  peakrate?: number | undefined
                  rate: string
                }
              | undefined
            'network-corrupt'?:
              | {
                  correlation?: string | undefined
                  device?: string | undefined
                  'egress-port'?: string | undefined
                  hostname?: string | undefined
                  'ip-address'?: string | undefined
                  'ip-protocol'?: string | undefined
                  percent?: string | undefined
                  'source-port'?: string | undefined
                }
              | undefined
            'network-delay'?:
              | {
                  'accept-tcp-flags'?: string | undefined
                  correlation?: string | undefined
                  device?: string | undefined
                  'egress-port'?: string | undefined
                  hostname?: string | undefined
                  'ip-address'?: string | undefined
                  'ip-protocol'?: string | undefined
                  jitter?: string | undefined
                  latency?: string | undefined
                  'source-port'?: string | undefined
                }
              | undefined
            'network-dns'?:
              | {
                  'dns-domain-name'?: string | undefined
                  'dns-ip'?: string | undefined
                  'dns-server'?: string | undefined
                }
              | undefined
            'network-down'?:
              | {
                  device?: string | undefined
                  duration?: string | undefined
                }
              | undefined
            'network-duplicate'?:
              | {
                  correlation?: string | undefined
                  device?: string | undefined
                  'egress-port'?: string | undefined
                  hostname?: string | undefined
                  'ip-address'?: string | undefined
                  'ip-protocol'?: string | undefined
                  percent?: string | undefined
                  'source-port'?: string | undefined
                }
              | undefined
            'network-flood'?:
              | {
                  duration: string
                  'ip-address'?: string | undefined
                  parallel?: number | undefined
                  port?: string | undefined
                  rate: string
                }
              | undefined
            'network-loss'?:
              | {
                  correlation?: string | undefined
                  device?: string | undefined
                  'egress-port'?: string | undefined
                  hostname?: string | undefined
                  'ip-address'?: string | undefined
                  'ip-protocol'?: string | undefined
                  percent?: string | undefined
                  'source-port'?: string | undefined
                }
              | undefined
            'network-partition'?:
              | {
                  'accept-tcp-flags'?: string | undefined
                  device?: string | undefined
                  direction?: string | undefined
                  hostname?: string | undefined
                  'ip-address'?: string | undefined
                  'ip-protocol'?: string | undefined
                }
              | undefined
            process?:
              | {
                  process?: string | undefined
                  recoverCmd?: string | undefined
                  signal?: number | undefined
                }
              | undefined
            'redis-cacheLimit'?:
              | {
                  addr?: string | undefined
                  cacheSize?: string | undefined
                  password?: string | undefined
                  percent?: string | undefined
                }
              | undefined
            'redis-expiration'?:
              | {
                  addr?: string | undefined
                  expiration?: string | undefined
                  key?: string | undefined
                  option?: string | undefined
                  password?: string | undefined
                }
              | undefined
            'redis-penetration'?:
              | {
                  addr?: string | undefined
                  password?: string | undefined
                  requestNum?: number | undefined
                }
              | undefined
            'redis-restart'?:
              | {
                  addr?: string | undefined
                  conf?: string | undefined
                  flushConfig?: boolean | undefined
                  password?: string | undefined
                  redisPath?: boolean | undefined
                }
              | undefined
            'redis-stop'?:
              | {
                  addr?: string | undefined
                  conf?: string | undefined
                  flushConfig?: boolean | undefined
                  password?: string | undefined
                  redisPath?: boolean | undefined
                }
              | undefined
            selector?:
              | {
                  annotationSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  expressionSelectors?:
                    | {
                        key: string
                        operator: string
                        values?: string[] | undefined
                      }[]
                    | undefined
                  fieldSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  labelSelectors?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  namespaces?: string[] | undefined
                  physicalMachines?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                }
              | undefined
            'stress-cpu'?:
              | {
                  load?: number | undefined
                  options?: string[] | undefined
                  workers?: number | undefined
                }
              | undefined
            'stress-mem'?:
              | {
                  options?: string[] | undefined
                  size?: string | undefined
                }
              | undefined
            uid?: string | undefined
            user_defined?:
              | {
                  attackCmd?: string | undefined
                  recoverCmd?: string | undefined
                }
              | undefined
            value?: string | undefined
            vm?:
              | {
                  'vm-name'?: string | undefined
                }
              | undefined
          }
        | undefined
      podChaos?:
        | {
            action: 'pod-kill' | 'pod-failure' | 'container-kill'
            containerNames?: string[] | undefined
            duration?: string | undefined
            gracePeriod?: number | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            value?: string | undefined
          }
        | undefined
      schedule?:
        | {
            awsChaos?:
              | {
                  action: 'ec2-stop' | 'ec2-restart' | 'detach-volume'
                  awsRegion: string
                  deviceName?: string | undefined
                  duration?: string | undefined
                  ec2Instance: string
                  endpoint?: string | undefined
                  secretName?: string | undefined
                  volumeID?: string | undefined
                }
              | undefined
            azureChaos?:
              | {
                  action: 'vm-stop' | 'vm-restart' | 'disk-detach'
                  diskName?: string | undefined
                  duration?: string | undefined
                  lun?: number | undefined
                  resourceGroupName: string
                  secretName?: string | undefined
                  subscriptionID: string
                  vmName: string
                }
              | undefined
            blockChaos?:
              | {
                  action: 'delay'
                  containerNames?: string[] | undefined
                  delay?:
                    | {
                        correlation?: string | undefined
                        jitter?: string | undefined
                        latency?: string | undefined
                      }
                    | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                  volumeName: string
                }
              | undefined
            concurrencyPolicy?: ('Forbid' | 'Allow') | undefined
            dnsChaos?:
              | {
                  action: 'error' | 'random'
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  patterns?: string[] | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            gcpChaos?:
              | {
                  action: 'node-stop' | 'node-reset' | 'disk-loss'
                  deviceNames?: string[] | undefined
                  duration?: string | undefined
                  instance: string
                  project: string
                  secretName?: string | undefined
                  zone: string
                }
              | undefined
            historyLimit?: number | undefined
            httpChaos?:
              | {
                  abort?: boolean | undefined
                  code?: number | undefined
                  delay?: string | undefined
                  duration?: string | undefined
                  method?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  patch?:
                    | {
                        body?:
                          | {
                              type: string
                              value: string
                            }
                          | undefined
                        headers?: string[][] | undefined
                        queries?: string[][] | undefined
                      }
                    | undefined
                  path?: string | undefined
                  port?: number | undefined
                  replace?:
                    | {
                        body?: string | undefined
                        code?: number | undefined
                        headers?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        method?: string | undefined
                        path?: string | undefined
                        queries?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                      }
                    | undefined
                  request_headers?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  response_headers?:
                    | {
                        [key: string]: string
                      }
                    | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  target: 'Request' | 'Response'
                  value?: string | undefined
                }
              | undefined
            ioChaos?:
              | {
                  action: 'latency' | 'fault' | 'attrOverride' | 'mistake'
                  attr?:
                    | {
                        atime?:
                          | {
                              nsec: number
                              sec: number
                            }
                          | undefined
                        blocks?: number | undefined
                        ctime?:
                          | {
                              nsec: number
                              sec: number
                            }
                          | undefined
                        gid?: number | undefined
                        ino?: number | undefined
                        kind?: string | undefined
                        mtime?:
                          | {
                              nsec: number
                              sec: number
                            }
                          | undefined
                        nlink?: number | undefined
                        perm?: number | undefined
                        rdev?: number | undefined
                        size?: number | undefined
                        uid?: number | undefined
                      }
                    | undefined
                  containerNames?: string[] | undefined
                  delay?: string | undefined
                  duration?: string | undefined
                  errno?: number | undefined
                  methods?: string[] | undefined
                  mistake?:
                    | {
                        filling?: ('zero' | 'random') | undefined
                        maxLength?: number | undefined
                        maxOccurrences?: number | undefined
                      }
                    | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  path?: string | undefined
                  percent?: number | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                  volumePath: string
                }
              | undefined
            jvmChaos?:
              | {
                  action:
                    | 'latency'
                    | 'return'
                    | 'exception'
                    | 'stress'
                    | 'gc'
                    | 'ruleData'
                    | 'mysql'
                  class?: string | undefined
                  containerNames?: string[] | undefined
                  cpuCount?: number | undefined
                  database?: string | undefined
                  duration?: string | undefined
                  exception?: string | undefined
                  latency?: number | undefined
                  memType?: string | undefined
                  method?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  mysqlConnectorVersion?: string | undefined
                  name?: string | undefined
                  pid?: number | undefined
                  port?: number | undefined
                  ruleData?: string | undefined
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  sqlType?: string | undefined
                  table?: string | undefined
                  value?: string | undefined
                }
              | undefined
            kernelChaos?:
              | {
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  failKernRequest: {
                    callchain?:
                      | {
                          funcname?: string | undefined
                          parameters?: string | undefined
                          predicate?: string | undefined
                        }[]
                      | undefined
                    failtype: number
                    headers?: string[] | undefined
                    probability?: number | undefined
                    times?: number | undefined
                  }
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            networkChaos?:
              | {
                  action:
                    | 'netem'
                    | 'delay'
                    | 'loss'
                    | 'duplicate'
                    | 'corrupt'
                    | 'partition'
                    | 'bandwidth'
                  bandwidth?:
                    | {
                        buffer: number
                        limit: number
                        minburst?: number | undefined
                        peakrate?: number | undefined
                        rate: string
                      }
                    | undefined
                  corrupt?:
                    | {
                        correlation?: string | undefined
                        corrupt: string
                      }
                    | undefined
                  delay?:
                    | {
                        correlation?: string | undefined
                        jitter?: string | undefined
                        latency: string
                        reorder?:
                          | {
                              correlation?: string | undefined
                              gap: number
                              reorder: string
                            }
                          | undefined
                      }
                    | undefined
                  device?: string | undefined
                  direction?: ('to' | 'from' | 'both') | undefined
                  duplicate?:
                    | {
                        correlation?: string | undefined
                        duplicate: string
                      }
                    | undefined
                  duration?: string | undefined
                  externalTargets?: string[] | undefined
                  loss?:
                    | {
                        correlation?: string | undefined
                        loss: string
                      }
                    | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  target?:
                    | {
                        mode:
                          | 'one'
                          | 'all'
                          | 'fixed'
                          | 'fixed-percent'
                          | 'random-max-percent'
                        selector: {
                          annotationSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          expressionSelectors?:
                            | {
                                key: string
                                operator: string
                                values?: string[] | undefined
                              }[]
                            | undefined
                          fieldSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          labelSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          namespaces?: string[] | undefined
                          nodeSelectors?:
                            | {
                                [key: string]: string
                              }
                            | undefined
                          nodes?: string[] | undefined
                          podPhaseSelectors?: string[] | undefined
                          pods?:
                            | {
                                [key: string]: string[]
                              }
                            | undefined
                        }
                        value?: string | undefined
                      }
                    | undefined
                  targetDevice?: string | undefined
                  value?: string | undefined
                }
              | undefined
            physicalmachineChaos?:
              | {
                  action:
                    | 'stress-cpu'
                    | 'stress-mem'
                    | 'disk-read-payload'
                    | 'disk-write-payload'
                    | 'disk-fill'
                    | 'network-corrupt'
                    | 'network-duplicate'
                    | 'network-loss'
                    | 'network-delay'
                    | 'network-partition'
                    | 'network-dns'
                    | 'network-bandwidth'
                    | 'network-flood'
                    | 'network-down'
                    | 'process'
                    | 'jvm-exception'
                    | 'jvm-gc'
                    | 'jvm-latency'
                    | 'jvm-return'
                    | 'jvm-stress'
                    | 'jvm-rule-data'
                    | 'jvm-mysql'
                    | 'clock'
                    | 'redis-expiration'
                    | 'redis-penetration'
                    | 'redis-cacheLimit'
                    | 'redis-restart'
                    | 'redis-stop'
                    | 'kafka-fill'
                    | 'kafka-flood'
                    | 'kafka-io'
                    | 'file-create'
                    | 'file-modify'
                    | 'file-delete'
                    | 'file-rename'
                    | 'file-append'
                    | 'file-replace'
                    | 'vm'
                    | 'user_defined'
                  address?: string[] | undefined
                  clock?:
                    | {
                        'clock-ids-slice'?: string | undefined
                        pid?: number | undefined
                        'time-offset'?: string | undefined
                      }
                    | undefined
                  'disk-fill'?:
                    | {
                        'fill-by-fallocate'?: boolean | undefined
                        path?: string | undefined
                        size?: string | undefined
                      }
                    | undefined
                  'disk-read-payload'?:
                    | {
                        path?: string | undefined
                        'payload-process-num'?: number | undefined
                        size?: string | undefined
                      }
                    | undefined
                  'disk-write-payload'?:
                    | {
                        path?: string | undefined
                        'payload-process-num'?: number | undefined
                        size?: string | undefined
                      }
                    | undefined
                  duration?: string | undefined
                  'file-append'?:
                    | {
                        count?: number | undefined
                        data?: string | undefined
                        'file-name'?: string | undefined
                      }
                    | undefined
                  'file-create'?:
                    | {
                        'dir-name'?: string | undefined
                        'file-name'?: string | undefined
                      }
                    | undefined
                  'file-delete'?:
                    | {
                        'dir-name'?: string | undefined
                        'file-name'?: string | undefined
                      }
                    | undefined
                  'file-modify'?:
                    | {
                        'file-name'?: string | undefined
                        privilege?: number | undefined
                      }
                    | undefined
                  'file-rename'?:
                    | {
                        'dest-file'?: string | undefined
                        'source-file'?: string | undefined
                      }
                    | undefined
                  'file-replace'?:
                    | {
                        'dest-string'?: string | undefined
                        'file-name'?: string | undefined
                        line?: number | undefined
                        'origin-string'?: string | undefined
                      }
                    | undefined
                  'http-abort'?:
                    | {
                        code?: string | undefined
                        method?: string | undefined
                        path?: string | undefined
                        port?: number | undefined
                        proxy_ports: number[]
                        target: string
                      }
                    | undefined
                  'http-config'?:
                    | {
                        file_path?: string | undefined
                      }
                    | undefined
                  'http-delay'?:
                    | {
                        code?: string | undefined
                        delay: string
                        method?: string | undefined
                        path?: string | undefined
                        port?: number | undefined
                        proxy_ports: number[]
                        target: string
                      }
                    | undefined
                  'http-request'?:
                    | {
                        count?: number | undefined
                        'enable-conn-pool'?: boolean | undefined
                        url?: string | undefined
                      }
                    | undefined
                  'jvm-exception'?:
                    | {
                        class?: string | undefined
                        exception?: string | undefined
                        method?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'jvm-gc'?:
                    | {
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'jvm-latency'?:
                    | {
                        class?: string | undefined
                        latency?: number | undefined
                        method?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'jvm-mysql'?:
                    | {
                        database?: string | undefined
                        exception?: string | undefined
                        latency?: number | undefined
                        mysqlConnectorVersion?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                        sqlType?: string | undefined
                        table?: string | undefined
                      }
                    | undefined
                  'jvm-return'?:
                    | {
                        class?: string | undefined
                        method?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                        value?: string | undefined
                      }
                    | undefined
                  'jvm-rule-data'?:
                    | {
                        pid?: number | undefined
                        port?: number | undefined
                        'rule-data'?: string | undefined
                      }
                    | undefined
                  'jvm-stress'?:
                    | {
                        'cpu-count'?: number | undefined
                        'mem-type'?: string | undefined
                        pid?: number | undefined
                        port?: number | undefined
                      }
                    | undefined
                  'kafka-fill'?:
                    | {
                        host?: string | undefined
                        maxBytes?: number | undefined
                        messageSize?: number | undefined
                        password?: string | undefined
                        port?: number | undefined
                        reloadCommand?: string | undefined
                        topic?: string | undefined
                        username?: string | undefined
                      }
                    | undefined
                  'kafka-flood'?:
                    | {
                        host?: string | undefined
                        messageSize?: number | undefined
                        password?: string | undefined
                        port?: number | undefined
                        threads?: number | undefined
                        topic?: string | undefined
                        username?: string | undefined
                      }
                    | undefined
                  'kafka-io'?:
                    | {
                        configFile?: string | undefined
                        nonReadable?: boolean | undefined
                        nonWritable?: boolean | undefined
                        topic?: string | undefined
                      }
                    | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  'network-bandwidth'?:
                    | {
                        buffer: number
                        device?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        limit: number
                        minburst?: number | undefined
                        peakrate?: number | undefined
                        rate: string
                      }
                    | undefined
                  'network-corrupt'?:
                    | {
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        percent?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-delay'?:
                    | {
                        'accept-tcp-flags'?: string | undefined
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        jitter?: string | undefined
                        latency?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-dns'?:
                    | {
                        'dns-domain-name'?: string | undefined
                        'dns-ip'?: string | undefined
                        'dns-server'?: string | undefined
                      }
                    | undefined
                  'network-down'?:
                    | {
                        device?: string | undefined
                        duration?: string | undefined
                      }
                    | undefined
                  'network-duplicate'?:
                    | {
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        percent?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-flood'?:
                    | {
                        duration: string
                        'ip-address'?: string | undefined
                        parallel?: number | undefined
                        port?: string | undefined
                        rate: string
                      }
                    | undefined
                  'network-loss'?:
                    | {
                        correlation?: string | undefined
                        device?: string | undefined
                        'egress-port'?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                        percent?: string | undefined
                        'source-port'?: string | undefined
                      }
                    | undefined
                  'network-partition'?:
                    | {
                        'accept-tcp-flags'?: string | undefined
                        device?: string | undefined
                        direction?: string | undefined
                        hostname?: string | undefined
                        'ip-address'?: string | undefined
                        'ip-protocol'?: string | undefined
                      }
                    | undefined
                  process?:
                    | {
                        process?: string | undefined
                        recoverCmd?: string | undefined
                        signal?: number | undefined
                      }
                    | undefined
                  'redis-cacheLimit'?:
                    | {
                        addr?: string | undefined
                        cacheSize?: string | undefined
                        password?: string | undefined
                        percent?: string | undefined
                      }
                    | undefined
                  'redis-expiration'?:
                    | {
                        addr?: string | undefined
                        expiration?: string | undefined
                        key?: string | undefined
                        option?: string | undefined
                        password?: string | undefined
                      }
                    | undefined
                  'redis-penetration'?:
                    | {
                        addr?: string | undefined
                        password?: string | undefined
                        requestNum?: number | undefined
                      }
                    | undefined
                  'redis-restart'?:
                    | {
                        addr?: string | undefined
                        conf?: string | undefined
                        flushConfig?: boolean | undefined
                        password?: string | undefined
                        redisPath?: boolean | undefined
                      }
                    | undefined
                  'redis-stop'?:
                    | {
                        addr?: string | undefined
                        conf?: string | undefined
                        flushConfig?: boolean | undefined
                        password?: string | undefined
                        redisPath?: boolean | undefined
                      }
                    | undefined
                  selector?:
                    | {
                        annotationSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        expressionSelectors?:
                          | {
                              key: string
                              operator: string
                              values?: string[] | undefined
                            }[]
                          | undefined
                        fieldSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        labelSelectors?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        namespaces?: string[] | undefined
                        physicalMachines?:
                          | {
                              [key: string]: string[]
                            }
                          | undefined
                      }
                    | undefined
                  'stress-cpu'?:
                    | {
                        load?: number | undefined
                        options?: string[] | undefined
                        workers?: number | undefined
                      }
                    | undefined
                  'stress-mem'?:
                    | {
                        options?: string[] | undefined
                        size?: string | undefined
                      }
                    | undefined
                  uid?: string | undefined
                  user_defined?:
                    | {
                        attackCmd?: string | undefined
                        recoverCmd?: string | undefined
                      }
                    | undefined
                  value?: string | undefined
                  vm?:
                    | {
                        'vm-name'?: string | undefined
                      }
                    | undefined
                }
              | undefined
            podChaos?:
              | {
                  action: 'pod-kill' | 'pod-failure' | 'container-kill'
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  gracePeriod?: number | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  value?: string | undefined
                }
              | undefined
            schedule: string
            startingDeadlineSeconds?: (number | null) | undefined
            stressChaos?:
              | {
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  stressngStressors?: string | undefined
                  stressors?:
                    | {
                        cpu?:
                          | {
                              load?: number | undefined
                              options?: string[] | undefined
                              workers: number
                            }
                          | undefined
                        memory?:
                          | {
                              oomScoreAdj?: number | undefined
                              options?: string[] | undefined
                              size?: string | undefined
                              workers: number
                            }
                          | undefined
                      }
                    | undefined
                  value?: string | undefined
                }
              | undefined
            timeChaos?:
              | {
                  clockIds?: string[] | undefined
                  containerNames?: string[] | undefined
                  duration?: string | undefined
                  mode:
                    | 'one'
                    | 'all'
                    | 'fixed'
                    | 'fixed-percent'
                    | 'random-max-percent'
                  selector: {
                    annotationSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    expressionSelectors?:
                      | {
                          key: string
                          operator: string
                          values?: string[] | undefined
                        }[]
                      | undefined
                    fieldSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    labelSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    namespaces?: string[] | undefined
                    nodeSelectors?:
                      | {
                          [key: string]: string
                        }
                      | undefined
                    nodes?: string[] | undefined
                    podPhaseSelectors?: string[] | undefined
                    pods?:
                      | {
                          [key: string]: string[]
                        }
                      | undefined
                  }
                  timeOffset: string
                  value?: string | undefined
                }
              | undefined
            type: string
          }
        | undefined
      statusCheck?:
        | {
            duration?: string | undefined
            failureThreshold?: number | undefined
            http?:
              | {
                  body?: string | undefined
                  criteria: {
                    statusCode: string
                  }
                  headers?:
                    | {
                        [key: string]: string[]
                      }
                    | undefined
                  method?: ('GET' | 'POST') | undefined
                  url: string
                }
              | undefined
            intervalSeconds?: number | undefined
            mode?: ('Synchronous' | 'Continuous') | undefined
            recordsHistoryLimit?: number | undefined
            successThreshold?: number | undefined
            timeoutSeconds?: number | undefined
            type: 'HTTP'
          }
        | undefined
      stressChaos?:
        | {
            containerNames?: string[] | undefined
            duration?: string | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            stressngStressors?: string | undefined
            stressors?:
              | {
                  cpu?:
                    | {
                        load?: number | undefined
                        options?: string[] | undefined
                        workers: number
                      }
                    | undefined
                  memory?:
                    | {
                        oomScoreAdj?: number | undefined
                        options?: string[] | undefined
                        size?: string | undefined
                        workers: number
                      }
                    | undefined
                }
              | undefined
            value?: string | undefined
          }
        | undefined
      task?:
        | {
            container?:
              | {
                  args?: string[] | undefined
                  command?: string[] | undefined
                  env?:
                    | {
                        name: string
                        value?: string | undefined
                        valueFrom?:
                          | {
                              configMapKeyRef?:
                                | {
                                    key: string
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                              fieldRef?:
                                | {
                                    apiVersion?: string | undefined
                                    fieldPath: string
                                  }
                                | undefined
                              resourceFieldRef?:
                                | {
                                    containerName?: string | undefined
                                    divisor?: (number | string) | undefined
                                    resource: string
                                  }
                                | undefined
                              secretKeyRef?:
                                | {
                                    key: string
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                            }
                          | undefined
                      }[]
                    | undefined
                  envFrom?:
                    | {
                        configMapRef?:
                          | {
                              name?: string | undefined
                              optional?: boolean | undefined
                            }
                          | undefined
                        prefix?: string | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                              optional?: boolean | undefined
                            }
                          | undefined
                      }[]
                    | undefined
                  image?: string | undefined
                  imagePullPolicy?: string | undefined
                  lifecycle?:
                    | {
                        postStart?:
                          | {
                              exec?:
                                | {
                                    command?: string[] | undefined
                                  }
                                | undefined
                              httpGet?:
                                | {
                                    host?: string | undefined
                                    httpHeaders?:
                                      | {
                                          name: string
                                          value: string
                                        }[]
                                      | undefined
                                    path?: string | undefined
                                    port: number | string
                                    scheme?: string | undefined
                                  }
                                | undefined
                              tcpSocket?:
                                | {
                                    host?: string | undefined
                                    port: number | string
                                  }
                                | undefined
                            }
                          | undefined
                        preStop?:
                          | {
                              exec?:
                                | {
                                    command?: string[] | undefined
                                  }
                                | undefined
                              httpGet?:
                                | {
                                    host?: string | undefined
                                    httpHeaders?:
                                      | {
                                          name: string
                                          value: string
                                        }[]
                                      | undefined
                                    path?: string | undefined
                                    port: number | string
                                    scheme?: string | undefined
                                  }
                                | undefined
                              tcpSocket?:
                                | {
                                    host?: string | undefined
                                    port: number | string
                                  }
                                | undefined
                            }
                          | undefined
                      }
                    | undefined
                  livenessProbe?:
                    | {
                        exec?:
                          | {
                              command?: string[] | undefined
                            }
                          | undefined
                        failureThreshold?: number | undefined
                        grpc?:
                          | {
                              port: number
                              service?: string | undefined
                            }
                          | undefined
                        httpGet?:
                          | {
                              host?: string | undefined
                              httpHeaders?:
                                | {
                                    name: string
                                    value: string
                                  }[]
                                | undefined
                              path?: string | undefined
                              port: number | string
                              scheme?: string | undefined
                            }
                          | undefined
                        initialDelaySeconds?: number | undefined
                        periodSeconds?: number | undefined
                        successThreshold?: number | undefined
                        tcpSocket?:
                          | {
                              host?: string | undefined
                              port: number | string
                            }
                          | undefined
                        terminationGracePeriodSeconds?: number | undefined
                        timeoutSeconds?: number | undefined
                      }
                    | undefined
                  name: string
                  ports?:
                    | {
                        containerPort: number
                        hostIP?: string | undefined
                        hostPort?: number | undefined
                        name?: string | undefined
                        protocol?: string | undefined
                      }[]
                    | undefined
                  readinessProbe?:
                    | {
                        exec?:
                          | {
                              command?: string[] | undefined
                            }
                          | undefined
                        failureThreshold?: number | undefined
                        grpc?:
                          | {
                              port: number
                              service?: string | undefined
                            }
                          | undefined
                        httpGet?:
                          | {
                              host?: string | undefined
                              httpHeaders?:
                                | {
                                    name: string
                                    value: string
                                  }[]
                                | undefined
                              path?: string | undefined
                              port: number | string
                              scheme?: string | undefined
                            }
                          | undefined
                        initialDelaySeconds?: number | undefined
                        periodSeconds?: number | undefined
                        successThreshold?: number | undefined
                        tcpSocket?:
                          | {
                              host?: string | undefined
                              port: number | string
                            }
                          | undefined
                        terminationGracePeriodSeconds?: number | undefined
                        timeoutSeconds?: number | undefined
                      }
                    | undefined
                  resources?:
                    | {
                        limits?:
                          | {
                              [key: string]: number | string
                            }
                          | undefined
                        requests?:
                          | {
                              [key: string]: number | string
                            }
                          | undefined
                      }
                    | undefined
                  securityContext?:
                    | {
                        allowPrivilegeEscalation?: boolean | undefined
                        capabilities?:
                          | {
                              add?: string[] | undefined
                              drop?: string[] | undefined
                            }
                          | undefined
                        privileged?: boolean | undefined
                        procMount?: string | undefined
                        readOnlyRootFilesystem?: boolean | undefined
                        runAsGroup?: number | undefined
                        runAsNonRoot?: boolean | undefined
                        runAsUser?: number | undefined
                        seLinuxOptions?:
                          | {
                              level?: string | undefined
                              role?: string | undefined
                              type?: string | undefined
                              user?: string | undefined
                            }
                          | undefined
                        seccompProfile?:
                          | {
                              localhostProfile?: string | undefined
                              type: string
                            }
                          | undefined
                        windowsOptions?:
                          | {
                              gmsaCredentialSpec?: string | undefined
                              gmsaCredentialSpecName?: string | undefined
                              hostProcess?: boolean | undefined
                              runAsUserName?: string | undefined
                            }
                          | undefined
                      }
                    | undefined
                  startupProbe?:
                    | {
                        exec?:
                          | {
                              command?: string[] | undefined
                            }
                          | undefined
                        failureThreshold?: number | undefined
                        grpc?:
                          | {
                              port: number
                              service?: string | undefined
                            }
                          | undefined
                        httpGet?:
                          | {
                              host?: string | undefined
                              httpHeaders?:
                                | {
                                    name: string
                                    value: string
                                  }[]
                                | undefined
                              path?: string | undefined
                              port: number | string
                              scheme?: string | undefined
                            }
                          | undefined
                        initialDelaySeconds?: number | undefined
                        periodSeconds?: number | undefined
                        successThreshold?: number | undefined
                        tcpSocket?:
                          | {
                              host?: string | undefined
                              port: number | string
                            }
                          | undefined
                        terminationGracePeriodSeconds?: number | undefined
                        timeoutSeconds?: number | undefined
                      }
                    | undefined
                  stdin?: boolean | undefined
                  stdinOnce?: boolean | undefined
                  terminationMessagePath?: string | undefined
                  terminationMessagePolicy?: string | undefined
                  tty?: boolean | undefined
                  volumeDevices?:
                    | {
                        devicePath: string
                        name: string
                      }[]
                    | undefined
                  volumeMounts?:
                    | {
                        mountPath: string
                        mountPropagation?: string | undefined
                        name: string
                        readOnly?: boolean | undefined
                        subPath?: string | undefined
                        subPathExpr?: string | undefined
                      }[]
                    | undefined
                  workingDir?: string | undefined
                }
              | undefined
            volumes?:
              | {
                  awsElasticBlockStore?:
                    | {
                        fsType?: string | undefined
                        partition?: number | undefined
                        readOnly?: boolean | undefined
                        volumeID: string
                      }
                    | undefined
                  azureDisk?:
                    | {
                        cachingMode?: string | undefined
                        diskName: string
                        diskURI: string
                        fsType?: string | undefined
                        kind?: string | undefined
                        readOnly?: boolean | undefined
                      }
                    | undefined
                  azureFile?:
                    | {
                        readOnly?: boolean | undefined
                        secretName: string
                        shareName: string
                      }
                    | undefined
                  cephfs?:
                    | {
                        monitors: string[]
                        path?: string | undefined
                        readOnly?: boolean | undefined
                        secretFile?: string | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                        user?: string | undefined
                      }
                    | undefined
                  cinder?:
                    | {
                        fsType?: string | undefined
                        readOnly?: boolean | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                        volumeID: string
                      }
                    | undefined
                  configMap?:
                    | {
                        defaultMode?: number | undefined
                        items?:
                          | {
                              key: string
                              mode?: number | undefined
                              path: string
                            }[]
                          | undefined
                        name?: string | undefined
                        optional?: boolean | undefined
                      }
                    | undefined
                  csi?:
                    | {
                        driver: string
                        fsType?: string | undefined
                        nodePublishSecretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                        readOnly?: boolean | undefined
                        volumeAttributes?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                      }
                    | undefined
                  downwardAPI?:
                    | {
                        defaultMode?: number | undefined
                        items?:
                          | {
                              fieldRef?:
                                | {
                                    apiVersion?: string | undefined
                                    fieldPath: string
                                  }
                                | undefined
                              mode?: number | undefined
                              path: string
                              resourceFieldRef?:
                                | {
                                    containerName?: string | undefined
                                    divisor?: (number | string) | undefined
                                    resource: string
                                  }
                                | undefined
                            }[]
                          | undefined
                      }
                    | undefined
                  emptyDir?:
                    | {
                        medium?: string | undefined
                        sizeLimit?: (number | string) | undefined
                      }
                    | undefined
                  ephemeral?:
                    | {
                        volumeClaimTemplate?:
                          | {
                              metadata?: object | undefined
                              spec: {
                                accessModes?: string[] | undefined
                                dataSource?:
                                  | {
                                      apiGroup?: string | undefined
                                      kind: string
                                      name: string
                                    }
                                  | undefined
                                dataSourceRef?:
                                  | {
                                      apiGroup?: string | undefined
                                      kind: string
                                      name: string
                                    }
                                  | undefined
                                resources?:
                                  | {
                                      limits?:
                                        | {
                                            [key: string]: number | string
                                          }
                                        | undefined
                                      requests?:
                                        | {
                                            [key: string]: number | string
                                          }
                                        | undefined
                                    }
                                  | undefined
                                selector?:
                                  | {
                                      matchExpressions?:
                                        | {
                                            key: string
                                            operator: string
                                            values?: string[] | undefined
                                          }[]
                                        | undefined
                                      matchLabels?:
                                        | {
                                            [key: string]: string
                                          }
                                        | undefined
                                    }
                                  | undefined
                                storageClassName?: string | undefined
                                volumeMode?: string | undefined
                                volumeName?: string | undefined
                              }
                            }
                          | undefined
                      }
                    | undefined
                  fc?:
                    | {
                        fsType?: string | undefined
                        lun?: number | undefined
                        readOnly?: boolean | undefined
                        targetWWNs?: string[] | undefined
                        wwids?: string[] | undefined
                      }
                    | undefined
                  flexVolume?:
                    | {
                        driver: string
                        fsType?: string | undefined
                        options?:
                          | {
                              [key: string]: string
                            }
                          | undefined
                        readOnly?: boolean | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                      }
                    | undefined
                  flocker?:
                    | {
                        datasetName?: string | undefined
                        datasetUUID?: string | undefined
                      }
                    | undefined
                  gcePersistentDisk?:
                    | {
                        fsType?: string | undefined
                        partition?: number | undefined
                        pdName: string
                        readOnly?: boolean | undefined
                      }
                    | undefined
                  gitRepo?:
                    | {
                        directory?: string | undefined
                        repository: string
                        revision?: string | undefined
                      }
                    | undefined
                  glusterfs?:
                    | {
                        endpoints: string
                        path: string
                        readOnly?: boolean | undefined
                      }
                    | undefined
                  hostPath?:
                    | {
                        path: string
                        type?: string | undefined
                      }
                    | undefined
                  iscsi?:
                    | {
                        chapAuthDiscovery?: boolean | undefined
                        chapAuthSession?: boolean | undefined
                        fsType?: string | undefined
                        initiatorName?: string | undefined
                        iqn: string
                        iscsiInterface?: string | undefined
                        lun: number
                        portals?: string[] | undefined
                        readOnly?: boolean | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                        targetPortal: string
                      }
                    | undefined
                  name: string
                  nfs?:
                    | {
                        path: string
                        readOnly?: boolean | undefined
                        server: string
                      }
                    | undefined
                  persistentVolumeClaim?:
                    | {
                        claimName: string
                        readOnly?: boolean | undefined
                      }
                    | undefined
                  photonPersistentDisk?:
                    | {
                        fsType?: string | undefined
                        pdID: string
                      }
                    | undefined
                  portworxVolume?:
                    | {
                        fsType?: string | undefined
                        readOnly?: boolean | undefined
                        volumeID: string
                      }
                    | undefined
                  projected?:
                    | {
                        defaultMode?: number | undefined
                        sources?:
                          | {
                              configMap?:
                                | {
                                    items?:
                                      | {
                                          key: string
                                          mode?: number | undefined
                                          path: string
                                        }[]
                                      | undefined
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                              downwardAPI?:
                                | {
                                    items?:
                                      | {
                                          fieldRef?:
                                            | {
                                                apiVersion?: string | undefined
                                                fieldPath: string
                                              }
                                            | undefined
                                          mode?: number | undefined
                                          path: string
                                          resourceFieldRef?:
                                            | {
                                                containerName?:
                                                  | string
                                                  | undefined
                                                divisor?:
                                                  | (number | string)
                                                  | undefined
                                                resource: string
                                              }
                                            | undefined
                                        }[]
                                      | undefined
                                  }
                                | undefined
                              secret?:
                                | {
                                    items?:
                                      | {
                                          key: string
                                          mode?: number | undefined
                                          path: string
                                        }[]
                                      | undefined
                                    name?: string | undefined
                                    optional?: boolean | undefined
                                  }
                                | undefined
                              serviceAccountToken?:
                                | {
                                    audience?: string | undefined
                                    expirationSeconds?: number | undefined
                                    path: string
                                  }
                                | undefined
                            }[]
                          | undefined
                      }
                    | undefined
                  quobyte?:
                    | {
                        group?: string | undefined
                        readOnly?: boolean | undefined
                        registry: string
                        tenant?: string | undefined
                        user?: string | undefined
                        volume: string
                      }
                    | undefined
                  rbd?:
                    | {
                        fsType?: string | undefined
                        image: string
                        keyring?: string | undefined
                        monitors: string[]
                        pool?: string | undefined
                        readOnly?: boolean | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                        user?: string | undefined
                      }
                    | undefined
                  scaleIO?:
                    | {
                        fsType?: string | undefined
                        gateway: string
                        protectionDomain?: string | undefined
                        readOnly?: boolean | undefined
                        secretRef: {
                          name?: string | undefined
                        }
                        sslEnabled?: boolean | undefined
                        storageMode?: string | undefined
                        storagePool?: string | undefined
                        system: string
                        volumeName?: string | undefined
                      }
                    | undefined
                  secret?:
                    | {
                        defaultMode?: number | undefined
                        items?:
                          | {
                              key: string
                              mode?: number | undefined
                              path: string
                            }[]
                          | undefined
                        optional?: boolean | undefined
                        secretName?: string | undefined
                      }
                    | undefined
                  storageos?:
                    | {
                        fsType?: string | undefined
                        readOnly?: boolean | undefined
                        secretRef?:
                          | {
                              name?: string | undefined
                            }
                          | undefined
                        volumeName?: string | undefined
                        volumeNamespace?: string | undefined
                      }
                    | undefined
                  vsphereVolume?:
                    | {
                        fsType?: string | undefined
                        storagePolicyID?: string | undefined
                        storagePolicyName?: string | undefined
                        volumePath: string
                      }
                    | undefined
                }[]
              | undefined
          }
        | undefined
      templateType: string
      timeChaos?:
        | {
            clockIds?: string[] | undefined
            containerNames?: string[] | undefined
            duration?: string | undefined
            mode:
              | 'one'
              | 'all'
              | 'fixed'
              | 'fixed-percent'
              | 'random-max-percent'
            selector: {
              annotationSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              expressionSelectors?:
                | {
                    key: string
                    operator: string
                    values?: string[] | undefined
                  }[]
                | undefined
              fieldSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              labelSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              namespaces?: string[] | undefined
              nodeSelectors?:
                | {
                    [key: string]: string
                  }
                | undefined
              nodes?: string[] | undefined
              podPhaseSelectors?: string[] | undefined
              pods?:
                | {
                    [key: string]: string[]
                  }
                | undefined
            }
            timeOffset: string
            value?: string | undefined
          }
        | undefined
    }[]
  }
  status?:
    | {
        conditions?:
          | {
              reason: string
              startTime?: string | undefined
              status: string
              type: string
            }[]
          | undefined
        endTime?: string | undefined
        entryNode?: string | undefined
        startTime?: string | undefined
      }
    | undefined
}
export type OrgChaosMeshV1Alpha1WorkflowList = {
  apiVersion?: string | undefined
  items: OrgChaosMeshV1Alpha1Workflow[]
  kind?: string | undefined
  metadata?: IoK8SApimachineryPkgApisMetaV1ListMeta | undefined
}
